"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@keystatic";
exports.ids = ["vendor-chunks/@keystatic"];
exports.modules = {

/***/ "(ssr)/./node_modules/@keystatic/core/dist/api-daad6cc5.node.js":
/*!****************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/api-daad6cc5.node.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ component)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-aaf578e2.node.js */ \"(ssr)/./node_modules/@keystatic/core/dist/index-aaf578e2.node.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(ssr)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n\n\n\n\n\n// this is written like this rather than ArrayField<ComponentSchema> to avoid TypeScript erroring about circularity\nfunction component(options) {\n  return options;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvYXBpLWRhYWQ2Y2M1Lm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkI7QUFDTztBQUNuQjtBQUNrQjs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtleXN0YXRpYy90ZW1wbGF0ZXMtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BrZXlzdGF0aWMvY29yZS9kaXN0L2FwaS1kYWFkNmNjNS5ub2RlLmpzP2MzZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC9qc3gtcnVudGltZSc7XG5pbXBvcnQgJy4vaW5kZXgtYWFmNTc4ZTIubm9kZS5qcyc7XG5pbXBvcnQgJ2VtZXJ5JztcbmltcG9ydCAnQGJyYWludHJlZS9zYW5pdGl6ZS11cmwnO1xuXG4vLyB0aGlzIGlzIHdyaXR0ZW4gbGlrZSB0aGlzIHJhdGhlciB0aGFuIEFycmF5RmllbGQ8Q29tcG9uZW50U2NoZW1hPiB0byBhdm9pZCBUeXBlU2NyaXB0IGVycm9yaW5nIGFib3V0IGNpcmN1bGFyaXR5XG5mdW5jdGlvbiBjb21wb25lbnQob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucztcbn1cblxuZXhwb3J0IHsgY29tcG9uZW50IGFzIGMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@keystatic/core/dist/api-daad6cc5.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@keystatic/core/dist/index-1a9da0fb.node.js":
/*!******************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/index-1a9da0fb.node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B: () => (/* binding */ BlocksFieldInput),\n/* harmony export */   C: () => (/* binding */ CheckboxFieldInput),\n/* harmony export */   D: () => (/* binding */ DateFieldInput),\n/* harmony export */   F: () => (/* binding */ FieldDataError),\n/* harmony export */   I: () => (/* binding */ ImageFieldInput),\n/* harmony export */   M: () => (/* binding */ MultiRelationshipInput),\n/* harmony export */   N: () => (/* binding */ NumberFieldInput),\n/* harmony export */   P: () => (/* binding */ PathReferenceInput),\n/* harmony export */   R: () => (/* binding */ RelationshipInput),\n/* harmony export */   S: () => (/* binding */ SelectFieldInput),\n/* harmony export */   U: () => (/* binding */ UrlFieldInput),\n/* harmony export */   a: () => (/* binding */ CloudImageFieldInput),\n/* harmony export */   b: () => (/* binding */ basicFormFieldWithSimpleReaderParse),\n/* harmony export */   c: () => (/* binding */ assertRequired),\n/* harmony export */   d: () => (/* binding */ DatetimeFieldInput),\n/* harmony export */   e: () => (/* binding */ FileFieldInput),\n/* harmony export */   f: () => (/* binding */ MultiselectFieldInput),\n/* harmony export */   g: () => (/* binding */ SlugFieldInput),\n/* harmony export */   h: () => (/* binding */ DocumentFieldInput),\n/* harmony export */   i: () => (/* binding */ serializeMarkdoc),\n/* harmony export */   j: () => (/* binding */ getDefaultValue),\n/* harmony export */   k: () => (/* binding */ serializeFromEditorState),\n/* harmony export */   l: () => (/* binding */ prosemirrorToYXmlFragment),\n/* harmony export */   m: () => (/* binding */ createEditorStateFromYJS),\n/* harmony export */   n: () => (/* binding */ normalizeDocumentFieldChildren),\n/* harmony export */   o: () => (/* binding */ parseToEditorStateMDX),\n/* harmony export */   p: () => (/* binding */ parseToEditorState),\n/* harmony export */   q: () => (/* binding */ serializeFromEditorStateMDX),\n/* harmony export */   r: () => (/* binding */ createEditorSchema),\n/* harmony export */   s: () => (/* binding */ slugify),\n/* harmony export */   t: () => (/* binding */ text),\n/* harmony export */   u: () => (/* binding */ IntegerFieldInput),\n/* harmony export */   v: () => (/* binding */ validateText)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n\n\nclass FieldDataError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'FieldDataError';\n  }\n}\n\nfunction assertRequired(value, validation, label) {\n  if (value === null && validation !== null && validation !== void 0 && validation.isRequired) {\n    throw new FieldDataError(`${label} is required`);\n  }\n}\nfunction basicFormFieldWithSimpleReaderParse(config) {\n  return {\n    kind: 'form',\n    Input: config.Input,\n    defaultValue: config.defaultValue,\n    parse: config.parse,\n    serialize: config.serialize,\n    validate: config.validate,\n    reader: {\n      parse(value) {\n        return config.validate(config.parse(value));\n      }\n    },\n    label: config.label\n  };\n}\n\n// this is used in react-server environments to avoid bundling UI when the reader API is used\n// if you added a new field and get an error that there's missing a missing export here,\n// you probably just need to add another empty export here\n\nfunction empty() {\n  throw new Error(\"unexpected call to function that shouldn't be called in React server component environment\");\n}\nlet SlugFieldInput = empty,\n  TextFieldInput = empty,\n  UrlFieldInput = empty,\n  SelectFieldInput = empty,\n  RelationshipInput = empty,\n  PathReferenceInput = empty,\n  MultiselectFieldInput = empty,\n  MultiRelationshipInput = empty,\n  IntegerFieldInput = empty,\n  NumberFieldInput = empty,\n  ImageFieldInput = empty,\n  FileFieldInput = empty,\n  DatetimeFieldInput = empty,\n  DateFieldInput = empty,\n  CloudImageFieldInput = empty,\n  BlocksFieldInput = empty,\n  DocumentFieldInput = empty,\n  CheckboxFieldInput = empty,\n  createEditorSchema = empty,\n  getDefaultValue = empty,\n  parseToEditorState = empty,\n  serializeFromEditorState = empty,\n  parseToEditorStateMDX = empty,\n  serializeFromEditorStateMDX = empty,\n  createEditorStateFromYJS = empty,\n  prosemirrorToYXmlFragment = empty,\n  normalizeDocumentFieldChildren = empty,\n  slugify = empty,\n  serializeMarkdoc = empty;\n\nfunction validateText(val, min, max, fieldLabel, slugInfo, pattern) {\n  if (val.length < min) {\n    if (min === 1) {\n      return `${fieldLabel} must not be empty`;\n    } else {\n      return `${fieldLabel} must be at least ${min} characters long`;\n    }\n  }\n  if (val.length > max) {\n    return `${fieldLabel} must be no longer than ${max} characters`;\n  }\n  if (pattern && !pattern.regex.test(val)) {\n    return pattern.message || `${fieldLabel} must match the pattern ${pattern.regex}`;\n  }\n  if (slugInfo) {\n    if (val === '') {\n      return `${fieldLabel} must not be empty`;\n    }\n    if (val === '..') {\n      return `${fieldLabel} must not be ..`;\n    }\n    if (val === '.') {\n      return `${fieldLabel} must not be .`;\n    }\n    if (slugInfo.glob === '**') {\n      const split = val.split('/');\n      if (split.some(s => s === '..')) {\n        return `${fieldLabel} must not contain ..`;\n      }\n      if (split.some(s => s === '.')) {\n        return `${fieldLabel} must not be .`;\n      }\n    }\n    if ((slugInfo.glob === '*' ? /[\\\\/]/ : /[\\\\]/).test(val)) {\n      return `${fieldLabel} must not contain slashes`;\n    }\n    if (/^\\s|\\s$/.test(val)) {\n      return `${fieldLabel} must not start or end with spaces`;\n    }\n    if (slugInfo.slugs.has(val)) {\n      return `${fieldLabel} must be unique`;\n    }\n  }\n}\n\nfunction parseAsNormalField(value) {\n  if (value === undefined) {\n    return '';\n  }\n  if (typeof value !== 'string') {\n    throw new FieldDataError('Must be a string');\n  }\n  return value;\n}\nconst emptySet = new Set();\nfunction text({\n  label,\n  defaultValue = '',\n  validation: {\n    length: {\n      max = Infinity,\n      min = 0\n    } = {},\n    pattern,\n    isRequired\n  } = {},\n  description,\n  multiline = false\n}) {\n  min = Math.max(isRequired ? 1 : 0, min);\n  function validate(value, slugField) {\n    const message = validateText(value, min, max, label, slugField, pattern);\n    if (message !== undefined) {\n      throw new FieldDataError(message);\n    }\n    return value;\n  }\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TextFieldInput, {\n        label: label,\n        description: description,\n        min: min,\n        max: max,\n        multiline: multiline,\n        pattern: pattern,\n        ...props\n      });\n    },\n    defaultValue() {\n      return typeof defaultValue === 'string' ? defaultValue : defaultValue();\n    },\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return args.slug;\n      }\n      return parseAsNormalField(value);\n    },\n    serialize(value) {\n      return {\n        value: value === '' ? undefined : value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        slug: value,\n        value: undefined\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseAsNormalField(value);\n        return validate(parsed, undefined);\n      },\n      parseWithSlug(_value, args) {\n        validate(parseAsNormalField(args.slug), {\n          glob: args.glob,\n          slugs: emptySet\n        });\n        return null;\n      }\n    },\n    validate(value, args) {\n      return validate(value, args === null || args === void 0 ? void 0 : args.slugField);\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@keystatic/core/dist/index-1a9da0fb.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@keystatic/core/dist/index-39d45899.node.js":
/*!******************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/index-39d45899.node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ integer)\n/* harmony export */ });\n/* harmony import */ var _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-1a9da0fb.node.js */ \"(ssr)/./node_modules/@keystatic/core/dist/index-1a9da0fb.node.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n\n\n\nfunction validateInteger(validation, value, label) {\n  if (value !== null && (typeof value !== 'number' || !Number.isInteger(value))) {\n    return `${label} must be a whole number`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if (value !== null) {\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined && value < validation.min) {\n      return `${label} must be at least ${validation.min}`;\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined && value > validation.max) {\n      return `${label} must be at most ${validation.max}`;\n    }\n  }\n}\n\nfunction integer({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_0__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_0__.u, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue !== null && defaultValue !== void 0 ? defaultValue : null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value === 'number') {\n        return value;\n      }\n      throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_0__.F('Must be a number');\n    },\n    validate(value) {\n      const message = validateInteger(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_0__.F(message);\n      }\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_0__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaW5kZXgtMzlkNDU4OTkubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0o7QUFDOUc7O0FBRXhDO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsT0FBTztBQUNyQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsT0FBTyxtQkFBbUIsZUFBZTtBQUN6RDtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU8sa0JBQWtCLGVBQWU7QUFDeEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsU0FBUywwREFBbUM7QUFDNUM7QUFDQTtBQUNBLDBCQUEwQixzREFBRyxDQUFDLHNEQUFpQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzREFBYztBQUM5QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNEQUFjO0FBQ2hDO0FBQ0EsTUFBTSwwREFBYztBQUNwQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUV3QiIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy9Aa2V5c3RhdGljL2NvcmUvZGlzdC9pbmRleC0zOWQ0NTg5OS5ub2RlLmpzP2IwMDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYiBhcyBiYXNpY0Zvcm1GaWVsZFdpdGhTaW1wbGVSZWFkZXJQYXJzZSwgdSBhcyBJbnRlZ2VyRmllbGRJbnB1dCwgRiBhcyBGaWVsZERhdGFFcnJvciwgYyBhcyBhc3NlcnRSZXF1aXJlZCB9IGZyb20gJy4vaW5kZXgtMWE5ZGEwZmIubm9kZS5qcyc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdyZWFjdC9qc3gtcnVudGltZSc7XG5cbmZ1bmN0aW9uIHZhbGlkYXRlSW50ZWdlcih2YWxpZGF0aW9uLCB2YWx1ZSwgbGFiZWwpIHtcbiAgaWYgKHZhbHVlICE9PSBudWxsICYmICh0eXBlb2YgdmFsdWUgIT09ICdudW1iZXInIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkpIHtcbiAgICByZXR1cm4gYCR7bGFiZWx9IG11c3QgYmUgYSB3aG9sZSBudW1iZXJgO1xuICB9XG4gIGlmICh2YWxpZGF0aW9uICE9PSBudWxsICYmIHZhbGlkYXRpb24gIT09IHZvaWQgMCAmJiB2YWxpZGF0aW9uLmlzUmVxdWlyZWQgJiYgdmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gYCR7bGFiZWx9IGlzIHJlcXVpcmVkYDtcbiAgfVxuICBpZiAodmFsdWUgIT09IG51bGwpIHtcbiAgICBpZiAoKHZhbGlkYXRpb24gPT09IG51bGwgfHwgdmFsaWRhdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmFsaWRhdGlvbi5taW4pICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgPCB2YWxpZGF0aW9uLm1pbikge1xuICAgICAgcmV0dXJuIGAke2xhYmVsfSBtdXN0IGJlIGF0IGxlYXN0ICR7dmFsaWRhdGlvbi5taW59YDtcbiAgICB9XG4gICAgaWYgKCh2YWxpZGF0aW9uID09PSBudWxsIHx8IHZhbGlkYXRpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbGlkYXRpb24ubWF4KSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlID4gdmFsaWRhdGlvbi5tYXgpIHtcbiAgICAgIHJldHVybiBgJHtsYWJlbH0gbXVzdCBiZSBhdCBtb3N0ICR7dmFsaWRhdGlvbi5tYXh9YDtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaW50ZWdlcih7XG4gIGxhYmVsLFxuICBkZWZhdWx0VmFsdWUsXG4gIHZhbGlkYXRpb24sXG4gIGRlc2NyaXB0aW9uXG59KSB7XG4gIHJldHVybiBiYXNpY0Zvcm1GaWVsZFdpdGhTaW1wbGVSZWFkZXJQYXJzZSh7XG4gICAgbGFiZWwsXG4gICAgSW5wdXQocHJvcHMpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovanN4KEludGVnZXJGaWVsZElucHV0LCB7XG4gICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICB2YWxpZGF0aW9uOiB2YWxpZGF0aW9uLFxuICAgICAgICAuLi5wcm9wc1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWUoKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdFZhbHVlICE9PSBudWxsICYmIGRlZmF1bHRWYWx1ZSAhPT0gdm9pZCAwID8gZGVmYXVsdFZhbHVlIDogbnVsbDtcbiAgICB9LFxuICAgIHBhcnNlKHZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBGaWVsZERhdGFFcnJvcignTXVzdCBiZSBhIG51bWJlcicpO1xuICAgIH0sXG4gICAgdmFsaWRhdGUodmFsdWUpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB2YWxpZGF0ZUludGVnZXIodmFsaWRhdGlvbiwgdmFsdWUsIGxhYmVsKTtcbiAgICAgIGlmIChtZXNzYWdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEZpZWxkRGF0YUVycm9yKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgYXNzZXJ0UmVxdWlyZWQodmFsdWUsIHZhbGlkYXRpb24sIGxhYmVsKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNlcmlhbGl6ZSh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWU6IHZhbHVlID09PSBudWxsID8gdW5kZWZpbmVkIDogdmFsdWVcbiAgICAgIH07XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IHsgaW50ZWdlciBhcyBpIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@keystatic/core/dist/index-39d45899.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@keystatic/core/dist/index-aaf578e2.node.js":
/*!******************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/index-aaf578e2.node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ markdoc),\n/* harmony export */   b: () => (/* binding */ getDirectoriesForTreeKey),\n/* harmony export */   c: () => (/* binding */ getCollectionPath),\n/* harmony export */   d: () => (/* binding */ document),\n/* harmony export */   e: () => (/* binding */ getSingletonFormat),\n/* harmony export */   f: () => (/* binding */ fixPath),\n/* harmony export */   g: () => (/* binding */ getSrcPrefix),\n/* harmony export */   h: () => (/* binding */ getSingletonPath),\n/* harmony export */   i: () => (/* binding */ blobSha),\n/* harmony export */   j: () => (/* binding */ getCollectionFormat),\n/* harmony export */   k: () => (/* binding */ getSlugGlobForCollection),\n/* harmony export */   l: () => (/* binding */ getDataFileExtension),\n/* harmony export */   m: () => (/* binding */ mdx),\n/* harmony export */   n: () => (/* binding */ getCollectionItemPath),\n/* harmony export */   o: () => (/* binding */ object),\n/* harmony export */   p: () => (/* binding */ getEntryDataFilepath),\n/* harmony export */   q: () => (/* binding */ getValueAtPropPath),\n/* harmony export */   r: () => (/* binding */ getTreeNodeAtPath),\n/* harmony export */   t: () => (/* binding */ treeEntriesToTreeNodes),\n/* harmony export */   u: () => (/* binding */ updateTreeWithChanges)\n/* harmony export */ });\n/* harmony import */ var _markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @markdoc/markdoc/dist/index.mjs */ \"(ssr)/./node_modules/@markdoc/markdoc/dist/index.mjs\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! emery/assertions */ \"(ssr)/./node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-1a9da0fb.node.js */ \"(ssr)/./node_modules/@keystatic/core/dist/index-1a9da0fb.node.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\n\n\n\n\n\nfunction object(fields, opts) {\n  return {\n    ...opts,\n    kind: 'object',\n    fields\n  };\n}\n\nfunction getValueAtPropPath(value, inputPath) {\n  const path = [...inputPath];\n  while (path.length) {\n    const key = path.shift();\n    value = value[key];\n  }\n  return value;\n}\nfunction transformProps(schema, value, visitors, path = []) {\n  if (schema.kind === 'form' || schema.kind === 'child') {\n    if (visitors[schema.kind]) {\n      return visitors[schema.kind](schema, value, path);\n    }\n    return value;\n  }\n  if (schema.kind === 'object') {\n    const val = Object.fromEntries(Object.entries(schema.fields).map(([key, val]) => {\n      return [key, transformProps(val, value[key], visitors, [...path, key])];\n    }));\n    if (visitors.object) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'array') {\n    const val = value.map((val, idx) => transformProps(schema.element, val, visitors, path.concat(idx)));\n    if (visitors.array) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'conditional') {\n    const discriminant = transformProps(schema.discriminant, value.discriminant, visitors, path.concat('discriminant'));\n    const conditionalVal = transformProps(schema.values[discriminant.toString()], value.value, visitors, path.concat('value'));\n    const val = {\n      discriminant,\n      value: conditionalVal\n    };\n    if (visitors.conditional) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\n\n// a v important note\n// marks in the markdown ast/html are represented quite differently to how they are in slate\n// if you had the markdown **something https://keystonejs.com something**\n// the bold node is the parent of the link node\n// but in slate, marks are only represented on text nodes\n\nconst currentlyActiveMarks = new Set();\nconst currentlyDisabledMarks = new Set();\nlet currentLink = null;\nfunction addMarkToChildren(mark, cb) {\n  const wasPreviouslyActive = currentlyActiveMarks.has(mark);\n  currentlyActiveMarks.add(mark);\n  try {\n    return cb();\n  } finally {\n    if (!wasPreviouslyActive) {\n      currentlyActiveMarks.delete(mark);\n    }\n  }\n}\nfunction setLinkForChildren(href, cb) {\n  // we'll only use the outer link\n  if (currentLink !== null) {\n    return cb();\n  }\n  currentLink = href;\n  try {\n    return cb();\n  } finally {\n    currentLink = null;\n  }\n}\n\n/**\n * This type is more strict than `Element & { type: 'link'; }` because `children`\n * is constrained to only contain Text nodes. This can't be assumed generally around the editor\n * (because of potentially future inline components or nested links(which are normalized away but the editor needs to not break if it happens))\n * but where this type is used, we're only going to allow links to contain Text and that's important\n * so that we know a block will never be inside an inline because Slate gets unhappy when that happens\n * (really the link inline should probably be a mark rather than an inline,\n * non-void inlines are probably always bad but that would imply changing the document\n * structure which would be such unnecessary breakage)\n */\n\nfunction getInlineNodes(text) {\n  const node = {\n    text\n  };\n  for (const mark of currentlyActiveMarks) {\n    if (!currentlyDisabledMarks.has(mark)) {\n      node[mark] = true;\n    }\n  }\n  if (currentLink !== null) {\n    return [{\n      text: ''\n    }, {\n      type: 'link',\n      href: currentLink,\n      children: [node]\n    }, {\n      text: ''\n    }];\n  }\n  return [node];\n}\n\nclass VariableChildFields extends Error {\n  constructor() {\n    super('There are a variable number of child fields');\n  }\n}\nfunction findSingleChildField(schema) {\n  try {\n    const result = _findConstantChildFields(schema, [], new Set());\n    if (result.length === 1) {\n      return result[0];\n    }\n    return;\n  } catch (err) {\n    if (err instanceof VariableChildFields) {\n      return;\n    }\n    throw err;\n  }\n}\nfunction _findConstantChildFields(schema, path, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return [];\n  }\n  seenSchemas.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return [];\n    case 'child':\n      return [{\n        relativePath: path,\n        options: schema.options,\n        kind: 'child'\n      }];\n    case 'conditional':\n      {\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'array':\n      {\n        if (schema.asChildTag) {\n          const child = _findConstantChildFields(schema.element, [], seenSchemas);\n          if (child.length > 1) {\n            return [];\n          }\n          return [{\n            kind: 'array',\n            asChildTag: schema.asChildTag,\n            field: schema,\n            relativePath: path,\n            child: child[0]\n          }];\n        }\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'object':\n      {\n        const paths = [];\n        for (const [key, value] of Object.entries(schema.fields)) {\n          paths.push(..._findConstantChildFields(value, path.concat(key), seenSchemas));\n        }\n        return paths;\n      }\n  }\n}\nfunction couldContainChildField(schema, seen = new Set()) {\n  if (seen.has(schema)) {\n    return false;\n  }\n  seen.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return false;\n    case 'child':\n      return true;\n    case 'conditional':\n      return Object.values(schema.values).some(value => couldContainChildField(value, seen));\n    case 'object':\n      return Object.keys(schema.fields).some(key => couldContainChildField(schema.fields[key], seen));\n    case 'array':\n      return couldContainChildField(schema.element, seen);\n  }\n}\n\nfunction inlineNodeFromMarkdoc(node) {\n  if (node.type === 'inline') {\n    return inlineChildrenFromMarkdoc(node.children);\n  }\n  if (node.type === 'link') {\n    return setLinkForChildren(node.attributes.href, () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'text') {\n    return getInlineNodes(node.attributes.content);\n  }\n  if (node.type === 'strong') {\n    return addMarkToChildren('bold', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'code') {\n    return addMarkToChildren('code', () => getInlineNodes(node.attributes.content));\n  }\n  if (node.type === 'em') {\n    return addMarkToChildren('italic', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 's') {\n    return addMarkToChildren('strikethrough', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'u') {\n      return addMarkToChildren('underline', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'kbd') {\n      return addMarkToChildren('keyboard', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sub') {\n      return addMarkToChildren('subscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sup') {\n      return addMarkToChildren('superscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n  }\n  if (node.type === 'softbreak') {\n    return getInlineNodes(' ');\n  }\n  if (node.type === 'hardbreak') {\n    return getInlineNodes('\\n');\n  }\n  if (node.tag === 'component-inline-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n    return {\n      type: 'component-inline-prop',\n      children: inlineFromMarkdoc(node.children),\n      propPath: node.attributes.propPath\n    };\n  }\n  throw new Error(`Unknown inline node type: ${node.type}`);\n}\nfunction inlineChildrenFromMarkdoc(nodes) {\n  return nodes.flatMap(inlineNodeFromMarkdoc);\n}\nfunction inlineFromMarkdoc(nodes) {\n  const transformedNodes = nodes.flatMap(inlineNodeFromMarkdoc);\n  const nextNodes = [];\n  let lastNode;\n  for (const [idx, node] of transformedNodes.entries()) {\n    var _lastNode;\n    if (node.type === undefined && node.text === '' && ((_lastNode = lastNode) === null || _lastNode === void 0 ? void 0 : _lastNode.type) === undefined && idx !== transformedNodes.length - 1) {\n      continue;\n    }\n    nextNodes.push(node);\n    lastNode = node;\n  }\n  if (!nextNodes.length) {\n    nextNodes.push({\n      text: ''\n    });\n  }\n  return nextNodes;\n}\nfunction fromMarkdoc(node, componentBlocks) {\n  const nodes = node.children.flatMap(x => fromMarkdocNode(x, componentBlocks));\n  if (nodes.length === 0) {\n    return [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n  }\n  if (nodes[nodes.length - 1].type !== 'paragraph') {\n    nodes.push({\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    });\n  }\n  return nodes;\n}\nfunction fromMarkdocNode(node, componentBlocks) {\n  if (node.type === 'blockquote') {\n    return {\n      type: 'blockquote',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'fence') {\n    const {\n      language,\n      content,\n      ...rest\n    } = node.attributes;\n    return {\n      type: 'code',\n      children: [{\n        text: content.replace(/\\n$/, '')\n      }],\n      ...(typeof language === 'string' ? {\n        language\n      } : {}),\n      ...rest\n    };\n  }\n  if (node.type === 'heading') {\n    return {\n      ...node.attributes,\n      level: node.attributes.level,\n      type: 'heading',\n      children: inlineFromMarkdoc(node.children)\n    };\n  }\n  if (node.type === 'list') {\n    return {\n      type: node.attributes.ordered ? 'ordered-list' : 'unordered-list',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'item') {\n    var _node$children$;\n    const children = [{\n      type: 'list-item-content',\n      children: node.children.length ? inlineFromMarkdoc([node.children[0]]) : [{\n        text: ''\n      }]\n    }];\n    if (((_node$children$ = node.children[1]) === null || _node$children$ === void 0 ? void 0 : _node$children$.type) === 'list') {\n      const list = node.children[1];\n      children.push({\n        type: list.attributes.ordered ? 'ordered-list' : 'unordered-list',\n        children: list.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      });\n    }\n    return {\n      type: 'list-item',\n      children\n    };\n  }\n  if (node.type === 'paragraph') {\n    if (node.children.length === 1 && node.children[0].type === 'inline' && node.children[0].children.length === 1 && node.children[0].children[0].type === 'image') {\n      var _image$attributes$tit;\n      const image = node.children[0].children[0];\n      return {\n        type: 'image',\n        src: decodeURI(image.attributes.src),\n        alt: image.attributes.alt,\n        title: (_image$attributes$tit = image.attributes.title) !== null && _image$attributes$tit !== void 0 ? _image$attributes$tit : '',\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    const children = inlineFromMarkdoc(node.children);\n    if (children.length === 1 && children[0].type === 'component-inline-prop') {\n      return children[0];\n    }\n    return {\n      type: 'paragraph',\n      children,\n      textAlign: node.attributes.textAlign\n    };\n  }\n  if (node.type === 'hr') {\n    return {\n      type: 'divider',\n      children: [{\n        text: ''\n      }]\n    };\n  }\n  if (node.type === 'table') {\n    return {\n      type: 'table',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tbody') {\n    return {\n      type: 'table-body',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'thead') {\n    if (!node.children.length) return [];\n    return {\n      type: 'table-head',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tr') {\n    return {\n      type: 'table-row',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'td') {\n    return {\n      type: 'table-cell',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'th') {\n    return {\n      type: 'table-cell',\n      header: true,\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'table') {\n      return fromMarkdocNode(node.children[0], componentBlocks);\n    }\n    if (node.tag === 'layout') {\n      return {\n        type: 'layout',\n        layout: node.attributes.layout,\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'layout-area') {\n      return {\n        type: 'layout-area',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block') {\n      return {\n        type: 'component-block',\n        component: node.attributes.component,\n        props: node.attributes.props,\n        children: node.children.length === 0 ? [{\n          type: 'component-inline-prop',\n          children: [{\n            text: ''\n          }]\n        }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n      return {\n        type: 'component-block-prop',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks)),\n        propPath: node.attributes.propPath\n      };\n    }\n    if (node.tag) {\n      const componentBlock = componentBlocks[node.tag];\n      if (componentBlock) {\n        const singleChildField = findSingleChildField({\n          kind: 'object',\n          fields: componentBlock.schema\n        });\n        if (singleChildField) {\n          const newAttributes = JSON.parse(JSON.stringify(node.attributes));\n          const children = [];\n          toChildrenAndProps(node.children, children, newAttributes, singleChildField, [], componentBlocks);\n          return {\n            type: 'component-block',\n            component: node.tag,\n            props: newAttributes,\n            children\n          };\n        }\n        return {\n          type: 'component-block',\n          component: node.tag,\n          props: node.attributes,\n          children: node.children.length === 0 ? [{\n            type: 'component-inline-prop',\n            children: [{\n              text: ''\n            }]\n          }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n        };\n      }\n    }\n    throw new Error(`Unknown tag: ${node.tag}`);\n  }\n  return inlineNodeFromMarkdoc(node);\n}\nfunction toChildrenAndProps(fromMarkdoc, resultingChildren, value, singleChildField, parentPropPath, componentBlocks) {\n  if (singleChildField.kind === 'child') {\n    const children = fromMarkdoc.flatMap(x => fromMarkdocNode(x, componentBlocks));\n    resultingChildren.push({\n      type: `component-${singleChildField.options.kind}-prop`,\n      propPath: [...parentPropPath, ...singleChildField.relativePath],\n      children\n    });\n  }\n  if (singleChildField.kind === 'array') {\n    const arr = [];\n    for (let [idx, child] of fromMarkdoc.entries()) {\n      if (child.type === 'paragraph') {\n        child = child.children[0].children[0];\n      }\n      if (child.type !== 'tag') {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found type: ${child.type}`);\n      }\n      if (child.tag !== singleChildField.asChildTag) {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found tag: ${child.tag}`);\n      }\n      const attributes = JSON.parse(JSON.stringify(child.attributes));\n      if (singleChildField.child) {\n        toChildrenAndProps(child.children, resultingChildren, attributes, singleChildField.child, [...parentPropPath, ...singleChildField.relativePath, idx], componentBlocks);\n      }\n      arr.push(attributes);\n    }\n    const key = singleChildField.relativePath[singleChildField.relativePath.length - 1];\n    const parent = getValueAtPropPath(value, singleChildField.relativePath.slice(0, -1));\n    parent[key] = arr;\n  }\n}\n\nfunction fixPath(path) {\n  return path.replace(/^\\.?\\/+/, '').replace(/\\/*$/, '');\n}\nconst collectionPath = /\\/\\*\\*?(?:$|\\/)/;\nfunction getConfiguredCollectionPath(config, collection) {\n  var _collectionConfig$pat;\n  const collectionConfig = config.collections[collection];\n  const path = (_collectionConfig$pat = collectionConfig.path) !== null && _collectionConfig$pat !== void 0 ? _collectionConfig$pat : `${collection}/*/`;\n  if (!collectionPath.test(path)) {\n    throw new Error(`Collection path must end with /* or /** or include /*/ or /**/ but ${collection} has ${path}`);\n  }\n  return path;\n}\nfunction getCollectionPath(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/\\*\\*?.*$/, ''));\n  return path;\n}\nfunction getCollectionFormat(config, collection) {\n  const collectionConfig = config.collections[collection];\n  return getFormatInfo(collectionConfig)(getConfiguredCollectionPath(config, collection));\n}\nfunction getSingletonFormat(config, singleton) {\n  var _singletonConfig$path;\n  const singletonConfig = config.singletons[singleton];\n  return getFormatInfo(singletonConfig)((_singletonConfig$path = singletonConfig.path) !== null && _singletonConfig$path !== void 0 ? _singletonConfig$path : `${singleton}/`);\n}\nfunction getCollectionItemPath(config, collection, slug) {\n  const basePath = getCollectionPath(config, collection);\n  const suffix = getCollectionItemSlugSuffix(config, collection);\n  return `${basePath}/${slug}${suffix}`;\n}\nfunction getEntryDataFilepath(dir, formatInfo) {\n  return `${dir}${formatInfo.dataLocation === 'index' ? '/index' : ''}${getDataFileExtension(formatInfo)}`;\n}\nfunction getSlugGlobForCollection(config, collection) {\n  const collectionPath = getConfiguredCollectionPath(config, collection);\n  return collectionPath.includes('**') ? '**' : '*';\n}\nfunction getCollectionItemSlugSuffix(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/^[^*]+\\*\\*?/, ''));\n  return path ? `/${path}` : '';\n}\nfunction getSingletonPath(config, singleton) {\n  var _singleton$path, _singleton$path2;\n  if ((_singleton$path = config.singletons[singleton].path) !== null && _singleton$path !== void 0 && _singleton$path.includes('*')) {\n    throw new Error(`Singleton paths cannot include * but ${singleton} has ${config.singletons[singleton].path}`);\n  }\n  return fixPath((_singleton$path2 = config.singletons[singleton].path) !== null && _singleton$path2 !== void 0 ? _singleton$path2 : singleton);\n}\nfunction getDataFileExtension(formatInfo) {\n  return formatInfo.contentField ? formatInfo.contentField.contentExtension : '.' + formatInfo.data;\n}\nfunction weakMemoize(func) {\n  const cache = new WeakMap();\n  return arg => {\n    if (cache.has(arg)) {\n      return cache.get(arg);\n    }\n    const result = func(arg);\n    cache.set(arg, result);\n    return result;\n  };\n}\nfunction memoize(func) {\n  const cache = new Map();\n  return arg => {\n    if (cache.has(arg)) {\n      return cache.get(arg);\n    }\n    const result = func(arg);\n    cache.set(arg, result);\n    return result;\n  };\n}\nconst getFormatInfo = weakMemoize(collectionOrSingleton => {\n  return memoize(path => _getFormatInfo(collectionOrSingleton, path));\n});\nfunction _getFormatInfo(collectionOrSingleton, path) {\n  var _format$data;\n  const dataLocation = path.endsWith('/') ? 'index' : 'outer';\n  const {\n    schema,\n    format = 'yaml'\n  } = collectionOrSingleton;\n  if (typeof format === 'string') {\n    return {\n      dataLocation,\n      contentField: undefined,\n      data: format\n    };\n  }\n  let contentField;\n  if (format.contentField) {\n    let field = {\n      kind: 'object',\n      fields: schema\n    };\n    let path = Array.isArray(format.contentField) ? format.contentField : [format.contentField];\n    contentField = {\n      path,\n      contentExtension: getContentExtension(path, field, () => path.length === 1 ? path[0] : JSON.stringify(path))\n    };\n  }\n  return {\n    data: (_format$data = format.data) !== null && _format$data !== void 0 ? _format$data : 'yaml',\n    contentField,\n    dataLocation\n  };\n}\nfunction getContentExtension(path, schema, debugName) {\n  if (path.length === 0) {\n    if (schema.kind !== 'form' || schema.formKind !== 'content') {\n      throw new Error(`Content field for ${debugName()} is not a content field`);\n    }\n    return schema.contentExtension;\n  }\n  if (schema.kind === 'object') {\n    return getContentExtension(path.slice(1), schema.fields[path[0]], debugName);\n  }\n  if (schema.kind === 'conditional') {\n    if (path[0] !== 'value') {\n      throw new Error(`Conditional fields referenced in a contentField path must only reference the value field (${debugName()})`);\n    }\n    let contentExtension;\n    const innerPath = path.slice(1);\n    for (const value of Object.values(schema.values)) {\n      const foundContentExtension = getContentExtension(innerPath, value, debugName);\n      if (!contentExtension) {\n        contentExtension = foundContentExtension;\n        continue;\n      }\n      if (contentExtension !== foundContentExtension) {\n        throw new Error(`contentField ${debugName()} has conflicting content extensions`);\n      }\n    }\n    if (!contentExtension) {\n      throw new Error(`contentField ${debugName()} does not point to a content field`);\n    }\n    return contentExtension;\n  }\n  throw new Error(`Path specified in contentField ${debugName()} does not point to a content field`);\n}\n\nfunction getSrcPrefix(publicPath, slug) {\n  return typeof publicPath === 'string' ? `${publicPath.replace(/\\/*$/, '')}/${slug === undefined ? '' : slug + '/'}` : '';\n}\n\nfunction deserializeFiles(nodes, componentBlocks, files, otherFiles, mode, documentFeatures, slug) {\n  return nodes.map(node => {\n    if (node.type === 'component-block') {\n      const componentBlock = componentBlocks[node.component];\n      if (!componentBlock) return node;\n      const schema = object(componentBlock.schema);\n      return {\n        ...node,\n        props: deserializeProps(schema, node.props, files, otherFiles, mode, slug)\n      };\n    }\n    if (node.type === 'image' && typeof node.src === 'string' && mode === 'edit') {\n      var _ref;\n      const prefix = getSrcPrefixForImageBlock(documentFeatures, slug);\n      const filename = node.src.slice(prefix.length);\n      const content = (_ref = typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? otherFiles.get(fixPath(documentFeatures.images.directory)) : files) === null || _ref === void 0 ? void 0 : _ref.get(filename);\n      if (!content) {\n        return {\n          type: 'paragraph',\n          children: [{\n            text: `Missing image ${filename}`\n          }]\n        };\n      }\n      return {\n        type: 'image',\n        src: {\n          filename,\n          content\n        },\n        alt: node.alt,\n        title: node.title,\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    if (typeof node.type === 'string') {\n      const children = deserializeFiles(node.children, componentBlocks, files, otherFiles, mode, documentFeatures, slug);\n      return {\n        ...node,\n        children\n      };\n    }\n    return node;\n  });\n}\nfunction deserializeProps(schema, value, files, otherFiles, mode, slug) {\n  return transformProps(schema, value, {\n    form: (schema, value) => {\n      if (schema.formKind === 'asset') {\n        var _otherFiles$get;\n        if (mode === 'read') {\n          return schema.reader.parse(value);\n        }\n        const filename = schema.filename(value, {\n          slug,\n          suggestedFilenamePrefix: undefined\n        });\n        return schema.parse(value, {\n          asset: filename ? schema.directory ? (_otherFiles$get = otherFiles.get(schema.directory)) === null || _otherFiles$get === void 0 ? void 0 : _otherFiles$get.get(filename) : files.get(filename) : undefined,\n          slug\n        });\n      }\n      if (schema.formKind === 'content' || schema.formKind === 'assets') {\n        throw new Error('Not implemented');\n      }\n      if (mode === 'read') {\n        return schema.reader.parse(value);\n      }\n      return schema.parse(value, undefined);\n    }\n  });\n}\nfunction getSrcPrefixForImageBlock(documentFeatures, slug) {\n  return getSrcPrefix(typeof documentFeatures.images === 'object' ? documentFeatures.images.publicPath : undefined, slug);\n}\n\nasync function sha1(content) {\n  return (0,crypto__WEBPACK_IMPORTED_MODULE_4__.createHash)('sha1').update(content).digest('hex');\n}\n\nconst textEncoder$1 = new TextEncoder();\nconst blobShaCache = new WeakMap();\nasync function blobSha(contents) {\n  const cached = blobShaCache.get(contents);\n  if (cached !== undefined) return cached;\n  const blobPrefix = textEncoder$1.encode('blob ' + contents.length + '\\0');\n  const array = new Uint8Array(blobPrefix.byteLength + contents.byteLength);\n  array.set(blobPrefix, 0);\n  array.set(contents, blobPrefix.byteLength);\n  const digestPromise = sha1(array);\n  blobShaCache.set(contents, digestPromise);\n  digestPromise.then(digest => blobShaCache.set(contents, digest));\n  return digestPromise;\n}\nfunction getTreeNodeAtPath(root, path) {\n  const parts = path.split('/');\n  let node = root.get(parts[0]);\n  for (const part of parts.slice(1)) {\n    if (!node) return undefined;\n    if (!node.children) return undefined;\n    node = node.children.get(part);\n  }\n  return node;\n}\nfunction getNodeAtPath(tree, path) {\n  if (path === '') return tree;\n  let node = tree;\n  for (const part of path.split('/')) {\n    if (!node.has(part)) {\n      node.set(part, new Map());\n    }\n    const innerNode = node.get(part);\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(innerNode instanceof Map, 'expected tree');\n    node = innerNode;\n  }\n  return node;\n}\nfunction getFilename(path) {\n  return path.replace(/.*\\//, '');\n}\nfunction getDirname(path) {\n  if (!path.includes('/')) return '';\n  return path.replace(/\\/[^/]+$/, '');\n}\nfunction toTreeChanges(changes) {\n  const changesRoot = new Map();\n  for (const deletion of changes.deletions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(deletion));\n    parentTree.set(getFilename(deletion), 'delete');\n  }\n  for (const addition of changes.additions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(addition.path));\n    parentTree.set(getFilename(addition.path), addition.contents);\n  }\n  return changesRoot;\n}\nconst SPACE_CHAR_CODE = 32;\nconst space = new Uint8Array([SPACE_CHAR_CODE]);\nconst nullchar = new Uint8Array([0]);\nconst tree = textEncoder$1.encode('tree ');\n\n// based on https://github.com/isomorphic-git/isomorphic-git/blob/c09dfa20ffe0ab9e6602e0fa172d72ba8994e443/src/models/GitTree.js#L108-L122\nfunction treeSha(children) {\n  const entries = [...children].map(([name, node]) => ({\n    name,\n    sha: node.entry.sha,\n    mode: node.entry.mode\n  }));\n  entries.sort((a, b) => {\n    const aName = a.mode === '040000' ? a.name + '/' : a.name;\n    const bName = b.mode === '040000' ? b.name + '/' : b.name;\n    return aName === bName ? 0 : aName < bName ? -1 : 1;\n  });\n  const treeObject = entries.flatMap(entry => {\n    const mode = textEncoder$1.encode(entry.mode.replace(/^0/, ''));\n    const name = textEncoder$1.encode(entry.name);\n    const sha = hexToBytes(entry.sha);\n    return [mode, space, name, nullchar, sha];\n  });\n  return sha1(concatBytes([tree, textEncoder$1.encode(treeObject.reduce((sum, val) => sum + val.byteLength, 0).toString()), nullchar, ...treeObject]));\n}\nfunction concatBytes(byteArrays) {\n  const totalLength = byteArrays.reduce((sum, arr) => sum + arr.byteLength, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of byteArrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n}\nfunction hexToBytes(str) {\n  const bytes = new Uint8Array(str.length / 2);\n  for (var i = 0; i < bytes.byteLength; i += 1) {\n    const start = i * 2;\n    bytes[i] = parseInt(str.slice(start, start + 2), 16);\n  }\n  return bytes;\n}\nasync function createTreeNodeEntry(path, children) {\n  const sha = await treeSha(children);\n  return {\n    path,\n    mode: '040000',\n    type: 'tree',\n    sha\n  };\n}\nasync function createBlobNodeEntry(path, contents) {\n  const sha = 'sha' in contents ? contents.sha : await blobSha(contents);\n  return {\n    path,\n    mode: '100644',\n    type: 'blob',\n    sha\n  };\n}\nasync function updateTreeWithChanges(tree, changes) {\n  var _await$updateTree;\n  const newTree = (_await$updateTree = await updateTree(tree, toTreeChanges(changes), [])) !== null && _await$updateTree !== void 0 ? _await$updateTree : new Map();\n  return {\n    entries: treeToEntries(newTree),\n    sha: await treeSha(newTree !== null && newTree !== void 0 ? newTree : new Map())\n  };\n}\nfunction treeToEntries(tree) {\n  return [...tree.values()].flatMap(x => x.children ? [x.entry, ...treeToEntries(x.children)] : [x.entry]);\n}\nasync function updateTree(tree, changedTree, path) {\n  const newTree = new Map(tree);\n  for (const [key, value] of changedTree) {\n    if (value === 'delete') {\n      newTree.delete(key);\n    }\n    if (value instanceof Map) {\n      var _newTree$get$children, _newTree$get;\n      const existingChildren = (_newTree$get$children = (_newTree$get = newTree.get(key)) === null || _newTree$get === void 0 ? void 0 : _newTree$get.children) !== null && _newTree$get$children !== void 0 ? _newTree$get$children : new Map();\n      const children = await updateTree(existingChildren, value, path.concat(key));\n      if (children === undefined) {\n        newTree.delete(key);\n        continue;\n      }\n      const entry = await createTreeNodeEntry(path.concat(key).join('/'), children);\n      newTree.set(key, {\n        entry,\n        children\n      });\n    }\n    if (value instanceof Uint8Array || typeof value === 'object' && 'sha' in value) {\n      const entry = await createBlobNodeEntry(path.concat(key).join('/'), value);\n      newTree.set(key, {\n        entry\n      });\n    }\n  }\n  if (newTree.size === 0) {\n    return undefined;\n  }\n  return newTree;\n}\nfunction treeEntriesToTreeNodes(entries) {\n  const root = new Map();\n  const getChildrenAtPath = parts => {\n    var _node;\n    if (parts.length === 0) {\n      return root;\n    }\n    let node = root.get(parts[0]);\n    for (const part of parts.slice(1)) {\n      if (!node) return undefined;\n      if (!node.children) return undefined;\n      node = node.children.get(part);\n    }\n    return (_node = node) === null || _node === void 0 ? void 0 : _node.children;\n  };\n  for (const entry of entries) {\n    const split = entry.path.split('/');\n    const children = getChildrenAtPath(split.slice(0, -1));\n    if (children) {\n      children.set(split[split.length - 1], {\n        entry,\n        children: entry.type === 'tree' ? new Map() : undefined\n      });\n    }\n  }\n  return root;\n}\n\nfunction collectDirectoriesUsedInSchemaInner(schema, directories, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return;\n  }\n  seenSchemas.add(schema);\n  if (schema.kind === 'array') {\n    return collectDirectoriesUsedInSchemaInner(schema.element, directories, seenSchemas);\n  }\n  if (schema.kind === 'child') {\n    return;\n  }\n  if (schema.kind === 'form') {\n    if (schema.formKind === 'asset' && schema.directory !== undefined) {\n      directories.add(fixPath(schema.directory));\n    }\n    if ((schema.formKind === 'content' || schema.formKind === 'assets') && schema.directories !== undefined) {\n      for (const directory of schema.directories) {\n        directories.add(fixPath(directory));\n      }\n    }\n    return;\n  }\n  if (schema.kind === 'object') {\n    for (const field of Object.values(schema.fields)) {\n      collectDirectoriesUsedInSchemaInner(field, directories, seenSchemas);\n    }\n    return;\n  }\n  if (schema.kind === 'conditional') {\n    for (const innerSchema of Object.values(schema.values)) {\n      collectDirectoriesUsedInSchemaInner(innerSchema, directories, seenSchemas);\n    }\n    return;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction collectDirectoriesUsedInSchema(schema) {\n  const directories = new Set();\n  collectDirectoriesUsedInSchemaInner(schema, directories, new Set());\n  return directories;\n}\nfunction getDirectoriesForTreeKey(schema, directory, slug, format) {\n  const directories = [fixPath(directory)];\n  if (format.dataLocation === 'outer') {\n    directories.push(fixPath(directory) + getDataFileExtension(format));\n  }\n  const toAdd = slug === undefined ? '' : `/${slug}`;\n  for (const directory of collectDirectoriesUsedInSchema(schema)) {\n    directories.push(directory + toAdd);\n  }\n  return directories;\n}\n\nconst textDecoder$1 = new TextDecoder();\nconst defaultAltField$1 = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.t)({\n  label: 'Alt text',\n  description: 'This text will be used by screen readers and search engines.'\n});\nconst emptyTitleField$1 = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.b)({\n  Input() {\n    return null;\n  },\n  defaultValue() {\n    return '';\n  },\n  parse(value) {\n    if (value === undefined) return '';\n    if (typeof value !== 'string') {\n      throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be string');\n    }\n    return value;\n  },\n  validate(value) {\n    return value;\n  },\n  serialize(value) {\n    return {\n      value\n    };\n  },\n  label: 'Title'\n});\nfunction normaliseDocumentFeatures(config) {\n  var _config$formatting, _formatting$alignment, _formatting$alignment2, _formatting$blockType, _formatting$inlineMar, _formatting$inlineMar2, _formatting$inlineMar3, _formatting$inlineMar4, _formatting$inlineMar5, _formatting$inlineMar6, _formatting$inlineMar7, _formatting$inlineMar8, _formatting$listTypes, _formatting$listTypes2, _imagesConfig$schema$, _imagesConfig$schema, _imagesConfig$schema$2, _imagesConfig$schema2;\n  const formatting = config.formatting === true ? {\n    // alignment: true, // not supported natively in markdown\n    blockTypes: true,\n    headingLevels: true,\n    inlineMarks: true,\n    listTypes: true,\n    softBreaks: true\n  } : (_config$formatting = config.formatting) !== null && _config$formatting !== void 0 ? _config$formatting : {};\n  const imagesConfig = config.images === true ? {} : config.images;\n  return {\n    formatting: {\n      alignment: formatting.alignment === true ? {\n        center: true,\n        end: true\n      } : {\n        center: !!((_formatting$alignment = formatting.alignment) !== null && _formatting$alignment !== void 0 && _formatting$alignment.center),\n        end: !!((_formatting$alignment2 = formatting.alignment) !== null && _formatting$alignment2 !== void 0 && _formatting$alignment2.end)\n      },\n      blockTypes: (formatting === null || formatting === void 0 ? void 0 : formatting.blockTypes) === true ? {\n        blockquote: true,\n        code: {\n          schema: object({})\n        }\n      } : {\n        blockquote: !!((_formatting$blockType = formatting.blockTypes) !== null && _formatting$blockType !== void 0 && _formatting$blockType.blockquote),\n        code: (_formatting$blockType2 => {\n          if (((_formatting$blockType2 = formatting.blockTypes) === null || _formatting$blockType2 === void 0 ? void 0 : _formatting$blockType2.code) === undefined) {\n            return false;\n          }\n          if (formatting.blockTypes.code === true || !formatting.blockTypes.code.schema) {\n            return {\n              schema: object({})\n            };\n          }\n          for (const key of ['type', 'children', 'language']) {\n            if (key in formatting.blockTypes.code.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for code blocks`);\n            }\n          }\n          return {\n            schema: object(formatting.blockTypes.code.schema)\n          };\n        })()\n      },\n      headings: (_obj$schema => {\n        const opt = formatting === null || formatting === void 0 ? void 0 : formatting.headingLevels;\n        const obj = typeof opt === 'object' && 'levels' in opt ? opt : {\n          levels: opt,\n          schema: undefined\n        };\n        if (obj.schema) {\n          for (const key of ['type', 'children', 'level', 'textAlign']) {\n            if (key in obj.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for headings`);\n            }\n          }\n        }\n        return {\n          levels: [...new Set(obj.levels === true ? [1, 2, 3, 4, 5, 6] : obj.levels)],\n          schema: object((_obj$schema = obj.schema) !== null && _obj$schema !== void 0 ? _obj$schema : {})\n        };\n      })(),\n      inlineMarks: formatting.inlineMarks === true ? {\n        bold: true,\n        code: true,\n        italic: true,\n        keyboard: false,\n        // not supported natively in markdown\n        strikethrough: true,\n        subscript: false,\n        // not supported natively in markdown\n        superscript: false,\n        // not supported natively in markdown\n        underline: false // not supported natively in markdown\n      } : {\n        bold: !!((_formatting$inlineMar = formatting.inlineMarks) !== null && _formatting$inlineMar !== void 0 && _formatting$inlineMar.bold),\n        code: !!((_formatting$inlineMar2 = formatting.inlineMarks) !== null && _formatting$inlineMar2 !== void 0 && _formatting$inlineMar2.code),\n        italic: !!((_formatting$inlineMar3 = formatting.inlineMarks) !== null && _formatting$inlineMar3 !== void 0 && _formatting$inlineMar3.italic),\n        strikethrough: !!((_formatting$inlineMar4 = formatting.inlineMarks) !== null && _formatting$inlineMar4 !== void 0 && _formatting$inlineMar4.strikethrough),\n        underline: !!((_formatting$inlineMar5 = formatting.inlineMarks) !== null && _formatting$inlineMar5 !== void 0 && _formatting$inlineMar5.underline),\n        keyboard: !!((_formatting$inlineMar6 = formatting.inlineMarks) !== null && _formatting$inlineMar6 !== void 0 && _formatting$inlineMar6.keyboard),\n        subscript: !!((_formatting$inlineMar7 = formatting.inlineMarks) !== null && _formatting$inlineMar7 !== void 0 && _formatting$inlineMar7.subscript),\n        superscript: !!((_formatting$inlineMar8 = formatting.inlineMarks) !== null && _formatting$inlineMar8 !== void 0 && _formatting$inlineMar8.superscript)\n      },\n      listTypes: formatting.listTypes === true ? {\n        ordered: true,\n        unordered: true\n      } : {\n        ordered: !!((_formatting$listTypes = formatting.listTypes) !== null && _formatting$listTypes !== void 0 && _formatting$listTypes.ordered),\n        unordered: !!((_formatting$listTypes2 = formatting.listTypes) !== null && _formatting$listTypes2 !== void 0 && _formatting$listTypes2.unordered)\n      },\n      softBreaks: !!formatting.softBreaks\n    },\n    links: !!config.links,\n    layouts: [...new Set((config.layouts || []).map(x => JSON.stringify(x)))].map(x => JSON.parse(x)),\n    dividers: !!config.dividers,\n    images: imagesConfig === undefined ? false : {\n      ...imagesConfig,\n      schema: {\n        alt: (_imagesConfig$schema$ = (_imagesConfig$schema = imagesConfig.schema) === null || _imagesConfig$schema === void 0 ? void 0 : _imagesConfig$schema.alt) !== null && _imagesConfig$schema$ !== void 0 ? _imagesConfig$schema$ : defaultAltField$1,\n        title: (_imagesConfig$schema$2 = (_imagesConfig$schema2 = imagesConfig.schema) === null || _imagesConfig$schema2 === void 0 ? void 0 : _imagesConfig$schema2.title) !== null && _imagesConfig$schema$2 !== void 0 ? _imagesConfig$schema$2 : emptyTitleField$1\n      }\n    },\n    tables: !!config.tables\n  };\n}\n\n/**\n * @deprecated `fields.markdoc` has superseded this field. `fields.mdx` is also available if you prefer MDX.\n */\nfunction document({\n  label,\n  componentBlocks = {},\n  description,\n  ...documentFeaturesConfig\n}) {\n  const documentFeatures = normaliseDocumentFeatures(documentFeaturesConfig);\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }];\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        componentBlocks: componentBlocks,\n        description: description,\n        label: label,\n        documentFeatures: documentFeatures,\n        ...props\n      });\n    },\n    parse(_, data) {\n      const markdoc = textDecoder$1.decode(data.content);\n      fromMarkdoc((0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(markdoc), componentBlocks);\n      return deserializeFiles((0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.n)(), componentBlocks, data.other, data.external, 'edit', documentFeatures, data.slug);\n    },\n    contentExtension: '.mdoc',\n    validate(value) {\n      return value;\n    },\n    directories: [...collectDirectoriesUsedInSchema(object(Object.fromEntries(Object.entries(componentBlocks).map(([name, block]) => [name, object(block.schema)])))), ...(typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? [fixPath(documentFeatures.images.directory)] : [])],\n    serialize(value, opts) {\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.i)();\n    },\n    reader: {\n      parse(value, data) {\n        const markdoc = textDecoder$1.decode(data.content);\n        const document = fromMarkdoc((0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(markdoc), componentBlocks);\n        return deserializeFiles(document, componentBlocks, new Map(), new Map(), 'read', documentFeatures, undefined);\n      }\n    }\n  };\n}\n\nconst defaultAltField = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.t)({\n  label: 'Alt text',\n  description: 'This text will be used by screen readers and search engines.'\n});\nconst emptyTitleField = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.b)({\n  Input() {\n    return null;\n  },\n  defaultValue() {\n    return '';\n  },\n  parse(value) {\n    if (value === undefined) return '';\n    if (typeof value !== 'string') {\n      throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be string');\n    }\n    return value;\n  },\n  validate(value) {\n    return value;\n  },\n  serialize(value) {\n    return {\n      value\n    };\n  },\n  label: 'Title'\n});\nfunction editorOptionsToConfig(options) {\n  var _options$bold, _options$italic, _options$strikethroug, _options$code, _options$blockquote, _options$orderedList, _options$unorderedLis, _options$table, _options$link, _options$divider;\n  return {\n    bold: (_options$bold = options.bold) !== null && _options$bold !== void 0 ? _options$bold : true,\n    italic: (_options$italic = options.italic) !== null && _options$italic !== void 0 ? _options$italic : true,\n    strikethrough: (_options$strikethroug = options.strikethrough) !== null && _options$strikethroug !== void 0 ? _options$strikethroug : true,\n    code: (_options$code = options.code) !== null && _options$code !== void 0 ? _options$code : true,\n    heading: (() => {\n      let levels = [];\n      let levelsOpt = typeof options.heading === 'object' && !Array.isArray(options.heading) ? options.heading.levels : options.heading;\n      if (levelsOpt === true || levelsOpt === undefined) {\n        levels = [1, 2, 3, 4, 5, 6];\n      }\n      if (Array.isArray(levelsOpt)) {\n        levels = levelsOpt;\n      }\n      return {\n        levels,\n        schema: options.heading && typeof options.heading === 'object' && 'schema' in options.heading ? options.heading.schema : {}\n      };\n    })(),\n    blockquote: (_options$blockquote = options.blockquote) !== null && _options$blockquote !== void 0 ? _options$blockquote : true,\n    orderedList: (_options$orderedList = options.orderedList) !== null && _options$orderedList !== void 0 ? _options$orderedList : true,\n    unorderedList: (_options$unorderedLis = options.unorderedList) !== null && _options$unorderedLis !== void 0 ? _options$unorderedLis : true,\n    table: (_options$table = options.table) !== null && _options$table !== void 0 ? _options$table : true,\n    link: (_options$link = options.link) !== null && _options$link !== void 0 ? _options$link : true,\n    image: options.image !== false ? ((_opts$transformFilena, _opts$schema$alt, _opts$schema, _opts$schema$title, _opts$schema2) => {\n      const opts = options.image === true ? undefined : options.image;\n      return {\n        directory: opts === null || opts === void 0 ? void 0 : opts.directory,\n        publicPath: opts === null || opts === void 0 ? void 0 : opts.publicPath,\n        transformFilename: (_opts$transformFilena = opts === null || opts === void 0 ? void 0 : opts.transformFilename) !== null && _opts$transformFilena !== void 0 ? _opts$transformFilena : x => x,\n        schema: {\n          alt: (_opts$schema$alt = opts === null || opts === void 0 || (_opts$schema = opts.schema) === null || _opts$schema === void 0 ? void 0 : _opts$schema.alt) !== null && _opts$schema$alt !== void 0 ? _opts$schema$alt : defaultAltField,\n          title: (_opts$schema$title = opts === null || opts === void 0 || (_opts$schema2 = opts.schema) === null || _opts$schema2 === void 0 ? void 0 : _opts$schema2.title) !== null && _opts$schema$title !== void 0 ? _opts$schema$title : emptyTitleField\n        }\n      };\n    })() : undefined,\n    divider: (_options$divider = options.divider) !== null && _options$divider !== void 0 ? _options$divider : true,\n    codeBlock: options.codeBlock === false ? undefined : {\n      schema: typeof options.codeBlock === 'object' ? options.codeBlock.schema : {}\n    }\n  };\n}\n\nfunction getTypeForField(field) {\n  if (field.kind === 'object' || field.kind === 'conditional') {\n    return {\n      type: Object,\n      required: true\n    };\n  }\n  if (field.kind === 'array') {\n    return {\n      type: Array,\n      required: true\n    };\n  }\n  if (field.kind === 'child') {\n    return {};\n  }\n  if (field.formKind === undefined) {\n    if (typeof field.defaultValue === 'string' && 'options' in field && Array.isArray(field.options) && field.options.every(val => typeof val === 'object' && val !== null && 'value' in val && typeof val.value === 'string')) {\n      return {\n        type: String,\n        matches: field.options.map(x => x.value),\n        required: true\n      };\n    }\n    if (typeof field.defaultValue === 'string') {\n      let required = false;\n      try {\n        field.parse('');\n      } catch {\n        required = true;\n      }\n      return {\n        type: String,\n        required\n      };\n    }\n    try {\n      field.parse(1);\n      return {\n        type: Number\n      };\n    } catch {}\n    if (typeof field.defaultValue === 'boolean') {\n      return {\n        type: Boolean,\n        required: true\n      };\n    }\n    return {};\n  }\n  if (field.formKind === 'slug') {\n    let required = false;\n    try {\n      field.parse('', undefined);\n    } catch {\n      required = true;\n    }\n    return {\n      type: String,\n      required\n    };\n  }\n  if (field.formKind === 'asset') {\n    let required = false;\n    try {\n      field.validate(null);\n    } catch {\n      required = true;\n    }\n    return {\n      type: String,\n      required\n    };\n  }\n  return {};\n}\nfunction fieldsToMarkdocAttributes(fields) {\n  return Object.fromEntries(Object.entries(fields).map(([name, field]) => {\n    const schema = getTypeForField(field);\n    return [name, schema];\n  }));\n}\nfunction createMarkdocConfig(opts) {\n  const editorConfig = editorOptionsToConfig(opts.options || {});\n  const config = {\n    nodes: {\n      ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes\n    },\n    tags: {}\n  };\n  if (editorConfig.heading.levels.length) {\n    config.nodes.heading = {\n      ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.heading,\n      attributes: {\n        ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.heading.attributes,\n        ...fieldsToMarkdocAttributes(editorConfig.heading.schema)\n      }\n    };\n  } else {\n    config.nodes.heading = undefined;\n  }\n  if (!editorConfig.blockquote) {\n    config.nodes.blockquote = undefined;\n  }\n  if (editorConfig.codeBlock) {\n    config.nodes.fence = {\n      ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.fence,\n      attributes: {\n        ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.fence.attributes,\n        ...fieldsToMarkdocAttributes(editorConfig.codeBlock.schema)\n      }\n    };\n  } else {\n    config.nodes.fence = undefined;\n  }\n  if (!editorConfig.orderedList && !editorConfig.unorderedList) {\n    config.nodes.list = undefined;\n  }\n  if (!editorConfig.bold) {\n    config.nodes.strong = undefined;\n  }\n  if (!editorConfig.italic) {\n    config.nodes.em = undefined;\n  }\n  if (!editorConfig.strikethrough) {\n    config.nodes.s = undefined;\n  }\n  if (!editorConfig.link) {\n    config.nodes.link = undefined;\n  }\n  if (!editorConfig.image) {\n    config.nodes.image = undefined;\n  }\n  if (!editorConfig.divider) {\n    config.nodes.hr = undefined;\n  }\n  if (!editorConfig.table) {\n    config.nodes.table = undefined;\n  }\n  for (const [name, component] of Object.entries(opts.components || {})) {\n    var _opts$render;\n    const isEmpty = component.kind === 'block' || component.kind === 'inline';\n    config.tags[name] = {\n      render: (_opts$render = opts.render) === null || _opts$render === void 0 || (_opts$render = _opts$render.tags) === null || _opts$render === void 0 ? void 0 : _opts$render[name],\n      children: isEmpty ? [] : undefined,\n      selfClosing: isEmpty,\n      attributes: fieldsToMarkdocAttributes(component.schema),\n      description: 'description' in component ? component.description : undefined,\n      inline: component.kind === 'inline' || component.kind === 'mark'\n    };\n  }\n  for (const [name, render] of Object.entries(((_opts$render2 = opts.render) === null || _opts$render2 === void 0 ? void 0 : _opts$render2.nodes) || {})) {\n    var _opts$render2;\n    const nodeSchema = config.nodes[name];\n    if (nodeSchema) {\n      nodeSchema.render = render;\n    }\n  }\n  return config;\n}\n\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction getDirectoriesForEditorField(components, config) {\n  return [...collectDirectoriesUsedInSchema(object(Object.fromEntries(Object.entries(components).map(([name, component]) => [name, object(component.schema)])))), ...(typeof config.image === 'object' && typeof config.image.directory === 'string' ? [fixPath(config.image.directory)] : [])];\n}\nfunction markdoc({\n  label,\n  description,\n  options = {},\n  components = {},\n  extension = 'mdoc'\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (_, {\n      content,\n      other,\n      external,\n      slug\n    }) => {\n      const text = textDecoder.decode(content);\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.p)(text, getSchema());\n    },\n    contentExtension: `.${extension}`,\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.k)();\n      return {\n        content: textEncoder.encode(out.content),\n        external: out.external,\n        other: out.other,\n        value: undefined\n      };\n    },\n    reader: {\n      parse: (_, {\n        content\n      }) => {\n        const text = textDecoder.decode(content);\n        return {\n          node: (0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(text)\n        };\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n}\nmarkdoc.createMarkdocConfig = createMarkdocConfig;\nmarkdoc.inline = function inlineMarkdoc({\n  label,\n  description,\n  options = {},\n  components = {}\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'assets',\n    defaultValue() {\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (value, {\n      other,\n      external,\n      slug\n    }) => {\n      if (value === undefined) {\n        value = '';\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n      }\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.p)(value, getSchema());\n    },\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.k)();\n      return {\n        external: out.external,\n        other: out.other,\n        value: out.content\n      };\n    },\n    reader: {\n      parse: value => {\n        if (value === undefined) {\n          value = '';\n        }\n        if (typeof value !== 'string') {\n          throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n        }\n        return {\n          node: (0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(value)\n        };\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n};\nfunction mdx({\n  label,\n  description,\n  options = {},\n  components = {},\n  extension = 'mdx'\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (_, {\n      content,\n      other,\n      external,\n      slug\n    }) => {\n      const text = textDecoder.decode(content);\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.o)(text, getSchema());\n    },\n    contentExtension: `.${extension}`,\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.q)();\n      return {\n        content: textEncoder.encode(out.content),\n        external: out.external,\n        other: out.other,\n        value: undefined\n      };\n    },\n    reader: {\n      parse: (_, {\n        content\n      }) => {\n        const text = textDecoder.decode(content);\n        return text;\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n}\nmdx.inline = function mdx({\n  label,\n  description,\n  options = {},\n  components = {}\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'assets',\n    defaultValue() {\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (value, {\n      other,\n      external,\n      slug\n    }) => {\n      if (value === undefined) {\n        value = '';\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n      }\n      return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.o)(value, getSchema());\n    },\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.q)();\n      return {\n        external: out.external,\n        other: out.other,\n        value: out.content\n      };\n    },\n    reader: {\n      parse: value => {\n        if (value === undefined) {\n          value = '';\n        }\n        if (typeof value !== 'string') {\n          throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n        }\n        return value;\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@keystatic/core/dist/index-aaf578e2.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@keystatic/core/dist/keystatic-core-ui.node.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/keystatic-core-ui.node.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keystatic: () => (/* binding */ Keystatic)\n/* harmony export */ });\nfunction assertValidRepoConfig(repo) {\n  if (typeof repo === 'string') {\n    if (!repo.includes('/')) {\n      throw new Error(`Invalid repo config: ${repo}. It must be in the form owner/name`);\n    }\n  }\n  if (typeof repo === 'object') {\n    if (!repo.owner && !repo.name) {\n      throw new Error(`Invalid repo config: owner and name are missing`);\n    }\n    if (!repo.owner) {\n      throw new Error(`Invalid repo config: owner is missing`);\n    }\n    if (!repo.name) {\n      throw new Error(`Invalid repo config: name is missing`);\n    }\n  }\n}\n\nfunction Keystatic(props) {\n  if (props.config.storage.kind === 'github') {\n    assertValidRepoConfig(props.config.storage.repo);\n  }\n  return null;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3Qva2V5c3RhdGljLWNvcmUtdWkubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsOENBQThDLEtBQUs7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtleXN0YXRpYy90ZW1wbGF0ZXMtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BrZXlzdGF0aWMvY29yZS9kaXN0L2tleXN0YXRpYy1jb3JlLXVpLm5vZGUuanM/NGI0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhc3NlcnRWYWxpZFJlcG9Db25maWcocmVwbykge1xuICBpZiAodHlwZW9mIHJlcG8gPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKCFyZXBvLmluY2x1ZGVzKCcvJykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCByZXBvIGNvbmZpZzogJHtyZXBvfS4gSXQgbXVzdCBiZSBpbiB0aGUgZm9ybSBvd25lci9uYW1lYCk7XG4gICAgfVxuICB9XG4gIGlmICh0eXBlb2YgcmVwbyA9PT0gJ29iamVjdCcpIHtcbiAgICBpZiAoIXJlcG8ub3duZXIgJiYgIXJlcG8ubmFtZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHJlcG8gY29uZmlnOiBvd25lciBhbmQgbmFtZSBhcmUgbWlzc2luZ2ApO1xuICAgIH1cbiAgICBpZiAoIXJlcG8ub3duZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCByZXBvIGNvbmZpZzogb3duZXIgaXMgbWlzc2luZ2ApO1xuICAgIH1cbiAgICBpZiAoIXJlcG8ubmFtZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHJlcG8gY29uZmlnOiBuYW1lIGlzIG1pc3NpbmdgKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gS2V5c3RhdGljKHByb3BzKSB7XG4gIGlmIChwcm9wcy5jb25maWcuc3RvcmFnZS5raW5kID09PSAnZ2l0aHViJykge1xuICAgIGFzc2VydFZhbGlkUmVwb0NvbmZpZyhwcm9wcy5jb25maWcuc3RvcmFnZS5yZXBvKTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IHsgS2V5c3RhdGljIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@keystatic/core/dist/keystatic-core-ui.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@keystatic/core/dist/keystatic-core.node.js":
/*!******************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/keystatic-core.node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockWrapper: () => (/* binding */ BlockWrapper),\n/* harmony export */   NotEditable: () => (/* binding */ NotEditable),\n/* harmony export */   ToolbarSeparator: () => (/* binding */ ToolbarSeparator),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   component: () => (/* reexport safe */ _api_daad6cc5_node_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   fields: () => (/* binding */ index),\n/* harmony export */   singleton: () => (/* binding */ singleton)\n/* harmony export */ });\n/* harmony import */ var _api_daad6cc5_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-daad6cc5.node.js */ \"(ssr)/./node_modules/@keystatic/core/dist/api-daad6cc5.node.js\");\n/* harmony import */ var _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-1a9da0fb.node.js */ \"(ssr)/./node_modules/@keystatic/core/dist/index-1a9da0fb.node.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-aaf578e2.node.js */ \"(ssr)/./node_modules/@keystatic/core/dist/index-aaf578e2.node.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(ssr)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _index_39d45899_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-39d45899.node.js */ \"(ssr)/./node_modules/@keystatic/core/dist/index-39d45899.node.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! emery/assertions */ \"(ssr)/./node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\n\n\n\n\n\n\n\n\n\n// Common\n\n// Storage\n// ----------------------------------------------------------------------------\n\n// ============================================================================\n// Functions\n// ============================================================================\n\nfunction config(config) {\n  return config;\n}\nfunction collection(collection) {\n  return collection;\n}\nfunction singleton(collection) {\n  return collection;\n}\n\nfunction array(element, opts) {\n  var _opts$label;\n  return {\n    kind: 'array',\n    element,\n    label: (_opts$label = opts === null || opts === void 0 ? void 0 : opts.label) !== null && _opts$label !== void 0 ? _opts$label : 'Items',\n    description: opts === null || opts === void 0 ? void 0 : opts.description,\n    itemLabel: opts === null || opts === void 0 ? void 0 : opts.itemLabel,\n    asChildTag: opts === null || opts === void 0 ? void 0 : opts.asChildTag,\n    slugField: opts === null || opts === void 0 ? void 0 : opts.slugField,\n    validation: opts === null || opts === void 0 ? void 0 : opts.validation\n  };\n}\n\nfunction select({\n  label,\n  options,\n  defaultValue,\n  description\n}) {\n  const optionValuesSet = new Set(options.map(x => x.value));\n  if (!optionValuesSet.has(defaultValue)) {\n    throw new Error(`A defaultValue of ${defaultValue} was provided to a select field but it does not match the value of one of the options provided`);\n  }\n  const field = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.S, {\n        label: label,\n        options: options,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return defaultValue;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      if (!optionValuesSet.has(value)) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a valid option');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nfunction blocks(blocks, opts) {\n  const entries = Object.entries(blocks);\n  if (!entries.length) {\n    throw new Error('fields.blocks must have at least one entry');\n  }\n  const select$1 = select({\n    label: 'Kind',\n    defaultValue: entries[0][0],\n    options: Object.entries(blocks).map(([key, {\n      label\n    }]) => ({\n      label,\n      value: key\n    }))\n  });\n  const element = conditional(select$1, Object.fromEntries(entries.map(([key, {\n    schema\n  }]) => [key, schema])));\n  return {\n    ...array(element, {\n      label: opts.label,\n      description: opts.description,\n      validation: opts.validation,\n      itemLabel(props) {\n        const kind = props.discriminant;\n        const block = blocks[kind];\n        if (!block.itemLabel) return block.label;\n        return block.itemLabel(props.value);\n      }\n    }),\n    Input: _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.B\n  };\n}\n\nfunction checkbox({\n  label,\n  defaultValue = false,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.C, {\n        ...props,\n        label: label,\n        description: description\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) return defaultValue;\n      if (typeof value !== 'boolean') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a boolean');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n}\n\nfunction child(options) {\n  return {\n    kind: 'child',\n    options: options.kind === 'block' ? {\n      ...options,\n      dividers: options.dividers,\n      formatting: options.formatting === 'inherit' ? {\n        blockTypes: 'inherit',\n        headingLevels: 'inherit',\n        inlineMarks: 'inherit',\n        listTypes: 'inherit',\n        alignment: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links,\n      images: options.images,\n      tables: options.tables,\n      componentBlocks: options.componentBlocks\n    } : {\n      kind: 'inline',\n      placeholder: options.placeholder,\n      formatting: options.formatting === 'inherit' ? {\n        inlineMarks: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links\n    }\n  };\n}\n\nfunction cloudImage({\n  label,\n  description,\n  validation\n}) {\n  return {\n    ...(0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.o)({\n      src: (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.t)({\n        label: 'URL',\n        validation: {\n          length: {\n            min: validation !== null && validation !== void 0 && validation.isRequired ? 1 : 0\n          }\n        }\n      }),\n      alt: (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.t)({\n        label: 'Alt text'\n      }),\n      height: (0,_index_39d45899_node_js__WEBPACK_IMPORTED_MODULE_6__.i)({\n        label: 'Height'\n      }),\n      width: (0,_index_39d45899_node_js__WEBPACK_IMPORTED_MODULE_6__.i)({\n        label: 'Width'\n      })\n    }, {\n      label,\n      description\n    }),\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.a, {\n        ...props,\n        isRequired: validation === null || validation === void 0 ? void 0 : validation.isRequired\n      });\n    }\n  };\n}\n\nfunction conditional(discriminant, values) {\n  return {\n    kind: 'conditional',\n    discriminant,\n    values: values\n  };\n}\n\nfunction validateDate(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}$/.test(value)) {\n    return `${label} is not a valid date`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const date = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (date < min) {\n        return `${label} must be after ${min.toLocaleDateString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (date > max) {\n        return `${label} must be no later than ${max.toLocaleDateString()}`;\n      }\n    }\n  }\n}\n\nfunction date({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.D, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth() + 1).padStart(2, '0');\n      const day = String(today.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (value instanceof Date) {\n        const year = value.getUTCFullYear();\n        const month = String(value.getUTCMonth() + 1).padStart(2, '0');\n        const day = String(value.getUTCDate()).padStart(2, '0');\n        return `${year}-${month}-${day}`;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value;\n    },\n    serialize(value) {\n      if (value === null) return {\n        value: undefined\n      };\n      const date = new Date(value);\n      date.toISOString = () => value;\n      date.toString = () => value;\n      return {\n        value: date\n      };\n    },\n    validate(value) {\n      const message = validateDate(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction validateDatetime(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/.test(value)) {\n    return `${label} is not a valid datetime`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const datetime = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (datetime < min) {\n        return `${label} must be after ${min.toISOString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (datetime > max) {\n        return `${label} must be no later than ${max.toISOString()}`;\n      }\n    }\n  }\n}\n\nfunction datetime({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.d, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      if (defaultValue.kind === 'now') {\n        const now = new Date();\n        return new Date(now.getTime() - now.getTimezoneOffset() * 60 * 1000).toISOString().slice(0, -8);\n      }\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (value instanceof Date) {\n        return value.toISOString().slice(0, -8);\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string or date');\n      }\n      return value;\n    },\n    serialize(value) {\n      if (value === null) return {\n        value: undefined\n      };\n      const date = new Date(value + 'Z');\n      date.toJSON = () => date.toISOString().slice(0, -8);\n      date.toString = () => date.toISOString().slice(0, -8);\n      return {\n        value: date\n      };\n    },\n    validate(value) {\n      const message = validateDatetime(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction empty() {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    serialize() {\n      return {\n        value: undefined\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    label: 'Empty'\n  });\n}\n\n/**\n * @deprecated `emptyDocument` has been replaced with the `emptyContent` field\n */\nfunction emptyDocument() {\n  return {\n    kind: 'form',\n    formKind: 'content',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    contentExtension: '.mdoc',\n    serialize() {\n      return {\n        value: undefined,\n        content: new Uint8Array(),\n        external: new Map(),\n        other: new Map()\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    reader: {\n      parse() {\n        return null;\n      }\n    }\n  };\n}\n\nfunction emptyContent(opts) {\n  return {\n    kind: 'form',\n    formKind: 'content',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    contentExtension: `.${opts.extension}`,\n    serialize() {\n      return {\n        value: undefined,\n        content: new Uint8Array(),\n        external: new Map(),\n        other: new Map()\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    reader: {\n      parse() {\n        return null;\n      }\n    }\n  };\n}\n\nfunction file({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath,\n  transformFilename\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.e, {\n        label: label,\n        description: description,\n        validation: validation,\n        transformFilename: transformFilename,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.f)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction image({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath,\n  transformFilename\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.I, {\n        label: label,\n        description: description,\n        validation: validation,\n        transformFilename: transformFilename,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.f)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction pluralize(count, options) {\n  const {\n    singular,\n    plural = singular + 's',\n    inclusive = true\n  } = options;\n  const variant = count === 1 ? singular : plural;\n  return inclusive ? `${count} ${variant}` : variant;\n}\n\nfunction validateMultiRelationshipLength(validation, value) {\n  var _validation$length$mi, _validation$length, _validation$length$ma, _validation$length2;\n  const minLength = (_validation$length$mi = validation === null || validation === void 0 || (_validation$length = validation.length) === null || _validation$length === void 0 ? void 0 : _validation$length.min) !== null && _validation$length$mi !== void 0 ? _validation$length$mi : 0;\n  if (value.length < minLength) {\n    return `Must have at least ${pluralize(minLength, {\n      singular: 'item'\n    })}.`;\n  }\n  const maxLength = (_validation$length$ma = validation === null || validation === void 0 || (_validation$length2 = validation.length) === null || _validation$length2 === void 0 ? void 0 : _validation$length2.max) !== null && _validation$length$ma !== void 0 ? _validation$length$ma : Infinity;\n  if (value.length > maxLength) {\n    return `Must have at most ${pluralize(maxLength, {\n      singular: 'item'\n    })}.`;\n  }\n}\n\nfunction multiRelationship({\n  label,\n  collection,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.M, {\n        label: label,\n        collection: collection,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return [];\n    },\n    parse(value) {\n      if (value === undefined) {\n        return [];\n      }\n      if (!Array.isArray(value) || !value.every(emery__WEBPACK_IMPORTED_MODULE_4__.isString)) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be an array of strings');\n      }\n      return value;\n    },\n    validate(value) {\n      const error = validateMultiRelationshipLength(validation, value);\n      if (error) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(error);\n      }\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n}\n\nfunction multiselect({\n  label,\n  options,\n  defaultValue = [],\n  description\n}) {\n  const valuesToOption = new Map(options.map(x => [x.value, x]));\n  const field = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.f, {\n        label: label,\n        description: description,\n        options: options,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return [];\n      }\n      if (!Array.isArray(value)) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be an array of options');\n      }\n      if (!value.every(x => typeof x === 'string' && valuesToOption.has(x))) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(`Must be an array with one of ${options.map(x => x.value).join(', ')}`);\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nfunction validateNumber(validation, value, step, label) {\n  if (value !== null && typeof value !== 'number') {\n    return `${label} must be a number`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if (value !== null) {\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined && value < validation.min) {\n      return `${label} must be at least ${validation.min}`;\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined && value > validation.max) {\n      return `${label} must be at most ${validation.max}`;\n    }\n    if (step !== undefined && (validation === null || validation === void 0 ? void 0 : validation.validateStep) !== undefined && !isAtStep(value, step)) {\n      return `${label} must be a multiple of ${step}`;\n    }\n  }\n}\nfunction decimalPlaces(value) {\n  const stringified = value.toString();\n  const indexOfDecimal = stringified.indexOf('.');\n  if (indexOfDecimal === -1) {\n    const indexOfE = stringified.indexOf('e-');\n    return indexOfE === -1 ? 0 : parseInt(stringified.slice(indexOfE + 2));\n  }\n  return stringified.length - indexOfDecimal - 1;\n}\nfunction isAtStep(value, step) {\n  const dc = Math.max(decimalPlaces(step), decimalPlaces(value));\n  const base = Math.pow(10, dc);\n  return value * base % (step * base) === 0;\n}\n\nfunction number({\n  label,\n  defaultValue,\n  step,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.N, {\n        label: label,\n        description: description,\n        validation: validation,\n        step: step,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue !== null && defaultValue !== void 0 ? defaultValue : null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value === 'number') {\n        return value;\n      }\n      throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a number');\n    },\n    validate(value) {\n      const message = validateNumber(validation, value, step, label);\n      if (message !== undefined) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction pathReference({\n  label,\n  pattern,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.P, {\n        label: label,\n        pattern: pattern,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction relationship({\n  label,\n  collection,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.R, {\n        label: label,\n        collection: collection,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction parseSlugFieldAsNormalField(value) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug: ''\n    };\n  }\n  if (typeof value !== 'object') {\n    throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be an object');\n  }\n  if (Object.keys(value).length !== 2) {\n    throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Unexpected keys');\n  }\n  if (!('name' in value) || !('slug' in value)) {\n    throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Missing name or slug');\n  }\n  if (typeof value.name !== 'string') {\n    throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('name must be a string');\n  }\n  if (typeof value.slug !== 'string') {\n    throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('slug must be a string');\n  }\n  return {\n    name: value.name,\n    slug: value.slug\n  };\n}\nfunction parseAsSlugField(value, slug) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug\n    };\n  }\n  if (typeof value !== 'string') {\n    throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n  }\n  return {\n    name: value,\n    slug\n  };\n}\nfunction slug(_args) {\n  var _args$name$validation, _args$name$validation2, _args$name$validation3, _args$name$validation4, _args$name$validation5, _args$slug;\n  const args = {\n    ..._args,\n    name: {\n      ..._args.name,\n      validation: {\n        pattern: (_args$name$validation = _args.name.validation) === null || _args$name$validation === void 0 ? void 0 : _args$name$validation.pattern,\n        length: {\n          min: Math.max((_args$name$validation2 = _args.name.validation) !== null && _args$name$validation2 !== void 0 && _args$name$validation2.isRequired ? 1 : 0, (_args$name$validation3 = (_args$name$validation4 = _args.name.validation) === null || _args$name$validation4 === void 0 || (_args$name$validation4 = _args$name$validation4.length) === null || _args$name$validation4 === void 0 ? void 0 : _args$name$validation4.min) !== null && _args$name$validation3 !== void 0 ? _args$name$validation3 : 0),\n          max: (_args$name$validation5 = _args.name.validation) === null || _args$name$validation5 === void 0 || (_args$name$validation5 = _args$name$validation5.length) === null || _args$name$validation5 === void 0 ? void 0 : _args$name$validation5.max\n        }\n      }\n    }\n  };\n  const naiveGenerateSlug = ((_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.generate) || _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.s;\n  let _defaultValue;\n  function defaultValue() {\n    if (!_defaultValue) {\n      var _args$name$defaultVal, _args$name$defaultVal2;\n      _defaultValue = {\n        name: (_args$name$defaultVal = args.name.defaultValue) !== null && _args$name$defaultVal !== void 0 ? _args$name$defaultVal : '',\n        slug: naiveGenerateSlug((_args$name$defaultVal2 = args.name.defaultValue) !== null && _args$name$defaultVal2 !== void 0 ? _args$name$defaultVal2 : '')\n      };\n    }\n    return _defaultValue;\n  }\n  function validate(value, {\n    slugField\n  } = {\n    slugField: undefined\n  }) {\n    var _args$name$validation6, _args$name$validation7, _args$name$validation8, _args$name$validation9, _args$name$validation10, _args$slug$validation, _args$slug2, _args$slug$validation2, _args$slug3, _args$slug$label, _args$slug4, _args$slug5;\n    const nameMessage = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.v)(value.name, (_args$name$validation6 = (_args$name$validation7 = args.name.validation) === null || _args$name$validation7 === void 0 || (_args$name$validation7 = _args$name$validation7.length) === null || _args$name$validation7 === void 0 ? void 0 : _args$name$validation7.min) !== null && _args$name$validation6 !== void 0 ? _args$name$validation6 : 0, (_args$name$validation8 = (_args$name$validation9 = args.name.validation) === null || _args$name$validation9 === void 0 || (_args$name$validation9 = _args$name$validation9.length) === null || _args$name$validation9 === void 0 ? void 0 : _args$name$validation9.max) !== null && _args$name$validation8 !== void 0 ? _args$name$validation8 : Infinity, args.name.label, undefined, (_args$name$validation10 = args.name.validation) === null || _args$name$validation10 === void 0 ? void 0 : _args$name$validation10.pattern);\n    if (nameMessage !== undefined) {\n      throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(nameMessage);\n    }\n    const slugMessage = (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.v)(value.slug, (_args$slug$validation = (_args$slug2 = args.slug) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.validation) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.length) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.min) !== null && _args$slug$validation !== void 0 ? _args$slug$validation : 1, (_args$slug$validation2 = (_args$slug3 = args.slug) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.validation) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.length) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.max) !== null && _args$slug$validation2 !== void 0 ? _args$slug$validation2 : Infinity, (_args$slug$label = (_args$slug4 = args.slug) === null || _args$slug4 === void 0 ? void 0 : _args$slug4.label) !== null && _args$slug$label !== void 0 ? _args$slug$label : 'Slug', slugField ? slugField : {\n      slugs: emptySet,\n      glob: '*'\n    }, (_args$slug5 = args.slug) === null || _args$slug5 === void 0 || (_args$slug5 = _args$slug5.validation) === null || _args$slug5 === void 0 ? void 0 : _args$slug5.pattern);\n    if (slugMessage !== undefined) {\n      throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(slugMessage);\n    }\n    return value;\n  }\n  const emptySet = new Set();\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    label: args.name.label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.g, {\n        args: args,\n        naiveGenerateSlug: naiveGenerateSlug,\n        defaultValue: defaultValue(),\n        ...props\n      });\n    },\n    defaultValue,\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return parseAsSlugField(value, args.slug);\n      }\n      return parseSlugFieldAsNormalField(value);\n    },\n    validate,\n    serialize(value) {\n      return {\n        value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        value: value.name,\n        slug: value.slug\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseSlugFieldAsNormalField(value);\n        return validate(parsed);\n      },\n      parseWithSlug(value, args) {\n        return validate(parseAsSlugField(value, args.slug), {\n          slugField: {\n            glob: args.glob,\n            slugs: emptySet\n          }\n        }).name;\n      }\n    }\n  };\n}\n\nfunction isValidURL(url) {\n  return url === (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_5__.sanitizeUrl)(url);\n}\n\nfunction validateUrl(validation, value, label) {\n  if (value !== null && (typeof value !== 'string' || !isValidURL(value))) {\n    return `${label} is not a valid URL`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n}\n\nfunction url({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.U, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue || null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value === '' ? null : value;\n    },\n    validate(value) {\n      const message = validateUrl(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction ignored() {\n  return {\n    kind: 'form',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return {\n        value: undefined\n      };\n    },\n    parse(value) {\n      return {\n        value\n      };\n    },\n    serialize(value) {\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    label: 'Ignored',\n    reader: {\n      parse(value) {\n        return value;\n      }\n    }\n  };\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  array: array,\n  blocks: blocks,\n  checkbox: checkbox,\n  child: child,\n  cloudImage: cloudImage,\n  conditional: conditional,\n  date: date,\n  datetime: datetime,\n  document: _index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.d,\n  empty: empty,\n  emptyDocument: emptyDocument,\n  emptyContent: emptyContent,\n  file: file,\n  image: image,\n  integer: _index_39d45899_node_js__WEBPACK_IMPORTED_MODULE_6__.i,\n  multiRelationship: multiRelationship,\n  multiselect: multiselect,\n  number: number,\n  object: _index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.o,\n  pathReference: pathReference,\n  relationship: relationship,\n  select: select,\n  slug: slug,\n  text: _index_1a9da0fb_node_js__WEBPACK_IMPORTED_MODULE_1__.t,\n  url: url,\n  ignored: ignored,\n  mdx: _index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.m,\n  markdoc: _index_aaf578e2_node_js__WEBPACK_IMPORTED_MODULE_3__.a\n});\n\nfunction BlockWrapper() {}\nfunction NotEditable() {}\nfunction ToolbarSeparator() {}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@keystatic/core/dist/keystatic-core.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@keystatic/next/dist/keystatic-next-ui-app.js":
/*!********************************************************************!*\
  !*** ./node_modules/@keystatic/next/dist/keystatic-next-ui-app.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makePage: () => (/* binding */ makePage)\n/* harmony export */ });\n/* harmony import */ var _keystatic_core_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @keystatic/core/ui */ \"(ssr)/./node_modules/@keystatic/core/dist/keystatic-core-ui.node.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n\n\n\nfunction makePage(config) {\n  return function Page() {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_keystatic_core_ui__WEBPACK_IMPORTED_MODULE_0__.Keystatic, {\n      config: config,\n      appSlug: appSlug\n    });\n  };\n}\nconst appSlug = {\n  envName: 'NEXT_PUBLIC_KEYSTATIC_GITHUB_APP_SLUG',\n  value: process.env.NEXT_PUBLIC_KEYSTATIC_GITHUB_APP_SLUG\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9uZXh0L2Rpc3Qva2V5c3RhdGljLW5leHQtdWktYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNQOztBQUV4QztBQUNBO0FBQ0Esd0JBQXdCLHNEQUFHLENBQUMseURBQVM7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtleXN0YXRpYy90ZW1wbGF0ZXMtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BrZXlzdGF0aWMvbmV4dC9kaXN0L2tleXN0YXRpYy1uZXh0LXVpLWFwcC5qcz9kOTg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtleXN0YXRpYyB9IGZyb20gJ0BrZXlzdGF0aWMvY29yZS91aSc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdyZWFjdC9qc3gtcnVudGltZSc7XG5cbmZ1bmN0aW9uIG1ha2VQYWdlKGNvbmZpZykge1xuICByZXR1cm4gZnVuY3Rpb24gUGFnZSgpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL2pzeChLZXlzdGF0aWMsIHtcbiAgICAgIGNvbmZpZzogY29uZmlnLFxuICAgICAgYXBwU2x1ZzogYXBwU2x1Z1xuICAgIH0pO1xuICB9O1xufVxuY29uc3QgYXBwU2x1ZyA9IHtcbiAgZW52TmFtZTogJ05FWFRfUFVCTElDX0tFWVNUQVRJQ19HSVRIVUJfQVBQX1NMVUcnLFxuICB2YWx1ZTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfS0VZU1RBVElDX0dJVEhVQl9BUFBfU0xVR1xufTtcblxuZXhwb3J0IHsgbWFrZVBhZ2UgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@keystatic/next/dist/keystatic-next-ui-app.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/api-b2cd9ecd.node.react-server.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/api-b2cd9ecd.node.react-server.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ component)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-b2de9be1.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n\n\n\n\n\n// this is written like this rather than ArrayField<ComponentSchema> to avoid TypeScript erroring about circularity\nfunction component(options) {\n  return options;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvYXBpLWIyY2Q5ZWNkLm5vZGUucmVhY3Qtc2VydmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJCO0FBQ29CO0FBQ2hDO0FBQ2tCOztBQUVqQztBQUNBO0FBQ0E7QUFDQTs7QUFFMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvYXBpLWIyY2Q5ZWNkLm5vZGUucmVhY3Qtc2VydmVyLmpzPzk1MWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC9qc3gtcnVudGltZSc7XG5pbXBvcnQgJy4vaW5kZXgtYjJkZTliZTEubm9kZS5yZWFjdC1zZXJ2ZXIuanMnO1xuaW1wb3J0ICdlbWVyeSc7XG5pbXBvcnQgJ0BicmFpbnRyZWUvc2FuaXRpemUtdXJsJztcblxuLy8gdGhpcyBpcyB3cml0dGVuIGxpa2UgdGhpcyByYXRoZXIgdGhhbiBBcnJheUZpZWxkPENvbXBvbmVudFNjaGVtYT4gdG8gYXZvaWQgVHlwZVNjcmlwdCBlcnJvcmluZyBhYm91dCBjaXJjdWxhcml0eVxuZnVuY3Rpb24gY29tcG9uZW50KG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnM7XG59XG5cbmV4cG9ydCB7IGNvbXBvbmVudCBhcyBjIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/api-b2cd9ecd.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/generic-0d618209.node.react-server.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/generic-0d618209.node.react-server.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_6___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ cache),\n/* harmony export */   c: () => (/* binding */ collectionReader),\n/* harmony export */   s: () => (/* binding */ singletonReader)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-b2de9be1.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-10ea50e2.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js\");\n/* harmony import */ var js_yaml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! js-yaml */ \"(rsc)/./node_modules/js-yaml/dist/js-yaml.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n\n\n\n\n\n\n\n\nconst getInitialPropsValue = _getInitialPropsValue;\nfunction _getInitialPropsValue(schema) {\n  switch (schema.kind) {\n    case 'form':\n      return schema.defaultValue();\n    case 'child':\n      return schema.options.kind === 'block' ? [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }] : null;\n    case 'conditional':\n      {\n        const defaultValue = schema.discriminant.defaultValue();\n        return {\n          discriminant: defaultValue,\n          value: getInitialPropsValue(schema.values[defaultValue.toString()])\n        };\n      }\n    case 'object':\n      {\n        const obj = {};\n        for (const key of Object.keys(schema.fields)) {\n          obj[key] = getInitialPropsValue(schema.fields[key]);\n        }\n        return obj;\n      }\n    case 'array':\n      {\n        return [];\n      }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_2__.assertNever)(schema);\n}\n\nfunction validateArrayLength(schema, val, path) {\n  var _schema$validation, _schema$validation2;\n  if (((_schema$validation = schema.validation) === null || _schema$validation === void 0 || (_schema$validation = _schema$validation.length) === null || _schema$validation === void 0 ? void 0 : _schema$validation.min) !== undefined && val.length < schema.validation.length.min) {\n    return new PropValidationError(new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F(`Must have at least ${schema.validation.length.min} element${schema.validation.length.min === 1 ? '' : 's'}`), path, schema);\n  }\n  if (((_schema$validation2 = schema.validation) === null || _schema$validation2 === void 0 || (_schema$validation2 = _schema$validation2.length) === null || _schema$validation2 === void 0 ? void 0 : _schema$validation2.max) !== undefined && val.length > schema.validation.length.max) {\n    return new PropValidationError(new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F(`Must have at most ${schema.validation.length.max} element${schema.validation.length.max === 1 ? '' : 's'}}`), path, schema);\n  }\n}\n\nclass PropValidationError extends Error {\n  constructor(cause, path, schema) {\n    super(`field error at ${path.join('.')}`, {\n      cause\n    });\n    this.path = path;\n    this.schema = schema;\n    this.cause = cause;\n  }\n}\nfunction toFormFieldStoredValue(val) {\n  if (val === null) {\n    return undefined;\n  }\n  return val;\n}\nconst isArray = Array.isArray;\nfunction parseProps(schema, _value, path, pathWithArrayFieldSlugs, parseFormField, /** This should be true for the reader and false elsewhere */\nvalidateArrayFieldLength) {\n  let value = toFormFieldStoredValue(_value);\n  if (schema.kind === 'form') {\n    try {\n      return parseFormField(schema, value, path, pathWithArrayFieldSlugs);\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n  }\n  if (schema.kind === 'child') {\n    return null;\n  }\n  if (schema.kind === 'conditional') {\n    if (value === undefined) {\n      return getInitialPropsValue(schema);\n    }\n    try {\n      if (typeof value !== 'object' || value === null || isArray(value) || value instanceof Date) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F('Must be an object');\n      }\n      for (const key of Object.keys(value)) {\n        if (key !== 'discriminant' && key !== 'value') {\n          throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F(`Must only contain keys \"discriminant\" and \"value\", not \"${key}\"`);\n        }\n      }\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n    const parsedDiscriminant = parseProps(schema.discriminant, value.discriminant, path.concat('discriminant'), pathWithArrayFieldSlugs.concat('discriminant'), parseFormField, validateArrayFieldLength);\n    return {\n      discriminant: parsedDiscriminant,\n      value: parseProps(schema.values[parsedDiscriminant], value.value, path.concat('value'), pathWithArrayFieldSlugs.concat('value'), parseFormField, validateArrayFieldLength)\n    };\n  }\n  if (schema.kind === 'object') {\n    if (value === undefined) {\n      value = {};\n    }\n    try {\n      if (typeof value !== 'object' || value === null || isArray(value) || value instanceof Date) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F('Must be an object');\n      }\n      const allowedKeysSet = new Set(Object.keys(schema.fields));\n      for (const key of Object.keys(value)) {\n        if (!allowedKeysSet.has(key)) {\n          throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F(`Key on object value \"${key}\" is not allowed`);\n        }\n      }\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n    const val = {};\n    const errors = [];\n    for (const key of Object.keys(schema.fields)) {\n      let individualVal = value[key];\n      try {\n        const propVal = parseProps(schema.fields[key], individualVal, path.concat(key), pathWithArrayFieldSlugs.concat(key), parseFormField, validateArrayFieldLength);\n        val[key] = propVal;\n      } catch (err) {\n        errors.push(err);\n      }\n    }\n    if (errors.length) {\n      throw new AggregateError(errors);\n    }\n    return val;\n  }\n  if (schema.kind === 'array') {\n    if (value === undefined) {\n      return [];\n    }\n    try {\n      if (!isArray(value)) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F('Must be an array');\n      }\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n    const errors = [];\n    try {\n      if (validateArrayFieldLength) {\n        const error = validateArrayLength(schema, value, path);\n        if (error !== undefined) {\n          errors.push(error);\n        }\n      }\n      return value.map((innerVal, i) => {\n        try {\n          let slug = i.toString();\n          if (schema.slugField && typeof innerVal === 'object' && innerVal !== null && !isArray(innerVal) && !(innerVal instanceof Date)) {\n            if (schema.element.kind !== 'object') {\n              throw new Error('slugField on array fields requires the an object field element');\n            }\n            const slugField = schema.element.fields[schema.slugField];\n            if (!slugField) {\n              throw new Error(`slugField \"${schema.slugField}\" does not exist on object field`);\n            }\n            if (slugField.kind !== 'form') {\n              throw new Error(`slugField \"${schema.slugField}\" is not a form field`);\n            }\n            if (slugField.formKind !== 'slug') {\n              throw new Error(`slugField \"${schema.slugField}\" is not a slug field`);\n            }\n            let parsedSlugFieldValue;\n            try {\n              parsedSlugFieldValue = slugField.parse(toFormFieldStoredValue(innerVal[schema.slugField]), undefined);\n            } catch (err) {\n              throw new AggregateError([err]);\n            }\n            slug = slugField.serializeWithSlug(parsedSlugFieldValue).slug;\n          }\n          return parseProps(schema.element, innerVal, path.concat(i), pathWithArrayFieldSlugs.concat(slug), parseFormField, validateArrayFieldLength);\n        } catch (err) {\n          errors.push(err);\n        }\n      });\n    } finally {\n      if (errors.length) {\n        throw new AggregateError(errors);\n      }\n    }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_2__.assertNever)(schema);\n}\n\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction splitFrontmatter(data) {\n  const str = textDecoder.decode(data);\n  const match = str.match(/^---(?:\\r?\\n([^]*?))?\\r?\\n---\\r?\\n?/);\n  if (match) {\n    var _match$;\n    const encoded = textEncoder.encode(match[0]);\n    return {\n      frontmatter: (_match$ = match[1]) !== null && _match$ !== void 0 ? _match$ : '',\n      content: data.slice(encoded.byteLength)\n    };\n  }\n  return null;\n}\nfunction loadDataFile(data, formatInfo, requireFrontmatter = false) {\n  const parse = formatInfo.data === 'json' ? JSON.parse : js_yaml__WEBPACK_IMPORTED_MODULE_5__.load;\n  if (!formatInfo.contentField) {\n    const dataFile = textDecoder.decode(data);\n    return {\n      loaded: parse(dataFile)\n    };\n  }\n  const res = splitFrontmatter(data);\n  if (requireFrontmatter && !res) {\n    throw new Error('Frontmatter not found');\n  }\n  return {\n    loaded: res === null ? {} : parse(res.frontmatter),\n    extraFakeFile: {\n      path: `${formatInfo.contentField.path.join('/')}${formatInfo.contentField.contentExtension}`,\n      contents: res === null ? data : res.content\n    }\n  };\n}\n\nfunction cache$1(func) {\n  return func;\n}\n\n// we conditionally using it since it's not actually in stable react releases yet\n// (though it should be unnecessary since this file is only imported in react-server environments anyway)\n// it's a function because some tools try to be smart with accessing things on namespace imports\n// and error at build time if you try to read an export that doesn't exist on a namespace object\nfunction getCache(react) {\n  var _react$cache;\n  return (_react$cache = react.cache) !== null && _react$cache !== void 0 ? _react$cache : cache$1;\n}\nconst cache = getCache(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_6___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_6___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_6__, 2))));\n\nfunction flattenErrors(error) {\n  if (error instanceof AggregateError) {\n    return error.errors.flatMap(flattenErrors);\n  }\n  return [error];\n}\nfunction formatFormDataError(error) {\n  const flatErrors = flattenErrors(error);\n  return flatErrors.map(error => {\n    if (error instanceof PropValidationError) {\n      const path = error.path.join('.');\n      return `${path}: ${error.cause instanceof _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.F ? error.cause.message : `Unexpected error: ${error.cause}`}`;\n    }\n    return `Unexpected error: ${error}`;\n  }).join('\\n');\n}\n\nasync function getAllEntries(parent, fsReader) {\n  return (await Promise.all((await fsReader.readdir(parent)).map(async dirent => {\n    const name = `${parent}${dirent.name}`;\n    const entry = {\n      entry: dirent,\n      name\n    };\n    if (dirent.kind === 'directory') {\n      return [entry, ...(await getAllEntries(`${name}/`, fsReader))];\n    }\n    return entry;\n  }))).flat();\n}\nconst listCollection = cache(async function listCollection(collectionPath, glob, formatInfo, extension, fsReader) {\n  const entries = glob === '*' ? (await fsReader.readdir(collectionPath)).map(entry => ({\n    entry,\n    name: entry.name\n  })) : (await getAllEntries(`${collectionPath}/`, fsReader)).map(x => ({\n    entry: x.entry,\n    name: x.name.slice(collectionPath.length + 1)\n  }));\n  return (await Promise.all(entries.map(async x => {\n    if (formatInfo.dataLocation === 'index') {\n      if (x.entry.kind !== 'directory') return [];\n      if (!(await fsReader.fileExists((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.j)(`${collectionPath}/${x.name}`, formatInfo)))) {\n        return [];\n      }\n      return [x.name];\n    } else {\n      if (x.entry.kind !== 'file' || !x.name.endsWith(extension)) {\n        return [];\n      }\n      return [x.name.slice(0, -extension.length)];\n    }\n  }))).flat();\n});\nfunction collectionReader(collection, config, fsReader) {\n  const formatInfo = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.l)(config, collection);\n  const collectionPath = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(config, collection);\n  const collectionConfig = config.collections[collection];\n  const schema = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.o)(collectionConfig.schema);\n  const glob = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.n)(config, collection);\n  const extension = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.p)(formatInfo);\n  const read = (slug, ...args) => {\n    var _args$;\n    return readItem(schema, formatInfo, (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.q)(config, collection, slug), (_args$ = args[0]) === null || _args$ === void 0 ? void 0 : _args$.resolveLinkedFiles, `\"${slug}\" in collection \"${collection}\"`, fsReader, slug, collectionConfig.slugField, glob);\n  };\n  const list = () => listCollection(collectionPath, glob, formatInfo, extension, fsReader);\n  return {\n    read,\n    readOrThrow: async (...args) => {\n      const entry = await read(...args);\n      if (entry === null) {\n        throw new Error(`Entry \"${args[0]}\" not found in collection \"${collection}\"`);\n      }\n      return entry;\n    },\n    // TODO: this could drop the fs.stat call that list does for each item\n    // since we just immediately read it\n    all: async (...args) => {\n      const slugs = await list();\n      return (await Promise.all(slugs.map(async slug => {\n        const entry = await read(slug, args[0]);\n        if (entry === null) return [];\n        return [{\n          slug,\n          entry\n        }];\n      }))).flat();\n    },\n    list\n  };\n}\nconst readItem = cache(async function readItem(rootSchema, formatInfo, itemDir, resolveLinkedFiles, debugReference, fsReader, ...slugInfo) {\n  if (typeof slugInfo[0] === 'string') {\n    if (slugInfo[0].includes('\\\\')) return null;\n    const split = slugInfo[0].split('/');\n    if (slugInfo[2] === '*' && split.length !== 1) return null;\n    if (split.includes('..') || split.includes('.')) return null;\n  }\n  const dataFile = await fsReader.readFile((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.j)(itemDir, formatInfo));\n  if (dataFile === null) return null;\n  const {\n    loaded,\n    extraFakeFile\n  } = loadDataFile(dataFile, formatInfo);\n  const contentFieldPathsToEagerlyResolve = resolveLinkedFiles ? [] : undefined;\n  let validated;\n  try {\n    validated = parseProps(rootSchema, loaded, [], [], (schema, value, path, pathWithArrayFieldSlugs) => {\n      if (schema.formKind === 'asset' || schema.formKind === 'assets') {\n        return schema.reader.parse(value);\n      }\n      if (schema.formKind === 'content') {\n        contentFieldPathsToEagerlyResolve === null || contentFieldPathsToEagerlyResolve === void 0 || contentFieldPathsToEagerlyResolve.push(path);\n        return async () => {\n          let content;\n          const filename = pathWithArrayFieldSlugs.join('/') + schema.contentExtension;\n          if (filename === (extraFakeFile === null || extraFakeFile === void 0 ? void 0 : extraFakeFile.path)) {\n            content = extraFakeFile.contents;\n          } else {\n            var _await$fsReader$readF;\n            content = (_await$fsReader$readF = await fsReader.readFile(`${itemDir}/${filename}`)) !== null && _await$fsReader$readF !== void 0 ? _await$fsReader$readF : undefined;\n          }\n          return schema.reader.parse(value, {\n            content\n          });\n        };\n      }\n      if (path.length === 1 && slugInfo[0] !== undefined) {\n        const [slug, slugField, glob] = slugInfo;\n        if (path[0] === slugField) {\n          if (schema.formKind !== 'slug') {\n            throw new Error(`Slug field ${slugInfo[1]} is not a slug field`);\n          }\n          return schema.reader.parseWithSlug(value, {\n            slug,\n            glob\n          });\n        }\n      }\n      return schema.reader.parse(value);\n    }, true);\n    if (contentFieldPathsToEagerlyResolve !== null && contentFieldPathsToEagerlyResolve !== void 0 && contentFieldPathsToEagerlyResolve.length) {\n      await Promise.all(contentFieldPathsToEagerlyResolve.map(async path => {\n        const parentValue = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.k)(validated, path.slice(0, -1));\n        const keyOnParent = path[path.length - 1];\n        const originalValue = parentValue[keyOnParent];\n        parentValue[keyOnParent] = await originalValue();\n      }));\n    }\n  } catch (err) {\n    const formatted = formatFormDataError(err);\n    throw new Error(`Invalid data for ${debugReference}:\\n${formatted}`);\n  }\n  return validated;\n});\nfunction singletonReader(singleton, config, fsReader) {\n  const formatInfo = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.e)(config, singleton);\n  const singletonPath = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.h)(config, singleton);\n  const schema = (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.o)(config.singletons[singleton].schema);\n  const read = (...args) => {\n    var _args$2;\n    return readItem(schema, formatInfo, singletonPath, (_args$2 = args[0]) === null || _args$2 === void 0 ? void 0 : _args$2.resolveLinkedFiles, `singleton \"${singleton}\"`, fsReader, undefined);\n  };\n  return {\n    read,\n    readOrThrow: async (...opts) => {\n      const entry = await read(...opts);\n      if (entry === null) {\n        throw new Error(`Singleton \"${singleton}\" not found`);\n      }\n      return entry;\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/generic-0d618209.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B: () => (/* binding */ BlocksFieldInput),\n/* harmony export */   C: () => (/* binding */ CheckboxFieldInput),\n/* harmony export */   D: () => (/* binding */ DateFieldInput),\n/* harmony export */   F: () => (/* binding */ FieldDataError),\n/* harmony export */   I: () => (/* binding */ ImageFieldInput),\n/* harmony export */   M: () => (/* binding */ MultiRelationshipInput),\n/* harmony export */   N: () => (/* binding */ NumberFieldInput),\n/* harmony export */   P: () => (/* binding */ PathReferenceInput),\n/* harmony export */   R: () => (/* binding */ RelationshipInput),\n/* harmony export */   S: () => (/* binding */ SelectFieldInput),\n/* harmony export */   U: () => (/* binding */ UrlFieldInput),\n/* harmony export */   a: () => (/* binding */ CloudImageFieldInput),\n/* harmony export */   b: () => (/* binding */ basicFormFieldWithSimpleReaderParse),\n/* harmony export */   c: () => (/* binding */ assertRequired),\n/* harmony export */   d: () => (/* binding */ DatetimeFieldInput),\n/* harmony export */   e: () => (/* binding */ FileFieldInput),\n/* harmony export */   f: () => (/* binding */ MultiselectFieldInput),\n/* harmony export */   g: () => (/* binding */ SlugFieldInput),\n/* harmony export */   h: () => (/* binding */ DocumentFieldInput),\n/* harmony export */   i: () => (/* binding */ serializeMarkdoc),\n/* harmony export */   j: () => (/* binding */ getDefaultValue),\n/* harmony export */   k: () => (/* binding */ serializeFromEditorState),\n/* harmony export */   l: () => (/* binding */ prosemirrorToYXmlFragment),\n/* harmony export */   m: () => (/* binding */ createEditorStateFromYJS),\n/* harmony export */   n: () => (/* binding */ normalizeDocumentFieldChildren),\n/* harmony export */   o: () => (/* binding */ parseToEditorStateMDX),\n/* harmony export */   p: () => (/* binding */ parseToEditorState),\n/* harmony export */   q: () => (/* binding */ serializeFromEditorStateMDX),\n/* harmony export */   r: () => (/* binding */ createEditorSchema),\n/* harmony export */   s: () => (/* binding */ slugify),\n/* harmony export */   t: () => (/* binding */ text),\n/* harmony export */   u: () => (/* binding */ IntegerFieldInput),\n/* harmony export */   v: () => (/* binding */ validateText)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n\n\nclass FieldDataError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'FieldDataError';\n  }\n}\n\nfunction assertRequired(value, validation, label) {\n  if (value === null && validation !== null && validation !== void 0 && validation.isRequired) {\n    throw new FieldDataError(`${label} is required`);\n  }\n}\nfunction basicFormFieldWithSimpleReaderParse(config) {\n  return {\n    kind: 'form',\n    Input: config.Input,\n    defaultValue: config.defaultValue,\n    parse: config.parse,\n    serialize: config.serialize,\n    validate: config.validate,\n    reader: {\n      parse(value) {\n        return config.validate(config.parse(value));\n      }\n    },\n    label: config.label\n  };\n}\n\n// this is used in react-server environments to avoid bundling UI when the reader API is used\n// if you added a new field and get an error that there's missing a missing export here,\n// you probably just need to add another empty export here\n\nfunction empty() {\n  throw new Error(\"unexpected call to function that shouldn't be called in React server component environment\");\n}\nlet SlugFieldInput = empty,\n  TextFieldInput = empty,\n  UrlFieldInput = empty,\n  SelectFieldInput = empty,\n  RelationshipInput = empty,\n  PathReferenceInput = empty,\n  MultiselectFieldInput = empty,\n  MultiRelationshipInput = empty,\n  IntegerFieldInput = empty,\n  NumberFieldInput = empty,\n  ImageFieldInput = empty,\n  FileFieldInput = empty,\n  DatetimeFieldInput = empty,\n  DateFieldInput = empty,\n  CloudImageFieldInput = empty,\n  BlocksFieldInput = empty,\n  DocumentFieldInput = empty,\n  CheckboxFieldInput = empty,\n  createEditorSchema = empty,\n  getDefaultValue = empty,\n  parseToEditorState = empty,\n  serializeFromEditorState = empty,\n  parseToEditorStateMDX = empty,\n  serializeFromEditorStateMDX = empty,\n  createEditorStateFromYJS = empty,\n  prosemirrorToYXmlFragment = empty,\n  normalizeDocumentFieldChildren = empty,\n  slugify = empty,\n  serializeMarkdoc = empty;\n\nfunction validateText(val, min, max, fieldLabel, slugInfo, pattern) {\n  if (val.length < min) {\n    if (min === 1) {\n      return `${fieldLabel} must not be empty`;\n    } else {\n      return `${fieldLabel} must be at least ${min} characters long`;\n    }\n  }\n  if (val.length > max) {\n    return `${fieldLabel} must be no longer than ${max} characters`;\n  }\n  if (pattern && !pattern.regex.test(val)) {\n    return pattern.message || `${fieldLabel} must match the pattern ${pattern.regex}`;\n  }\n  if (slugInfo) {\n    if (val === '') {\n      return `${fieldLabel} must not be empty`;\n    }\n    if (val === '..') {\n      return `${fieldLabel} must not be ..`;\n    }\n    if (val === '.') {\n      return `${fieldLabel} must not be .`;\n    }\n    if (slugInfo.glob === '**') {\n      const split = val.split('/');\n      if (split.some(s => s === '..')) {\n        return `${fieldLabel} must not contain ..`;\n      }\n      if (split.some(s => s === '.')) {\n        return `${fieldLabel} must not be .`;\n      }\n    }\n    if ((slugInfo.glob === '*' ? /[\\\\/]/ : /[\\\\]/).test(val)) {\n      return `${fieldLabel} must not contain slashes`;\n    }\n    if (/^\\s|\\s$/.test(val)) {\n      return `${fieldLabel} must not start or end with spaces`;\n    }\n    if (slugInfo.slugs.has(val)) {\n      return `${fieldLabel} must be unique`;\n    }\n  }\n}\n\nfunction parseAsNormalField(value) {\n  if (value === undefined) {\n    return '';\n  }\n  if (typeof value !== 'string') {\n    throw new FieldDataError('Must be a string');\n  }\n  return value;\n}\nconst emptySet = new Set();\nfunction text({\n  label,\n  defaultValue = '',\n  validation: {\n    length: {\n      max = Infinity,\n      min = 0\n    } = {},\n    pattern,\n    isRequired\n  } = {},\n  description,\n  multiline = false\n}) {\n  min = Math.max(isRequired ? 1 : 0, min);\n  function validate(value, slugField) {\n    const message = validateText(value, min, max, label, slugField, pattern);\n    if (message !== undefined) {\n      throw new FieldDataError(message);\n    }\n    return value;\n  }\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TextFieldInput, {\n        label: label,\n        description: description,\n        min: min,\n        max: max,\n        multiline: multiline,\n        pattern: pattern,\n        ...props\n      });\n    },\n    defaultValue() {\n      return typeof defaultValue === 'string' ? defaultValue : defaultValue();\n    },\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return args.slug;\n      }\n      return parseAsNormalField(value);\n    },\n    serialize(value) {\n      return {\n        value: value === '' ? undefined : value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        slug: value,\n        value: undefined\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseAsNormalField(value);\n        return validate(parsed, undefined);\n      },\n      parseWithSlug(_value, args) {\n        validate(parseAsNormalField(args.slug), {\n          glob: args.glob,\n          slugs: emptySet\n        });\n        return null;\n      }\n    },\n    validate(value, args) {\n      return validate(value, args === null || args === void 0 ? void 0 : args.slugField);\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/index-9722793d.node.react-server.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/index-9722793d.node.react-server.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ integer)\n/* harmony export */ });\n/* harmony import */ var _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-10ea50e2.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n\n\n\nfunction validateInteger(validation, value, label) {\n  if (value !== null && (typeof value !== 'number' || !Number.isInteger(value))) {\n    return `${label} must be a whole number`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if (value !== null) {\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined && value < validation.min) {\n      return `${label} must be at least ${validation.min}`;\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined && value > validation.max) {\n      return `${label} must be at most ${validation.max}`;\n    }\n  }\n}\n\nfunction integer({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__.u, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue !== null && defaultValue !== void 0 ? defaultValue : null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value === 'number') {\n        return value;\n      }\n      throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__.F('Must be a number');\n    },\n    validate(value) {\n      const message = validateInteger(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__.F(message);\n      }\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaW5kZXgtOTcyMjc5M2Qubm9kZS5yZWFjdC1zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1LO0FBQzNIOztBQUV4QztBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU8sbUJBQW1CLGVBQWU7QUFDekQ7QUFDQTtBQUNBLGdCQUFnQixPQUFPLGtCQUFrQixlQUFlO0FBQ3hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELFNBQVMsdUVBQW1DO0FBQzVDO0FBQ0E7QUFDQSwwQkFBMEIsc0RBQUcsQ0FBQyxtRUFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUVBQWM7QUFDOUIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtRUFBYztBQUNoQztBQUNBLE1BQU0sdUVBQWM7QUFDcEI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaW5kZXgtOTcyMjc5M2Qubm9kZS5yZWFjdC1zZXJ2ZXIuanM/MzNmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiIGFzIGJhc2ljRm9ybUZpZWxkV2l0aFNpbXBsZVJlYWRlclBhcnNlLCB1IGFzIEludGVnZXJGaWVsZElucHV0LCBGIGFzIEZpZWxkRGF0YUVycm9yLCBjIGFzIGFzc2VydFJlcXVpcmVkIH0gZnJvbSAnLi9pbmRleC0xMGVhNTBlMi5ub2RlLnJlYWN0LXNlcnZlci5qcyc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdyZWFjdC9qc3gtcnVudGltZSc7XG5cbmZ1bmN0aW9uIHZhbGlkYXRlSW50ZWdlcih2YWxpZGF0aW9uLCB2YWx1ZSwgbGFiZWwpIHtcbiAgaWYgKHZhbHVlICE9PSBudWxsICYmICh0eXBlb2YgdmFsdWUgIT09ICdudW1iZXInIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkpIHtcbiAgICByZXR1cm4gYCR7bGFiZWx9IG11c3QgYmUgYSB3aG9sZSBudW1iZXJgO1xuICB9XG4gIGlmICh2YWxpZGF0aW9uICE9PSBudWxsICYmIHZhbGlkYXRpb24gIT09IHZvaWQgMCAmJiB2YWxpZGF0aW9uLmlzUmVxdWlyZWQgJiYgdmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gYCR7bGFiZWx9IGlzIHJlcXVpcmVkYDtcbiAgfVxuICBpZiAodmFsdWUgIT09IG51bGwpIHtcbiAgICBpZiAoKHZhbGlkYXRpb24gPT09IG51bGwgfHwgdmFsaWRhdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmFsaWRhdGlvbi5taW4pICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgPCB2YWxpZGF0aW9uLm1pbikge1xuICAgICAgcmV0dXJuIGAke2xhYmVsfSBtdXN0IGJlIGF0IGxlYXN0ICR7dmFsaWRhdGlvbi5taW59YDtcbiAgICB9XG4gICAgaWYgKCh2YWxpZGF0aW9uID09PSBudWxsIHx8IHZhbGlkYXRpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbGlkYXRpb24ubWF4KSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlID4gdmFsaWRhdGlvbi5tYXgpIHtcbiAgICAgIHJldHVybiBgJHtsYWJlbH0gbXVzdCBiZSBhdCBtb3N0ICR7dmFsaWRhdGlvbi5tYXh9YDtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaW50ZWdlcih7XG4gIGxhYmVsLFxuICBkZWZhdWx0VmFsdWUsXG4gIHZhbGlkYXRpb24sXG4gIGRlc2NyaXB0aW9uXG59KSB7XG4gIHJldHVybiBiYXNpY0Zvcm1GaWVsZFdpdGhTaW1wbGVSZWFkZXJQYXJzZSh7XG4gICAgbGFiZWwsXG4gICAgSW5wdXQocHJvcHMpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovanN4KEludGVnZXJGaWVsZElucHV0LCB7XG4gICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICB2YWxpZGF0aW9uOiB2YWxpZGF0aW9uLFxuICAgICAgICAuLi5wcm9wc1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWUoKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdFZhbHVlICE9PSBudWxsICYmIGRlZmF1bHRWYWx1ZSAhPT0gdm9pZCAwID8gZGVmYXVsdFZhbHVlIDogbnVsbDtcbiAgICB9LFxuICAgIHBhcnNlKHZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBGaWVsZERhdGFFcnJvcignTXVzdCBiZSBhIG51bWJlcicpO1xuICAgIH0sXG4gICAgdmFsaWRhdGUodmFsdWUpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB2YWxpZGF0ZUludGVnZXIodmFsaWRhdGlvbiwgdmFsdWUsIGxhYmVsKTtcbiAgICAgIGlmIChtZXNzYWdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEZpZWxkRGF0YUVycm9yKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgYXNzZXJ0UmVxdWlyZWQodmFsdWUsIHZhbGlkYXRpb24sIGxhYmVsKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNlcmlhbGl6ZSh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWU6IHZhbHVlID09PSBudWxsID8gdW5kZWZpbmVkIDogdmFsdWVcbiAgICAgIH07XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IHsgaW50ZWdlciBhcyBpIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/index-9722793d.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ markdoc),\n/* harmony export */   b: () => (/* binding */ getDirectoriesForTreeKey),\n/* harmony export */   c: () => (/* binding */ getCollectionPath),\n/* harmony export */   d: () => (/* binding */ document),\n/* harmony export */   e: () => (/* binding */ getSingletonFormat),\n/* harmony export */   f: () => (/* binding */ fixPath),\n/* harmony export */   g: () => (/* binding */ getSrcPrefix),\n/* harmony export */   h: () => (/* binding */ getSingletonPath),\n/* harmony export */   i: () => (/* binding */ blobSha),\n/* harmony export */   j: () => (/* binding */ getEntryDataFilepath),\n/* harmony export */   k: () => (/* binding */ getValueAtPropPath),\n/* harmony export */   l: () => (/* binding */ getCollectionFormat),\n/* harmony export */   m: () => (/* binding */ mdx),\n/* harmony export */   n: () => (/* binding */ getSlugGlobForCollection),\n/* harmony export */   o: () => (/* binding */ object),\n/* harmony export */   p: () => (/* binding */ getDataFileExtension),\n/* harmony export */   q: () => (/* binding */ getCollectionItemPath),\n/* harmony export */   r: () => (/* binding */ getTreeNodeAtPath),\n/* harmony export */   t: () => (/* binding */ treeEntriesToTreeNodes),\n/* harmony export */   u: () => (/* binding */ updateTreeWithChanges)\n/* harmony export */ });\n/* harmony import */ var _markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @markdoc/markdoc/dist/index.mjs */ \"(rsc)/./node_modules/@markdoc/markdoc/dist/index.mjs\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! emery/assertions */ \"(rsc)/./node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-10ea50e2.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\n\n\n\n\n\nfunction object(fields, opts) {\n  return {\n    ...opts,\n    kind: 'object',\n    fields\n  };\n}\n\nfunction getValueAtPropPath(value, inputPath) {\n  const path = [...inputPath];\n  while (path.length) {\n    const key = path.shift();\n    value = value[key];\n  }\n  return value;\n}\nfunction transformProps(schema, value, visitors, path = []) {\n  if (schema.kind === 'form' || schema.kind === 'child') {\n    if (visitors[schema.kind]) {\n      return visitors[schema.kind](schema, value, path);\n    }\n    return value;\n  }\n  if (schema.kind === 'object') {\n    const val = Object.fromEntries(Object.entries(schema.fields).map(([key, val]) => {\n      return [key, transformProps(val, value[key], visitors, [...path, key])];\n    }));\n    if (visitors.object) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'array') {\n    const val = value.map((val, idx) => transformProps(schema.element, val, visitors, path.concat(idx)));\n    if (visitors.array) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'conditional') {\n    const discriminant = transformProps(schema.discriminant, value.discriminant, visitors, path.concat('discriminant'));\n    const conditionalVal = transformProps(schema.values[discriminant.toString()], value.value, visitors, path.concat('value'));\n    const val = {\n      discriminant,\n      value: conditionalVal\n    };\n    if (visitors.conditional) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\n\n// a v important note\n// marks in the markdown ast/html are represented quite differently to how they are in slate\n// if you had the markdown **something https://keystonejs.com something**\n// the bold node is the parent of the link node\n// but in slate, marks are only represented on text nodes\n\nconst currentlyActiveMarks = new Set();\nconst currentlyDisabledMarks = new Set();\nlet currentLink = null;\nfunction addMarkToChildren(mark, cb) {\n  const wasPreviouslyActive = currentlyActiveMarks.has(mark);\n  currentlyActiveMarks.add(mark);\n  try {\n    return cb();\n  } finally {\n    if (!wasPreviouslyActive) {\n      currentlyActiveMarks.delete(mark);\n    }\n  }\n}\nfunction setLinkForChildren(href, cb) {\n  // we'll only use the outer link\n  if (currentLink !== null) {\n    return cb();\n  }\n  currentLink = href;\n  try {\n    return cb();\n  } finally {\n    currentLink = null;\n  }\n}\n\n/**\n * This type is more strict than `Element & { type: 'link'; }` because `children`\n * is constrained to only contain Text nodes. This can't be assumed generally around the editor\n * (because of potentially future inline components or nested links(which are normalized away but the editor needs to not break if it happens))\n * but where this type is used, we're only going to allow links to contain Text and that's important\n * so that we know a block will never be inside an inline because Slate gets unhappy when that happens\n * (really the link inline should probably be a mark rather than an inline,\n * non-void inlines are probably always bad but that would imply changing the document\n * structure which would be such unnecessary breakage)\n */\n\nfunction getInlineNodes(text) {\n  const node = {\n    text\n  };\n  for (const mark of currentlyActiveMarks) {\n    if (!currentlyDisabledMarks.has(mark)) {\n      node[mark] = true;\n    }\n  }\n  if (currentLink !== null) {\n    return [{\n      text: ''\n    }, {\n      type: 'link',\n      href: currentLink,\n      children: [node]\n    }, {\n      text: ''\n    }];\n  }\n  return [node];\n}\n\nclass VariableChildFields extends Error {\n  constructor() {\n    super('There are a variable number of child fields');\n  }\n}\nfunction findSingleChildField(schema) {\n  try {\n    const result = _findConstantChildFields(schema, [], new Set());\n    if (result.length === 1) {\n      return result[0];\n    }\n    return;\n  } catch (err) {\n    if (err instanceof VariableChildFields) {\n      return;\n    }\n    throw err;\n  }\n}\nfunction _findConstantChildFields(schema, path, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return [];\n  }\n  seenSchemas.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return [];\n    case 'child':\n      return [{\n        relativePath: path,\n        options: schema.options,\n        kind: 'child'\n      }];\n    case 'conditional':\n      {\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'array':\n      {\n        if (schema.asChildTag) {\n          const child = _findConstantChildFields(schema.element, [], seenSchemas);\n          if (child.length > 1) {\n            return [];\n          }\n          return [{\n            kind: 'array',\n            asChildTag: schema.asChildTag,\n            field: schema,\n            relativePath: path,\n            child: child[0]\n          }];\n        }\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'object':\n      {\n        const paths = [];\n        for (const [key, value] of Object.entries(schema.fields)) {\n          paths.push(..._findConstantChildFields(value, path.concat(key), seenSchemas));\n        }\n        return paths;\n      }\n  }\n}\nfunction couldContainChildField(schema, seen = new Set()) {\n  if (seen.has(schema)) {\n    return false;\n  }\n  seen.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return false;\n    case 'child':\n      return true;\n    case 'conditional':\n      return Object.values(schema.values).some(value => couldContainChildField(value, seen));\n    case 'object':\n      return Object.keys(schema.fields).some(key => couldContainChildField(schema.fields[key], seen));\n    case 'array':\n      return couldContainChildField(schema.element, seen);\n  }\n}\n\nfunction inlineNodeFromMarkdoc(node) {\n  if (node.type === 'inline') {\n    return inlineChildrenFromMarkdoc(node.children);\n  }\n  if (node.type === 'link') {\n    return setLinkForChildren(node.attributes.href, () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'text') {\n    return getInlineNodes(node.attributes.content);\n  }\n  if (node.type === 'strong') {\n    return addMarkToChildren('bold', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'code') {\n    return addMarkToChildren('code', () => getInlineNodes(node.attributes.content));\n  }\n  if (node.type === 'em') {\n    return addMarkToChildren('italic', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 's') {\n    return addMarkToChildren('strikethrough', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'u') {\n      return addMarkToChildren('underline', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'kbd') {\n      return addMarkToChildren('keyboard', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sub') {\n      return addMarkToChildren('subscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sup') {\n      return addMarkToChildren('superscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n  }\n  if (node.type === 'softbreak') {\n    return getInlineNodes(' ');\n  }\n  if (node.type === 'hardbreak') {\n    return getInlineNodes('\\n');\n  }\n  if (node.tag === 'component-inline-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n    return {\n      type: 'component-inline-prop',\n      children: inlineFromMarkdoc(node.children),\n      propPath: node.attributes.propPath\n    };\n  }\n  throw new Error(`Unknown inline node type: ${node.type}`);\n}\nfunction inlineChildrenFromMarkdoc(nodes) {\n  return nodes.flatMap(inlineNodeFromMarkdoc);\n}\nfunction inlineFromMarkdoc(nodes) {\n  const transformedNodes = nodes.flatMap(inlineNodeFromMarkdoc);\n  const nextNodes = [];\n  let lastNode;\n  for (const [idx, node] of transformedNodes.entries()) {\n    var _lastNode;\n    if (node.type === undefined && node.text === '' && ((_lastNode = lastNode) === null || _lastNode === void 0 ? void 0 : _lastNode.type) === undefined && idx !== transformedNodes.length - 1) {\n      continue;\n    }\n    nextNodes.push(node);\n    lastNode = node;\n  }\n  if (!nextNodes.length) {\n    nextNodes.push({\n      text: ''\n    });\n  }\n  return nextNodes;\n}\nfunction fromMarkdoc(node, componentBlocks) {\n  const nodes = node.children.flatMap(x => fromMarkdocNode(x, componentBlocks));\n  if (nodes.length === 0) {\n    return [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n  }\n  if (nodes[nodes.length - 1].type !== 'paragraph') {\n    nodes.push({\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    });\n  }\n  return nodes;\n}\nfunction fromMarkdocNode(node, componentBlocks) {\n  if (node.type === 'blockquote') {\n    return {\n      type: 'blockquote',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'fence') {\n    const {\n      language,\n      content,\n      ...rest\n    } = node.attributes;\n    return {\n      type: 'code',\n      children: [{\n        text: content.replace(/\\n$/, '')\n      }],\n      ...(typeof language === 'string' ? {\n        language\n      } : {}),\n      ...rest\n    };\n  }\n  if (node.type === 'heading') {\n    return {\n      ...node.attributes,\n      level: node.attributes.level,\n      type: 'heading',\n      children: inlineFromMarkdoc(node.children)\n    };\n  }\n  if (node.type === 'list') {\n    return {\n      type: node.attributes.ordered ? 'ordered-list' : 'unordered-list',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'item') {\n    var _node$children$;\n    const children = [{\n      type: 'list-item-content',\n      children: node.children.length ? inlineFromMarkdoc([node.children[0]]) : [{\n        text: ''\n      }]\n    }];\n    if (((_node$children$ = node.children[1]) === null || _node$children$ === void 0 ? void 0 : _node$children$.type) === 'list') {\n      const list = node.children[1];\n      children.push({\n        type: list.attributes.ordered ? 'ordered-list' : 'unordered-list',\n        children: list.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      });\n    }\n    return {\n      type: 'list-item',\n      children\n    };\n  }\n  if (node.type === 'paragraph') {\n    if (node.children.length === 1 && node.children[0].type === 'inline' && node.children[0].children.length === 1 && node.children[0].children[0].type === 'image') {\n      var _image$attributes$tit;\n      const image = node.children[0].children[0];\n      return {\n        type: 'image',\n        src: decodeURI(image.attributes.src),\n        alt: image.attributes.alt,\n        title: (_image$attributes$tit = image.attributes.title) !== null && _image$attributes$tit !== void 0 ? _image$attributes$tit : '',\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    const children = inlineFromMarkdoc(node.children);\n    if (children.length === 1 && children[0].type === 'component-inline-prop') {\n      return children[0];\n    }\n    return {\n      type: 'paragraph',\n      children,\n      textAlign: node.attributes.textAlign\n    };\n  }\n  if (node.type === 'hr') {\n    return {\n      type: 'divider',\n      children: [{\n        text: ''\n      }]\n    };\n  }\n  if (node.type === 'table') {\n    return {\n      type: 'table',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tbody') {\n    return {\n      type: 'table-body',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'thead') {\n    if (!node.children.length) return [];\n    return {\n      type: 'table-head',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tr') {\n    return {\n      type: 'table-row',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'td') {\n    return {\n      type: 'table-cell',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'th') {\n    return {\n      type: 'table-cell',\n      header: true,\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'table') {\n      return fromMarkdocNode(node.children[0], componentBlocks);\n    }\n    if (node.tag === 'layout') {\n      return {\n        type: 'layout',\n        layout: node.attributes.layout,\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'layout-area') {\n      return {\n        type: 'layout-area',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block') {\n      return {\n        type: 'component-block',\n        component: node.attributes.component,\n        props: node.attributes.props,\n        children: node.children.length === 0 ? [{\n          type: 'component-inline-prop',\n          children: [{\n            text: ''\n          }]\n        }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n      return {\n        type: 'component-block-prop',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks)),\n        propPath: node.attributes.propPath\n      };\n    }\n    if (node.tag) {\n      const componentBlock = componentBlocks[node.tag];\n      if (componentBlock) {\n        const singleChildField = findSingleChildField({\n          kind: 'object',\n          fields: componentBlock.schema\n        });\n        if (singleChildField) {\n          const newAttributes = JSON.parse(JSON.stringify(node.attributes));\n          const children = [];\n          toChildrenAndProps(node.children, children, newAttributes, singleChildField, [], componentBlocks);\n          return {\n            type: 'component-block',\n            component: node.tag,\n            props: newAttributes,\n            children\n          };\n        }\n        return {\n          type: 'component-block',\n          component: node.tag,\n          props: node.attributes,\n          children: node.children.length === 0 ? [{\n            type: 'component-inline-prop',\n            children: [{\n              text: ''\n            }]\n          }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n        };\n      }\n    }\n    throw new Error(`Unknown tag: ${node.tag}`);\n  }\n  return inlineNodeFromMarkdoc(node);\n}\nfunction toChildrenAndProps(fromMarkdoc, resultingChildren, value, singleChildField, parentPropPath, componentBlocks) {\n  if (singleChildField.kind === 'child') {\n    const children = fromMarkdoc.flatMap(x => fromMarkdocNode(x, componentBlocks));\n    resultingChildren.push({\n      type: `component-${singleChildField.options.kind}-prop`,\n      propPath: [...parentPropPath, ...singleChildField.relativePath],\n      children\n    });\n  }\n  if (singleChildField.kind === 'array') {\n    const arr = [];\n    for (let [idx, child] of fromMarkdoc.entries()) {\n      if (child.type === 'paragraph') {\n        child = child.children[0].children[0];\n      }\n      if (child.type !== 'tag') {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found type: ${child.type}`);\n      }\n      if (child.tag !== singleChildField.asChildTag) {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found tag: ${child.tag}`);\n      }\n      const attributes = JSON.parse(JSON.stringify(child.attributes));\n      if (singleChildField.child) {\n        toChildrenAndProps(child.children, resultingChildren, attributes, singleChildField.child, [...parentPropPath, ...singleChildField.relativePath, idx], componentBlocks);\n      }\n      arr.push(attributes);\n    }\n    const key = singleChildField.relativePath[singleChildField.relativePath.length - 1];\n    const parent = getValueAtPropPath(value, singleChildField.relativePath.slice(0, -1));\n    parent[key] = arr;\n  }\n}\n\nfunction fixPath(path) {\n  return path.replace(/^\\.?\\/+/, '').replace(/\\/*$/, '');\n}\nconst collectionPath = /\\/\\*\\*?(?:$|\\/)/;\nfunction getConfiguredCollectionPath(config, collection) {\n  var _collectionConfig$pat;\n  const collectionConfig = config.collections[collection];\n  const path = (_collectionConfig$pat = collectionConfig.path) !== null && _collectionConfig$pat !== void 0 ? _collectionConfig$pat : `${collection}/*/`;\n  if (!collectionPath.test(path)) {\n    throw new Error(`Collection path must end with /* or /** or include /*/ or /**/ but ${collection} has ${path}`);\n  }\n  return path;\n}\nfunction getCollectionPath(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/\\*\\*?.*$/, ''));\n  return path;\n}\nfunction getCollectionFormat(config, collection) {\n  const collectionConfig = config.collections[collection];\n  return getFormatInfo(collectionConfig)(getConfiguredCollectionPath(config, collection));\n}\nfunction getSingletonFormat(config, singleton) {\n  var _singletonConfig$path;\n  const singletonConfig = config.singletons[singleton];\n  return getFormatInfo(singletonConfig)((_singletonConfig$path = singletonConfig.path) !== null && _singletonConfig$path !== void 0 ? _singletonConfig$path : `${singleton}/`);\n}\nfunction getCollectionItemPath(config, collection, slug) {\n  const basePath = getCollectionPath(config, collection);\n  const suffix = getCollectionItemSlugSuffix(config, collection);\n  return `${basePath}/${slug}${suffix}`;\n}\nfunction getEntryDataFilepath(dir, formatInfo) {\n  return `${dir}${formatInfo.dataLocation === 'index' ? '/index' : ''}${getDataFileExtension(formatInfo)}`;\n}\nfunction getSlugGlobForCollection(config, collection) {\n  const collectionPath = getConfiguredCollectionPath(config, collection);\n  return collectionPath.includes('**') ? '**' : '*';\n}\nfunction getCollectionItemSlugSuffix(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/^[^*]+\\*\\*?/, ''));\n  return path ? `/${path}` : '';\n}\nfunction getSingletonPath(config, singleton) {\n  var _singleton$path, _singleton$path2;\n  if ((_singleton$path = config.singletons[singleton].path) !== null && _singleton$path !== void 0 && _singleton$path.includes('*')) {\n    throw new Error(`Singleton paths cannot include * but ${singleton} has ${config.singletons[singleton].path}`);\n  }\n  return fixPath((_singleton$path2 = config.singletons[singleton].path) !== null && _singleton$path2 !== void 0 ? _singleton$path2 : singleton);\n}\nfunction getDataFileExtension(formatInfo) {\n  return formatInfo.contentField ? formatInfo.contentField.contentExtension : '.' + formatInfo.data;\n}\nfunction weakMemoize(func) {\n  const cache = new WeakMap();\n  return arg => {\n    if (cache.has(arg)) {\n      return cache.get(arg);\n    }\n    const result = func(arg);\n    cache.set(arg, result);\n    return result;\n  };\n}\nfunction memoize(func) {\n  const cache = new Map();\n  return arg => {\n    if (cache.has(arg)) {\n      return cache.get(arg);\n    }\n    const result = func(arg);\n    cache.set(arg, result);\n    return result;\n  };\n}\nconst getFormatInfo = weakMemoize(collectionOrSingleton => {\n  return memoize(path => _getFormatInfo(collectionOrSingleton, path));\n});\nfunction _getFormatInfo(collectionOrSingleton, path) {\n  var _format$data;\n  const dataLocation = path.endsWith('/') ? 'index' : 'outer';\n  const {\n    schema,\n    format = 'yaml'\n  } = collectionOrSingleton;\n  if (typeof format === 'string') {\n    return {\n      dataLocation,\n      contentField: undefined,\n      data: format\n    };\n  }\n  let contentField;\n  if (format.contentField) {\n    let field = {\n      kind: 'object',\n      fields: schema\n    };\n    let path = Array.isArray(format.contentField) ? format.contentField : [format.contentField];\n    contentField = {\n      path,\n      contentExtension: getContentExtension(path, field, () => path.length === 1 ? path[0] : JSON.stringify(path))\n    };\n  }\n  return {\n    data: (_format$data = format.data) !== null && _format$data !== void 0 ? _format$data : 'yaml',\n    contentField,\n    dataLocation\n  };\n}\nfunction getContentExtension(path, schema, debugName) {\n  if (path.length === 0) {\n    if (schema.kind !== 'form' || schema.formKind !== 'content') {\n      throw new Error(`Content field for ${debugName()} is not a content field`);\n    }\n    return schema.contentExtension;\n  }\n  if (schema.kind === 'object') {\n    return getContentExtension(path.slice(1), schema.fields[path[0]], debugName);\n  }\n  if (schema.kind === 'conditional') {\n    if (path[0] !== 'value') {\n      throw new Error(`Conditional fields referenced in a contentField path must only reference the value field (${debugName()})`);\n    }\n    let contentExtension;\n    const innerPath = path.slice(1);\n    for (const value of Object.values(schema.values)) {\n      const foundContentExtension = getContentExtension(innerPath, value, debugName);\n      if (!contentExtension) {\n        contentExtension = foundContentExtension;\n        continue;\n      }\n      if (contentExtension !== foundContentExtension) {\n        throw new Error(`contentField ${debugName()} has conflicting content extensions`);\n      }\n    }\n    if (!contentExtension) {\n      throw new Error(`contentField ${debugName()} does not point to a content field`);\n    }\n    return contentExtension;\n  }\n  throw new Error(`Path specified in contentField ${debugName()} does not point to a content field`);\n}\n\nfunction getSrcPrefix(publicPath, slug) {\n  return typeof publicPath === 'string' ? `${publicPath.replace(/\\/*$/, '')}/${slug === undefined ? '' : slug + '/'}` : '';\n}\n\nfunction deserializeFiles(nodes, componentBlocks, files, otherFiles, mode, documentFeatures, slug) {\n  return nodes.map(node => {\n    if (node.type === 'component-block') {\n      const componentBlock = componentBlocks[node.component];\n      if (!componentBlock) return node;\n      const schema = object(componentBlock.schema);\n      return {\n        ...node,\n        props: deserializeProps(schema, node.props, files, otherFiles, mode, slug)\n      };\n    }\n    if (node.type === 'image' && typeof node.src === 'string' && mode === 'edit') {\n      var _ref;\n      const prefix = getSrcPrefixForImageBlock(documentFeatures, slug);\n      const filename = node.src.slice(prefix.length);\n      const content = (_ref = typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? otherFiles.get(fixPath(documentFeatures.images.directory)) : files) === null || _ref === void 0 ? void 0 : _ref.get(filename);\n      if (!content) {\n        return {\n          type: 'paragraph',\n          children: [{\n            text: `Missing image ${filename}`\n          }]\n        };\n      }\n      return {\n        type: 'image',\n        src: {\n          filename,\n          content\n        },\n        alt: node.alt,\n        title: node.title,\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    if (typeof node.type === 'string') {\n      const children = deserializeFiles(node.children, componentBlocks, files, otherFiles, mode, documentFeatures, slug);\n      return {\n        ...node,\n        children\n      };\n    }\n    return node;\n  });\n}\nfunction deserializeProps(schema, value, files, otherFiles, mode, slug) {\n  return transformProps(schema, value, {\n    form: (schema, value) => {\n      if (schema.formKind === 'asset') {\n        var _otherFiles$get;\n        if (mode === 'read') {\n          return schema.reader.parse(value);\n        }\n        const filename = schema.filename(value, {\n          slug,\n          suggestedFilenamePrefix: undefined\n        });\n        return schema.parse(value, {\n          asset: filename ? schema.directory ? (_otherFiles$get = otherFiles.get(schema.directory)) === null || _otherFiles$get === void 0 ? void 0 : _otherFiles$get.get(filename) : files.get(filename) : undefined,\n          slug\n        });\n      }\n      if (schema.formKind === 'content' || schema.formKind === 'assets') {\n        throw new Error('Not implemented');\n      }\n      if (mode === 'read') {\n        return schema.reader.parse(value);\n      }\n      return schema.parse(value, undefined);\n    }\n  });\n}\nfunction getSrcPrefixForImageBlock(documentFeatures, slug) {\n  return getSrcPrefix(typeof documentFeatures.images === 'object' ? documentFeatures.images.publicPath : undefined, slug);\n}\n\nasync function sha1(content) {\n  return (0,crypto__WEBPACK_IMPORTED_MODULE_4__.createHash)('sha1').update(content).digest('hex');\n}\n\nconst textEncoder$1 = new TextEncoder();\nconst blobShaCache = new WeakMap();\nasync function blobSha(contents) {\n  const cached = blobShaCache.get(contents);\n  if (cached !== undefined) return cached;\n  const blobPrefix = textEncoder$1.encode('blob ' + contents.length + '\\0');\n  const array = new Uint8Array(blobPrefix.byteLength + contents.byteLength);\n  array.set(blobPrefix, 0);\n  array.set(contents, blobPrefix.byteLength);\n  const digestPromise = sha1(array);\n  blobShaCache.set(contents, digestPromise);\n  digestPromise.then(digest => blobShaCache.set(contents, digest));\n  return digestPromise;\n}\nfunction getTreeNodeAtPath(root, path) {\n  const parts = path.split('/');\n  let node = root.get(parts[0]);\n  for (const part of parts.slice(1)) {\n    if (!node) return undefined;\n    if (!node.children) return undefined;\n    node = node.children.get(part);\n  }\n  return node;\n}\nfunction getNodeAtPath(tree, path) {\n  if (path === '') return tree;\n  let node = tree;\n  for (const part of path.split('/')) {\n    if (!node.has(part)) {\n      node.set(part, new Map());\n    }\n    const innerNode = node.get(part);\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(innerNode instanceof Map, 'expected tree');\n    node = innerNode;\n  }\n  return node;\n}\nfunction getFilename(path) {\n  return path.replace(/.*\\//, '');\n}\nfunction getDirname(path) {\n  if (!path.includes('/')) return '';\n  return path.replace(/\\/[^/]+$/, '');\n}\nfunction toTreeChanges(changes) {\n  const changesRoot = new Map();\n  for (const deletion of changes.deletions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(deletion));\n    parentTree.set(getFilename(deletion), 'delete');\n  }\n  for (const addition of changes.additions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(addition.path));\n    parentTree.set(getFilename(addition.path), addition.contents);\n  }\n  return changesRoot;\n}\nconst SPACE_CHAR_CODE = 32;\nconst space = new Uint8Array([SPACE_CHAR_CODE]);\nconst nullchar = new Uint8Array([0]);\nconst tree = textEncoder$1.encode('tree ');\n\n// based on https://github.com/isomorphic-git/isomorphic-git/blob/c09dfa20ffe0ab9e6602e0fa172d72ba8994e443/src/models/GitTree.js#L108-L122\nfunction treeSha(children) {\n  const entries = [...children].map(([name, node]) => ({\n    name,\n    sha: node.entry.sha,\n    mode: node.entry.mode\n  }));\n  entries.sort((a, b) => {\n    const aName = a.mode === '040000' ? a.name + '/' : a.name;\n    const bName = b.mode === '040000' ? b.name + '/' : b.name;\n    return aName === bName ? 0 : aName < bName ? -1 : 1;\n  });\n  const treeObject = entries.flatMap(entry => {\n    const mode = textEncoder$1.encode(entry.mode.replace(/^0/, ''));\n    const name = textEncoder$1.encode(entry.name);\n    const sha = hexToBytes(entry.sha);\n    return [mode, space, name, nullchar, sha];\n  });\n  return sha1(concatBytes([tree, textEncoder$1.encode(treeObject.reduce((sum, val) => sum + val.byteLength, 0).toString()), nullchar, ...treeObject]));\n}\nfunction concatBytes(byteArrays) {\n  const totalLength = byteArrays.reduce((sum, arr) => sum + arr.byteLength, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of byteArrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n}\nfunction hexToBytes(str) {\n  const bytes = new Uint8Array(str.length / 2);\n  for (var i = 0; i < bytes.byteLength; i += 1) {\n    const start = i * 2;\n    bytes[i] = parseInt(str.slice(start, start + 2), 16);\n  }\n  return bytes;\n}\nasync function createTreeNodeEntry(path, children) {\n  const sha = await treeSha(children);\n  return {\n    path,\n    mode: '040000',\n    type: 'tree',\n    sha\n  };\n}\nasync function createBlobNodeEntry(path, contents) {\n  const sha = 'sha' in contents ? contents.sha : await blobSha(contents);\n  return {\n    path,\n    mode: '100644',\n    type: 'blob',\n    sha\n  };\n}\nasync function updateTreeWithChanges(tree, changes) {\n  var _await$updateTree;\n  const newTree = (_await$updateTree = await updateTree(tree, toTreeChanges(changes), [])) !== null && _await$updateTree !== void 0 ? _await$updateTree : new Map();\n  return {\n    entries: treeToEntries(newTree),\n    sha: await treeSha(newTree !== null && newTree !== void 0 ? newTree : new Map())\n  };\n}\nfunction treeToEntries(tree) {\n  return [...tree.values()].flatMap(x => x.children ? [x.entry, ...treeToEntries(x.children)] : [x.entry]);\n}\nasync function updateTree(tree, changedTree, path) {\n  const newTree = new Map(tree);\n  for (const [key, value] of changedTree) {\n    if (value === 'delete') {\n      newTree.delete(key);\n    }\n    if (value instanceof Map) {\n      var _newTree$get$children, _newTree$get;\n      const existingChildren = (_newTree$get$children = (_newTree$get = newTree.get(key)) === null || _newTree$get === void 0 ? void 0 : _newTree$get.children) !== null && _newTree$get$children !== void 0 ? _newTree$get$children : new Map();\n      const children = await updateTree(existingChildren, value, path.concat(key));\n      if (children === undefined) {\n        newTree.delete(key);\n        continue;\n      }\n      const entry = await createTreeNodeEntry(path.concat(key).join('/'), children);\n      newTree.set(key, {\n        entry,\n        children\n      });\n    }\n    if (value instanceof Uint8Array || typeof value === 'object' && 'sha' in value) {\n      const entry = await createBlobNodeEntry(path.concat(key).join('/'), value);\n      newTree.set(key, {\n        entry\n      });\n    }\n  }\n  if (newTree.size === 0) {\n    return undefined;\n  }\n  return newTree;\n}\nfunction treeEntriesToTreeNodes(entries) {\n  const root = new Map();\n  const getChildrenAtPath = parts => {\n    var _node;\n    if (parts.length === 0) {\n      return root;\n    }\n    let node = root.get(parts[0]);\n    for (const part of parts.slice(1)) {\n      if (!node) return undefined;\n      if (!node.children) return undefined;\n      node = node.children.get(part);\n    }\n    return (_node = node) === null || _node === void 0 ? void 0 : _node.children;\n  };\n  for (const entry of entries) {\n    const split = entry.path.split('/');\n    const children = getChildrenAtPath(split.slice(0, -1));\n    if (children) {\n      children.set(split[split.length - 1], {\n        entry,\n        children: entry.type === 'tree' ? new Map() : undefined\n      });\n    }\n  }\n  return root;\n}\n\nfunction collectDirectoriesUsedInSchemaInner(schema, directories, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return;\n  }\n  seenSchemas.add(schema);\n  if (schema.kind === 'array') {\n    return collectDirectoriesUsedInSchemaInner(schema.element, directories, seenSchemas);\n  }\n  if (schema.kind === 'child') {\n    return;\n  }\n  if (schema.kind === 'form') {\n    if (schema.formKind === 'asset' && schema.directory !== undefined) {\n      directories.add(fixPath(schema.directory));\n    }\n    if ((schema.formKind === 'content' || schema.formKind === 'assets') && schema.directories !== undefined) {\n      for (const directory of schema.directories) {\n        directories.add(fixPath(directory));\n      }\n    }\n    return;\n  }\n  if (schema.kind === 'object') {\n    for (const field of Object.values(schema.fields)) {\n      collectDirectoriesUsedInSchemaInner(field, directories, seenSchemas);\n    }\n    return;\n  }\n  if (schema.kind === 'conditional') {\n    for (const innerSchema of Object.values(schema.values)) {\n      collectDirectoriesUsedInSchemaInner(innerSchema, directories, seenSchemas);\n    }\n    return;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction collectDirectoriesUsedInSchema(schema) {\n  const directories = new Set();\n  collectDirectoriesUsedInSchemaInner(schema, directories, new Set());\n  return directories;\n}\nfunction getDirectoriesForTreeKey(schema, directory, slug, format) {\n  const directories = [fixPath(directory)];\n  if (format.dataLocation === 'outer') {\n    directories.push(fixPath(directory) + getDataFileExtension(format));\n  }\n  const toAdd = slug === undefined ? '' : `/${slug}`;\n  for (const directory of collectDirectoriesUsedInSchema(schema)) {\n    directories.push(directory + toAdd);\n  }\n  return directories;\n}\n\nconst textDecoder$1 = new TextDecoder();\nconst defaultAltField$1 = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.t)({\n  label: 'Alt text',\n  description: 'This text will be used by screen readers and search engines.'\n});\nconst emptyTitleField$1 = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.b)({\n  Input() {\n    return null;\n  },\n  defaultValue() {\n    return '';\n  },\n  parse(value) {\n    if (value === undefined) return '';\n    if (typeof value !== 'string') {\n      throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be string');\n    }\n    return value;\n  },\n  validate(value) {\n    return value;\n  },\n  serialize(value) {\n    return {\n      value\n    };\n  },\n  label: 'Title'\n});\nfunction normaliseDocumentFeatures(config) {\n  var _config$formatting, _formatting$alignment, _formatting$alignment2, _formatting$blockType, _formatting$inlineMar, _formatting$inlineMar2, _formatting$inlineMar3, _formatting$inlineMar4, _formatting$inlineMar5, _formatting$inlineMar6, _formatting$inlineMar7, _formatting$inlineMar8, _formatting$listTypes, _formatting$listTypes2, _imagesConfig$schema$, _imagesConfig$schema, _imagesConfig$schema$2, _imagesConfig$schema2;\n  const formatting = config.formatting === true ? {\n    // alignment: true, // not supported natively in markdown\n    blockTypes: true,\n    headingLevels: true,\n    inlineMarks: true,\n    listTypes: true,\n    softBreaks: true\n  } : (_config$formatting = config.formatting) !== null && _config$formatting !== void 0 ? _config$formatting : {};\n  const imagesConfig = config.images === true ? {} : config.images;\n  return {\n    formatting: {\n      alignment: formatting.alignment === true ? {\n        center: true,\n        end: true\n      } : {\n        center: !!((_formatting$alignment = formatting.alignment) !== null && _formatting$alignment !== void 0 && _formatting$alignment.center),\n        end: !!((_formatting$alignment2 = formatting.alignment) !== null && _formatting$alignment2 !== void 0 && _formatting$alignment2.end)\n      },\n      blockTypes: (formatting === null || formatting === void 0 ? void 0 : formatting.blockTypes) === true ? {\n        blockquote: true,\n        code: {\n          schema: object({})\n        }\n      } : {\n        blockquote: !!((_formatting$blockType = formatting.blockTypes) !== null && _formatting$blockType !== void 0 && _formatting$blockType.blockquote),\n        code: (_formatting$blockType2 => {\n          if (((_formatting$blockType2 = formatting.blockTypes) === null || _formatting$blockType2 === void 0 ? void 0 : _formatting$blockType2.code) === undefined) {\n            return false;\n          }\n          if (formatting.blockTypes.code === true || !formatting.blockTypes.code.schema) {\n            return {\n              schema: object({})\n            };\n          }\n          for (const key of ['type', 'children', 'language']) {\n            if (key in formatting.blockTypes.code.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for code blocks`);\n            }\n          }\n          return {\n            schema: object(formatting.blockTypes.code.schema)\n          };\n        })()\n      },\n      headings: (_obj$schema => {\n        const opt = formatting === null || formatting === void 0 ? void 0 : formatting.headingLevels;\n        const obj = typeof opt === 'object' && 'levels' in opt ? opt : {\n          levels: opt,\n          schema: undefined\n        };\n        if (obj.schema) {\n          for (const key of ['type', 'children', 'level', 'textAlign']) {\n            if (key in obj.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for headings`);\n            }\n          }\n        }\n        return {\n          levels: [...new Set(obj.levels === true ? [1, 2, 3, 4, 5, 6] : obj.levels)],\n          schema: object((_obj$schema = obj.schema) !== null && _obj$schema !== void 0 ? _obj$schema : {})\n        };\n      })(),\n      inlineMarks: formatting.inlineMarks === true ? {\n        bold: true,\n        code: true,\n        italic: true,\n        keyboard: false,\n        // not supported natively in markdown\n        strikethrough: true,\n        subscript: false,\n        // not supported natively in markdown\n        superscript: false,\n        // not supported natively in markdown\n        underline: false // not supported natively in markdown\n      } : {\n        bold: !!((_formatting$inlineMar = formatting.inlineMarks) !== null && _formatting$inlineMar !== void 0 && _formatting$inlineMar.bold),\n        code: !!((_formatting$inlineMar2 = formatting.inlineMarks) !== null && _formatting$inlineMar2 !== void 0 && _formatting$inlineMar2.code),\n        italic: !!((_formatting$inlineMar3 = formatting.inlineMarks) !== null && _formatting$inlineMar3 !== void 0 && _formatting$inlineMar3.italic),\n        strikethrough: !!((_formatting$inlineMar4 = formatting.inlineMarks) !== null && _formatting$inlineMar4 !== void 0 && _formatting$inlineMar4.strikethrough),\n        underline: !!((_formatting$inlineMar5 = formatting.inlineMarks) !== null && _formatting$inlineMar5 !== void 0 && _formatting$inlineMar5.underline),\n        keyboard: !!((_formatting$inlineMar6 = formatting.inlineMarks) !== null && _formatting$inlineMar6 !== void 0 && _formatting$inlineMar6.keyboard),\n        subscript: !!((_formatting$inlineMar7 = formatting.inlineMarks) !== null && _formatting$inlineMar7 !== void 0 && _formatting$inlineMar7.subscript),\n        superscript: !!((_formatting$inlineMar8 = formatting.inlineMarks) !== null && _formatting$inlineMar8 !== void 0 && _formatting$inlineMar8.superscript)\n      },\n      listTypes: formatting.listTypes === true ? {\n        ordered: true,\n        unordered: true\n      } : {\n        ordered: !!((_formatting$listTypes = formatting.listTypes) !== null && _formatting$listTypes !== void 0 && _formatting$listTypes.ordered),\n        unordered: !!((_formatting$listTypes2 = formatting.listTypes) !== null && _formatting$listTypes2 !== void 0 && _formatting$listTypes2.unordered)\n      },\n      softBreaks: !!formatting.softBreaks\n    },\n    links: !!config.links,\n    layouts: [...new Set((config.layouts || []).map(x => JSON.stringify(x)))].map(x => JSON.parse(x)),\n    dividers: !!config.dividers,\n    images: imagesConfig === undefined ? false : {\n      ...imagesConfig,\n      schema: {\n        alt: (_imagesConfig$schema$ = (_imagesConfig$schema = imagesConfig.schema) === null || _imagesConfig$schema === void 0 ? void 0 : _imagesConfig$schema.alt) !== null && _imagesConfig$schema$ !== void 0 ? _imagesConfig$schema$ : defaultAltField$1,\n        title: (_imagesConfig$schema$2 = (_imagesConfig$schema2 = imagesConfig.schema) === null || _imagesConfig$schema2 === void 0 ? void 0 : _imagesConfig$schema2.title) !== null && _imagesConfig$schema$2 !== void 0 ? _imagesConfig$schema$2 : emptyTitleField$1\n      }\n    },\n    tables: !!config.tables\n  };\n}\n\n/**\n * @deprecated `fields.markdoc` has superseded this field. `fields.mdx` is also available if you prefer MDX.\n */\nfunction document({\n  label,\n  componentBlocks = {},\n  description,\n  ...documentFeaturesConfig\n}) {\n  const documentFeatures = normaliseDocumentFeatures(documentFeaturesConfig);\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }];\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        componentBlocks: componentBlocks,\n        description: description,\n        label: label,\n        documentFeatures: documentFeatures,\n        ...props\n      });\n    },\n    parse(_, data) {\n      const markdoc = textDecoder$1.decode(data.content);\n      fromMarkdoc((0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(markdoc), componentBlocks);\n      return deserializeFiles((0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.n)(), componentBlocks, data.other, data.external, 'edit', documentFeatures, data.slug);\n    },\n    contentExtension: '.mdoc',\n    validate(value) {\n      return value;\n    },\n    directories: [...collectDirectoriesUsedInSchema(object(Object.fromEntries(Object.entries(componentBlocks).map(([name, block]) => [name, object(block.schema)])))), ...(typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? [fixPath(documentFeatures.images.directory)] : [])],\n    serialize(value, opts) {\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.i)();\n    },\n    reader: {\n      parse(value, data) {\n        const markdoc = textDecoder$1.decode(data.content);\n        const document = fromMarkdoc((0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(markdoc), componentBlocks);\n        return deserializeFiles(document, componentBlocks, new Map(), new Map(), 'read', documentFeatures, undefined);\n      }\n    }\n  };\n}\n\nconst defaultAltField = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.t)({\n  label: 'Alt text',\n  description: 'This text will be used by screen readers and search engines.'\n});\nconst emptyTitleField = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.b)({\n  Input() {\n    return null;\n  },\n  defaultValue() {\n    return '';\n  },\n  parse(value) {\n    if (value === undefined) return '';\n    if (typeof value !== 'string') {\n      throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be string');\n    }\n    return value;\n  },\n  validate(value) {\n    return value;\n  },\n  serialize(value) {\n    return {\n      value\n    };\n  },\n  label: 'Title'\n});\nfunction editorOptionsToConfig(options) {\n  var _options$bold, _options$italic, _options$strikethroug, _options$code, _options$blockquote, _options$orderedList, _options$unorderedLis, _options$table, _options$link, _options$divider;\n  return {\n    bold: (_options$bold = options.bold) !== null && _options$bold !== void 0 ? _options$bold : true,\n    italic: (_options$italic = options.italic) !== null && _options$italic !== void 0 ? _options$italic : true,\n    strikethrough: (_options$strikethroug = options.strikethrough) !== null && _options$strikethroug !== void 0 ? _options$strikethroug : true,\n    code: (_options$code = options.code) !== null && _options$code !== void 0 ? _options$code : true,\n    heading: (() => {\n      let levels = [];\n      let levelsOpt = typeof options.heading === 'object' && !Array.isArray(options.heading) ? options.heading.levels : options.heading;\n      if (levelsOpt === true || levelsOpt === undefined) {\n        levels = [1, 2, 3, 4, 5, 6];\n      }\n      if (Array.isArray(levelsOpt)) {\n        levels = levelsOpt;\n      }\n      return {\n        levels,\n        schema: options.heading && typeof options.heading === 'object' && 'schema' in options.heading ? options.heading.schema : {}\n      };\n    })(),\n    blockquote: (_options$blockquote = options.blockquote) !== null && _options$blockquote !== void 0 ? _options$blockquote : true,\n    orderedList: (_options$orderedList = options.orderedList) !== null && _options$orderedList !== void 0 ? _options$orderedList : true,\n    unorderedList: (_options$unorderedLis = options.unorderedList) !== null && _options$unorderedLis !== void 0 ? _options$unorderedLis : true,\n    table: (_options$table = options.table) !== null && _options$table !== void 0 ? _options$table : true,\n    link: (_options$link = options.link) !== null && _options$link !== void 0 ? _options$link : true,\n    image: options.image !== false ? ((_opts$transformFilena, _opts$schema$alt, _opts$schema, _opts$schema$title, _opts$schema2) => {\n      const opts = options.image === true ? undefined : options.image;\n      return {\n        directory: opts === null || opts === void 0 ? void 0 : opts.directory,\n        publicPath: opts === null || opts === void 0 ? void 0 : opts.publicPath,\n        transformFilename: (_opts$transformFilena = opts === null || opts === void 0 ? void 0 : opts.transformFilename) !== null && _opts$transformFilena !== void 0 ? _opts$transformFilena : x => x,\n        schema: {\n          alt: (_opts$schema$alt = opts === null || opts === void 0 || (_opts$schema = opts.schema) === null || _opts$schema === void 0 ? void 0 : _opts$schema.alt) !== null && _opts$schema$alt !== void 0 ? _opts$schema$alt : defaultAltField,\n          title: (_opts$schema$title = opts === null || opts === void 0 || (_opts$schema2 = opts.schema) === null || _opts$schema2 === void 0 ? void 0 : _opts$schema2.title) !== null && _opts$schema$title !== void 0 ? _opts$schema$title : emptyTitleField\n        }\n      };\n    })() : undefined,\n    divider: (_options$divider = options.divider) !== null && _options$divider !== void 0 ? _options$divider : true,\n    codeBlock: options.codeBlock === false ? undefined : {\n      schema: typeof options.codeBlock === 'object' ? options.codeBlock.schema : {}\n    }\n  };\n}\n\nfunction getTypeForField(field) {\n  if (field.kind === 'object' || field.kind === 'conditional') {\n    return {\n      type: Object,\n      required: true\n    };\n  }\n  if (field.kind === 'array') {\n    return {\n      type: Array,\n      required: true\n    };\n  }\n  if (field.kind === 'child') {\n    return {};\n  }\n  if (field.formKind === undefined) {\n    if (typeof field.defaultValue === 'string' && 'options' in field && Array.isArray(field.options) && field.options.every(val => typeof val === 'object' && val !== null && 'value' in val && typeof val.value === 'string')) {\n      return {\n        type: String,\n        matches: field.options.map(x => x.value),\n        required: true\n      };\n    }\n    if (typeof field.defaultValue === 'string') {\n      let required = false;\n      try {\n        field.parse('');\n      } catch {\n        required = true;\n      }\n      return {\n        type: String,\n        required\n      };\n    }\n    try {\n      field.parse(1);\n      return {\n        type: Number\n      };\n    } catch {}\n    if (typeof field.defaultValue === 'boolean') {\n      return {\n        type: Boolean,\n        required: true\n      };\n    }\n    return {};\n  }\n  if (field.formKind === 'slug') {\n    let required = false;\n    try {\n      field.parse('', undefined);\n    } catch {\n      required = true;\n    }\n    return {\n      type: String,\n      required\n    };\n  }\n  if (field.formKind === 'asset') {\n    let required = false;\n    try {\n      field.validate(null);\n    } catch {\n      required = true;\n    }\n    return {\n      type: String,\n      required\n    };\n  }\n  return {};\n}\nfunction fieldsToMarkdocAttributes(fields) {\n  return Object.fromEntries(Object.entries(fields).map(([name, field]) => {\n    const schema = getTypeForField(field);\n    return [name, schema];\n  }));\n}\nfunction createMarkdocConfig(opts) {\n  const editorConfig = editorOptionsToConfig(opts.options || {});\n  const config = {\n    nodes: {\n      ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes\n    },\n    tags: {}\n  };\n  if (editorConfig.heading.levels.length) {\n    config.nodes.heading = {\n      ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.heading,\n      attributes: {\n        ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.heading.attributes,\n        ...fieldsToMarkdocAttributes(editorConfig.heading.schema)\n      }\n    };\n  } else {\n    config.nodes.heading = undefined;\n  }\n  if (!editorConfig.blockquote) {\n    config.nodes.blockquote = undefined;\n  }\n  if (editorConfig.codeBlock) {\n    config.nodes.fence = {\n      ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.fence,\n      attributes: {\n        ..._markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.nodes.fence.attributes,\n        ...fieldsToMarkdocAttributes(editorConfig.codeBlock.schema)\n      }\n    };\n  } else {\n    config.nodes.fence = undefined;\n  }\n  if (!editorConfig.orderedList && !editorConfig.unorderedList) {\n    config.nodes.list = undefined;\n  }\n  if (!editorConfig.bold) {\n    config.nodes.strong = undefined;\n  }\n  if (!editorConfig.italic) {\n    config.nodes.em = undefined;\n  }\n  if (!editorConfig.strikethrough) {\n    config.nodes.s = undefined;\n  }\n  if (!editorConfig.link) {\n    config.nodes.link = undefined;\n  }\n  if (!editorConfig.image) {\n    config.nodes.image = undefined;\n  }\n  if (!editorConfig.divider) {\n    config.nodes.hr = undefined;\n  }\n  if (!editorConfig.table) {\n    config.nodes.table = undefined;\n  }\n  for (const [name, component] of Object.entries(opts.components || {})) {\n    var _opts$render;\n    const isEmpty = component.kind === 'block' || component.kind === 'inline';\n    config.tags[name] = {\n      render: (_opts$render = opts.render) === null || _opts$render === void 0 || (_opts$render = _opts$render.tags) === null || _opts$render === void 0 ? void 0 : _opts$render[name],\n      children: isEmpty ? [] : undefined,\n      selfClosing: isEmpty,\n      attributes: fieldsToMarkdocAttributes(component.schema),\n      description: 'description' in component ? component.description : undefined,\n      inline: component.kind === 'inline' || component.kind === 'mark'\n    };\n  }\n  for (const [name, render] of Object.entries(((_opts$render2 = opts.render) === null || _opts$render2 === void 0 ? void 0 : _opts$render2.nodes) || {})) {\n    var _opts$render2;\n    const nodeSchema = config.nodes[name];\n    if (nodeSchema) {\n      nodeSchema.render = render;\n    }\n  }\n  return config;\n}\n\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction getDirectoriesForEditorField(components, config) {\n  return [...collectDirectoriesUsedInSchema(object(Object.fromEntries(Object.entries(components).map(([name, component]) => [name, object(component.schema)])))), ...(typeof config.image === 'object' && typeof config.image.directory === 'string' ? [fixPath(config.image.directory)] : [])];\n}\nfunction markdoc({\n  label,\n  description,\n  options = {},\n  components = {},\n  extension = 'mdoc'\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (_, {\n      content,\n      other,\n      external,\n      slug\n    }) => {\n      const text = textDecoder.decode(content);\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.p)(text, getSchema());\n    },\n    contentExtension: `.${extension}`,\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.k)();\n      return {\n        content: textEncoder.encode(out.content),\n        external: out.external,\n        other: out.other,\n        value: undefined\n      };\n    },\n    reader: {\n      parse: (_, {\n        content\n      }) => {\n        const text = textDecoder.decode(content);\n        return {\n          node: (0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(text)\n        };\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n}\nmarkdoc.createMarkdocConfig = createMarkdocConfig;\nmarkdoc.inline = function inlineMarkdoc({\n  label,\n  description,\n  options = {},\n  components = {}\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'assets',\n    defaultValue() {\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (value, {\n      other,\n      external,\n      slug\n    }) => {\n      if (value === undefined) {\n        value = '';\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n      }\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.p)(value, getSchema());\n    },\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.k)();\n      return {\n        external: out.external,\n        other: out.other,\n        value: out.content\n      };\n    },\n    reader: {\n      parse: value => {\n        if (value === undefined) {\n          value = '';\n        }\n        if (typeof value !== 'string') {\n          throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n        }\n        return {\n          node: (0,_markdoc_markdoc_dist_index_mjs__WEBPACK_IMPORTED_MODULE_5__.parse)(value)\n        };\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n};\nfunction mdx({\n  label,\n  description,\n  options = {},\n  components = {},\n  extension = 'mdx'\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (_, {\n      content,\n      other,\n      external,\n      slug\n    }) => {\n      const text = textDecoder.decode(content);\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.o)(text, getSchema());\n    },\n    contentExtension: `.${extension}`,\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.q)();\n      return {\n        content: textEncoder.encode(out.content),\n        external: out.external,\n        other: out.other,\n        value: undefined\n      };\n    },\n    reader: {\n      parse: (_, {\n        content\n      }) => {\n        const text = textDecoder.decode(content);\n        return text;\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n}\nmdx.inline = function mdx({\n  label,\n  description,\n  options = {},\n  components = {}\n}) {\n  let schema;\n  const config = editorOptionsToConfig(options);\n  let getSchema = () => {\n    if (!schema) {\n      schema = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.r)();\n    }\n    return schema;\n  };\n  return {\n    kind: 'form',\n    formKind: 'assets',\n    defaultValue() {\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.j)(getSchema());\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.h, {\n        description: description,\n        label: label,\n        ...props\n      });\n    },\n    parse: (value, {\n      other,\n      external,\n      slug\n    }) => {\n      if (value === undefined) {\n        value = '';\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n      }\n      return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.o)(value, getSchema());\n    },\n    validate(value) {\n      return value;\n    },\n    directories: getDirectoriesForEditorField(components, config),\n    serialize(value, {\n      slug\n    }) {\n      const out = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.q)();\n      return {\n        external: out.external,\n        other: out.other,\n        value: out.content\n      };\n    },\n    reader: {\n      parse: value => {\n        if (value === undefined) {\n          value = '';\n        }\n        if (typeof value !== 'string') {\n          throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.F('Must be a string');\n        }\n        return value;\n      }\n    },\n    collaboration: {\n      toYjs(value) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.l)(value.doc);\n      },\n      fromYjs(yjsValue, awareness) {\n        return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.m)(getSchema());\n      }\n    }\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/keystatic-core-api-generic.node.react-server.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/keystatic-core-api-generic.node.react-server.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeGenericAPIRouteHandler: () => (/* binding */ makeGenericAPIRouteHandler)\n/* harmony export */ });\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/dist/index.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! superstruct */ \"(rsc)/./node_modules/superstruct/dist/index.mjs\");\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:path */ \"node:path\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var _read_local_c89358f4_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./read-local-c89358f4.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/read-local-c89358f4.node.react-server.js\");\n/* harmony import */ var _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-b2de9be1.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ignore */ \"(rsc)/./node_modules/ignore/index.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! emery/assertions */ \"(rsc)/./node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./index-10ea50e2.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction redirect(to, initialHeaders) {\n  return {\n    body: null,\n    status: 307,\n    headers: [...(initialHeaders !== null && initialHeaders !== void 0 ? initialHeaders : []), ['Location', to]]\n  };\n}\n\nfunction base64UrlDecode(base64) {\n  const binString = atob(base64.replace(/-/g, '+').replace(/_/g, '/'));\n  return Uint8Array.from(binString, m => m.codePointAt(0));\n}\nfunction base64UrlEncode(bytes) {\n  return base64Encode(bytes).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\nfunction base64Encode(bytes) {\n  const binString = Array.from(bytes, byte => String.fromCodePoint(byte)).join('');\n  return btoa(binString);\n}\n\nconst ghAppSchema = superstruct__WEBPACK_IMPORTED_MODULE_15__.type({\n  slug: superstruct__WEBPACK_IMPORTED_MODULE_15__.string(),\n  client_id: superstruct__WEBPACK_IMPORTED_MODULE_15__.string(),\n  client_secret: superstruct__WEBPACK_IMPORTED_MODULE_15__.string()\n});\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms));\nasync function handleGitHubAppCreation(req, slugEnvVarName) {\n  const searchParams = new URL(req.url, 'https://localhost').searchParams;\n  const code = searchParams.get('code');\n  if (typeof code !== 'string' || !/^[a-zA-Z0-9]+$/.test(code)) {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const ghAppRes = await fetch(`https://api.github.com/app-manifests/${code}/conversions`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  if (!ghAppRes.ok) {\n    console.log(ghAppRes);\n    return {\n      status: 500,\n      body: 'An error occurred while creating the GitHub App'\n    };\n  }\n  const ghAppDataRaw = await ghAppRes.json();\n  let ghAppDataResult;\n  try {\n    ghAppDataResult = superstruct__WEBPACK_IMPORTED_MODULE_15__.create(ghAppDataRaw, ghAppSchema);\n  } catch {\n    console.log(ghAppDataRaw);\n    return {\n      status: 500,\n      body: 'An unexpected response was received from GitHub'\n    };\n  }\n  const toAddToEnv = `# Keystatic\nKEYSTATIC_GITHUB_CLIENT_ID=${ghAppDataResult.client_id}\nKEYSTATIC_GITHUB_CLIENT_SECRET=${ghAppDataResult.client_secret}\nKEYSTATIC_SECRET=${(0,node_crypto__WEBPACK_IMPORTED_MODULE_5__.randomBytes)(40).toString('hex')}\n${slugEnvVarName ? `${slugEnvVarName}=${ghAppDataResult.slug}\\n` : ''}`;\n  let prevEnv;\n  try {\n    prevEnv = await node_fs_promises__WEBPACK_IMPORTED_MODULE_2__.readFile('.env', 'utf-8');\n  } catch (err) {\n    if (err.code !== 'ENOENT') throw err;\n  }\n  const newEnv = prevEnv ? `${prevEnv}\\n\\n${toAddToEnv}` : toAddToEnv;\n  await node_fs_promises__WEBPACK_IMPORTED_MODULE_2__.writeFile('.env', newEnv);\n  await wait(200);\n  return redirect('/keystatic/created-github-app?slug=' + ghAppDataResult.slug);\n}\nfunction localModeApiHandler(config, localBaseDirectory) {\n  const baseDirectory = node_path__WEBPACK_IMPORTED_MODULE_1__.resolve(localBaseDirectory !== null && localBaseDirectory !== void 0 ? localBaseDirectory : process.cwd());\n  return async (req, params) => {\n    const joined = params.join('/');\n    if (req.method === 'GET' && joined === 'tree') {\n      return tree(req, config, baseDirectory);\n    }\n    if (req.method === 'GET' && params[0] === 'blob') {\n      return blob(req, config, params, baseDirectory);\n    }\n    if (req.method === 'POST' && joined === 'update') {\n      return update(req, config, baseDirectory);\n    }\n    return {\n      status: 404,\n      body: 'Not Found'\n    };\n  };\n}\nasync function tree(req, config, baseDirectory) {\n  if (req.headers.get('no-cors') !== '1') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  return {\n    status: 200,\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(await (0,_read_local_c89358f4_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.r)(baseDirectory))\n  };\n}\nfunction getIsPathValid(config) {\n  const allowedDirectories = (0,_read_local_c89358f4_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.g)(config);\n  return filepath => !filepath.includes('\\\\') && filepath.split('/').every(x => x !== '.' && x !== '..') && allowedDirectories.some(x => filepath.startsWith(x));\n}\nasync function blob(req, config, params, baseDirectory) {\n  if (req.headers.get('no-cors') !== '1') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const expectedSha = params[1];\n  const filepath = params.slice(2).join('/');\n  const isFilepathValid = getIsPathValid(config);\n  if (!isFilepathValid(filepath)) {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  let contents;\n  try {\n    contents = await node_fs_promises__WEBPACK_IMPORTED_MODULE_2__.readFile(node_path__WEBPACK_IMPORTED_MODULE_1__.join(baseDirectory, filepath));\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return {\n        status: 404,\n        body: 'Not Found'\n      };\n    }\n    throw err;\n  }\n  const sha = await (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__.i)(contents);\n  if (sha !== expectedSha) {\n    return {\n      status: 404,\n      body: 'Not Found'\n    };\n  }\n  return {\n    status: 200,\n    body: contents\n  };\n}\nconst base64Schema = superstruct__WEBPACK_IMPORTED_MODULE_15__.coerce(superstruct__WEBPACK_IMPORTED_MODULE_15__.instance(Uint8Array), superstruct__WEBPACK_IMPORTED_MODULE_15__.string(), val => base64UrlDecode(val));\nasync function update(req, config, baseDirectory) {\n  if (req.headers.get('no-cors') !== '1' || req.headers.get('content-type') !== 'application/json') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const isFilepathValid = getIsPathValid(config);\n  const filepath = superstruct__WEBPACK_IMPORTED_MODULE_15__.refine(superstruct__WEBPACK_IMPORTED_MODULE_15__.string(), 'filepath', isFilepathValid);\n  let updates;\n  try {\n    updates = superstruct__WEBPACK_IMPORTED_MODULE_15__.create(await req.json(), superstruct__WEBPACK_IMPORTED_MODULE_15__.object({\n      additions: superstruct__WEBPACK_IMPORTED_MODULE_15__.array(superstruct__WEBPACK_IMPORTED_MODULE_15__.object({\n        path: filepath,\n        contents: base64Schema\n      })),\n      deletions: superstruct__WEBPACK_IMPORTED_MODULE_15__.array(superstruct__WEBPACK_IMPORTED_MODULE_15__.object({\n        path: filepath\n      }))\n    }));\n  } catch {\n    return {\n      status: 400,\n      body: 'Bad data'\n    };\n  }\n  for (const addition of updates.additions) {\n    await node_fs_promises__WEBPACK_IMPORTED_MODULE_2__.mkdir(node_path__WEBPACK_IMPORTED_MODULE_1__.dirname(node_path__WEBPACK_IMPORTED_MODULE_1__.join(baseDirectory, addition.path)), {\n      recursive: true\n    });\n    await node_fs_promises__WEBPACK_IMPORTED_MODULE_2__.writeFile(node_path__WEBPACK_IMPORTED_MODULE_1__.join(baseDirectory, addition.path), addition.contents);\n  }\n  for (const deletion of updates.deletions) {\n    await node_fs_promises__WEBPACK_IMPORTED_MODULE_2__.rm(node_path__WEBPACK_IMPORTED_MODULE_1__.join(baseDirectory, deletion.path), {\n      force: true\n    });\n  }\n  return {\n    status: 200,\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(await (0,_read_local_c89358f4_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.r)(baseDirectory))\n  };\n}\n\nfunction bytesToHex(bytes) {\n  let str = '';\n  for (const byte of bytes) {\n    str += byte.toString(16).padStart(2, '0');\n  }\n  return str;\n}\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nasync function deriveKey(secret, salt) {\n  if (secret.length < 32) {\n    throw new Error('KEYSTATIC_SECRET must be at least 32 characters long');\n  }\n  const encoded = encoder.encode(secret);\n  const key = await node_crypto__WEBPACK_IMPORTED_MODULE_5__.webcrypto.subtle.importKey('raw', encoded, 'HKDF', false, ['deriveKey']);\n  return node_crypto__WEBPACK_IMPORTED_MODULE_5__.webcrypto.subtle.deriveKey({\n    name: 'HKDF',\n    salt,\n    hash: 'SHA-256',\n    info: new Uint8Array(0)\n  }, key, {\n    name: 'AES-GCM',\n    length: 256\n  }, false, ['encrypt', 'decrypt']);\n}\nconst SALT_LENGTH = 16;\nconst IV_LENGTH = 12;\nasync function encryptValue(value, secret) {\n  const salt = node_crypto__WEBPACK_IMPORTED_MODULE_5__.webcrypto.getRandomValues(new Uint8Array(SALT_LENGTH));\n  const iv = node_crypto__WEBPACK_IMPORTED_MODULE_5__.webcrypto.getRandomValues(new Uint8Array(IV_LENGTH));\n  const key = await deriveKey(secret, salt);\n  const encoded = encoder.encode(value);\n  const encrypted = await node_crypto__WEBPACK_IMPORTED_MODULE_5__.webcrypto.subtle.encrypt({\n    name: 'AES-GCM',\n    iv\n  }, key, encoded);\n  const full = new Uint8Array(SALT_LENGTH + IV_LENGTH + encrypted.byteLength);\n  full.set(salt);\n  full.set(iv, SALT_LENGTH);\n  full.set(new Uint8Array(encrypted), SALT_LENGTH + IV_LENGTH);\n  return base64UrlEncode(full);\n}\nasync function decryptValue(encrypted, secret) {\n  const decoded = base64UrlDecode(encrypted);\n  const salt = decoded.slice(0, SALT_LENGTH);\n  const key = await deriveKey(secret, salt);\n  const iv = decoded.slice(SALT_LENGTH, SALT_LENGTH + IV_LENGTH);\n  const value = decoded.slice(SALT_LENGTH + IV_LENGTH);\n  const decrypted = await node_crypto__WEBPACK_IMPORTED_MODULE_5__.webcrypto.subtle.decrypt({\n    name: 'AES-GCM',\n    iv\n  }, key, value);\n  return decoder.decode(decrypted);\n}\n\nconst keystaticRouteRegex = /^branch\\/[^]+(\\/collection\\/[^/]+(|\\/(create|item\\/[^/]+))|\\/singleton\\/[^/]+)?$/;\nconst keyToEnvVar = {\n  clientId: 'KEYSTATIC_GITHUB_CLIENT_ID',\n  clientSecret: 'KEYSTATIC_GITHUB_CLIENT_SECRET',\n  secret: 'KEYSTATIC_SECRET'\n};\nfunction tryOrUndefined(fn) {\n  try {\n    return fn();\n  } catch {\n    return undefined;\n  }\n}\nfunction makeGenericAPIRouteHandler(_config, options) {\n  var _config$clientId, _config$clientSecret, _config$secret;\n  const _config2 = {\n    clientId: (_config$clientId = _config.clientId) !== null && _config$clientId !== void 0 ? _config$clientId : tryOrUndefined(() => process.env.KEYSTATIC_GITHUB_CLIENT_ID),\n    clientSecret: (_config$clientSecret = _config.clientSecret) !== null && _config$clientSecret !== void 0 ? _config$clientSecret : tryOrUndefined(() => process.env.KEYSTATIC_GITHUB_CLIENT_SECRET),\n    secret: (_config$secret = _config.secret) !== null && _config$secret !== void 0 ? _config$secret : tryOrUndefined(() => process.env.KEYSTATIC_SECRET),\n    config: _config.config\n  };\n  const getParams = req => {\n    let url;\n    try {\n      url = new URL(req.url);\n    } catch (err) {\n      throw new Error(`Found incomplete URL in Keystatic API route URL handler${(options === null || options === void 0 ? void 0 : options.slugEnvName) === 'NEXT_PUBLIC_KEYSTATIC_GITHUB_APP_SLUG' ? \". Make sure you're using the latest version of @keystatic/next\" : ''}`);\n    }\n    return url.pathname.replace(/^\\/api\\/keystatic\\/?/, '').split('/').map(x => decodeURIComponent(x)).filter(Boolean);\n  };\n  if (_config2.config.storage.kind === 'local') {\n    const handler = localModeApiHandler(_config2.config, _config.localBaseDirectory);\n    return req => {\n      const params = getParams(req);\n      return handler(req, params);\n    };\n  }\n  if (_config2.config.storage.kind === 'cloud') {\n    return async function keystaticAPIRoute() {\n      return {\n        status: 404,\n        body: 'Not Found'\n      };\n    };\n  }\n  if (!_config2.clientId || !_config2.clientSecret || !_config2.secret) {\n    if (false) {}\n    return async function keystaticAPIRoute(req) {\n      const params = getParams(req);\n      const joined = params.join('/');\n      if (joined === 'github/created-app') {\n        return createdGithubApp(req, options === null || options === void 0 ? void 0 : options.slugEnvName);\n      }\n      if (joined === 'github/login' || joined === 'github/repo-not-found' || joined === 'github/logout') {\n        return redirect('/keystatic/setup');\n      }\n      return {\n        status: 404,\n        body: 'Not Found'\n      };\n    };\n  }\n  const config = {\n    clientId: _config2.clientId,\n    clientSecret: _config2.clientSecret,\n    secret: _config2.secret,\n    config: _config2.config\n  };\n  return async function keystaticAPIRoute(req) {\n    const params = getParams(req);\n    const joined = params.join('/');\n    if (joined === 'github/oauth/callback') {\n      return githubOauthCallback(req, config);\n    }\n    if (joined === 'github/login') {\n      return githubLogin(req, config);\n    }\n    if (joined === 'github/refresh-token') {\n      return githubRefreshToken(req, config);\n    }\n    if (joined === 'github/repo-not-found') {\n      return githubRepoNotFound(req, config);\n    }\n    if (joined === 'github/logout') {\n      var _req$headers$get;\n      const cookies = cookie__WEBPACK_IMPORTED_MODULE_0__.parse((_req$headers$get = req.headers.get('cookie')) !== null && _req$headers$get !== void 0 ? _req$headers$get : '');\n      const access_token = cookies['keystatic-gh-access-token'];\n      if (access_token) {\n        await fetch(`https://api.github.com/applications/${config.clientId}/token`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Basic ${btoa(config.clientId + ':' + config.clientSecret)}`\n          },\n          body: JSON.stringify({\n            access_token\n          })\n        });\n      }\n      return redirect('/keystatic', [['Set-Cookie', immediatelyExpiringCookie('keystatic-gh-access-token')], ['Set-Cookie', immediatelyExpiringCookie('keystatic-gh-refresh-token')]]);\n    }\n    return {\n      status: 404,\n      body: 'Not Found'\n    };\n  };\n}\nconst tokenDataResultType = superstruct__WEBPACK_IMPORTED_MODULE_15__.type({\n  access_token: superstruct__WEBPACK_IMPORTED_MODULE_15__.string(),\n  expires_in: superstruct__WEBPACK_IMPORTED_MODULE_15__.number(),\n  refresh_token: superstruct__WEBPACK_IMPORTED_MODULE_15__.string(),\n  refresh_token_expires_in: superstruct__WEBPACK_IMPORTED_MODULE_15__.number(),\n  scope: superstruct__WEBPACK_IMPORTED_MODULE_15__.string(),\n  token_type: superstruct__WEBPACK_IMPORTED_MODULE_15__.literal('bearer')\n});\nasync function githubOauthCallback(req, config) {\n  var _req$headers$get2;\n  const searchParams = new URL(req.url, 'http://localhost').searchParams;\n  const error = searchParams.get('error');\n  const errorDescription = searchParams.get('error_description');\n  if (typeof errorDescription === 'string') {\n    return {\n      status: 400,\n      body: `An error occurred when trying to authenticate with GitHub:\\n${errorDescription}${error === 'redirect_uri_mismatch' ? `\\n\\nIf you were trying to sign in locally and recently upgraded Keystatic from @keystatic/core@0.0.69 or below, you need to add \\`http://127.0.0.1/api/keystatic/github/oauth/callback\\` as a callback URL in your GitHub app.` : ''}`\n    };\n  }\n  const code = searchParams.get('code');\n  const state = searchParams.get('state');\n  if (typeof code !== 'string') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const cookies = cookie__WEBPACK_IMPORTED_MODULE_0__.parse((_req$headers$get2 = req.headers.get('cookie')) !== null && _req$headers$get2 !== void 0 ? _req$headers$get2 : '');\n  const fromCookie = state ? cookies['ks-' + state] : undefined;\n  const from = typeof fromCookie === 'string' && keystaticRouteRegex.test(fromCookie) ? fromCookie : undefined;\n  const url = new URL('https://github.com/login/oauth/access_token');\n  url.searchParams.set('client_id', config.clientId);\n  url.searchParams.set('client_secret', config.clientSecret);\n  url.searchParams.set('code', code);\n  const tokenRes = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  if (!tokenRes.ok) {\n    return {\n      status: 401,\n      body: 'Authorization failed'\n    };\n  }\n  const _tokenData = await tokenRes.json();\n  let tokenData;\n  try {\n    tokenData = tokenDataResultType.create(_tokenData);\n  } catch {\n    return {\n      status: 401,\n      body: 'Authorization failed'\n    };\n  }\n  const headers = await getTokenCookies(tokenData, config);\n  if (state === 'close') {\n    return {\n      headers: [...headers, ['Content-Type', 'text/html']],\n      body: \"<script>localStorage.setItem('ks-refetch-installations', 'true');window.close();</script>\",\n      status: 200\n    };\n  }\n  return redirect(`/keystatic${from ? `/${from}` : ''}`, headers);\n}\nasync function getTokenCookies(tokenData, config) {\n  const headers = [['Set-Cookie', cookie__WEBPACK_IMPORTED_MODULE_0__.serialize('keystatic-gh-access-token', tokenData.access_token, {\n    sameSite: 'lax',\n    secure: \"development\" === 'production',\n    maxAge: tokenData.expires_in,\n    expires: new Date(Date.now() + tokenData.expires_in * 1000),\n    path: '/'\n  })], ['Set-Cookie', cookie__WEBPACK_IMPORTED_MODULE_0__.serialize('keystatic-gh-refresh-token', await encryptValue(tokenData.refresh_token, config.secret), {\n    sameSite: 'lax',\n    secure: \"development\" === 'production',\n    httpOnly: true,\n    maxAge: tokenData.refresh_token_expires_in,\n    expires: new Date(Date.now() + tokenData.refresh_token_expires_in * 100),\n    path: '/'\n  })]];\n  return headers;\n}\nasync function getRefreshToken(req, config) {\n  const cookies = cookie__WEBPACK_IMPORTED_MODULE_0__.parse(req.headers.get('cookie') || '');\n  const refreshTokenCookie = cookies['keystatic-gh-refresh-token'];\n  if (!refreshTokenCookie) return;\n  let refreshToken;\n  try {\n    refreshToken = await decryptValue(refreshTokenCookie, config.secret);\n  } catch {\n    return;\n  }\n  return refreshToken;\n}\nasync function githubRefreshToken(req, config) {\n  const headers = await refreshGitHubAuth(req, config);\n  if (!headers) {\n    return {\n      status: 401,\n      body: 'Authorization failed'\n    };\n  }\n  return {\n    status: 200,\n    headers,\n    body: ''\n  };\n}\nasync function refreshGitHubAuth(req, config) {\n  const refreshToken = await getRefreshToken(req, config);\n  if (!refreshToken) {\n    return;\n  }\n  const url = new URL('https://github.com/login/oauth/access_token');\n  url.searchParams.set('client_id', config.clientId);\n  url.searchParams.set('client_secret', config.clientSecret);\n  url.searchParams.set('grant_type', 'refresh_token');\n  url.searchParams.set('refresh_token', refreshToken);\n  const tokenRes = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  if (!tokenRes.ok) {\n    return;\n  }\n  const _tokenData = await tokenRes.json();\n  let tokenData;\n  try {\n    tokenData = tokenDataResultType.create(_tokenData);\n  } catch {\n    return;\n  }\n  return getTokenCookies(tokenData, config);\n}\nasync function githubRepoNotFound(req, config) {\n  const headers = await refreshGitHubAuth(req, config);\n  if (headers) {\n    return redirect('/keystatic/repo-not-found', headers);\n  }\n  return githubLogin(req, config);\n}\nasync function githubLogin(req, config) {\n  const reqUrl = new URL(req.url);\n  const rawFrom = reqUrl.searchParams.get('from');\n  const from = typeof rawFrom === 'string' && keystaticRouteRegex.test(rawFrom) ? rawFrom : '/';\n  const state = bytesToHex(node_crypto__WEBPACK_IMPORTED_MODULE_5__.webcrypto.getRandomValues(new Uint8Array(10)));\n  const url = new URL('https://github.com/login/oauth/authorize');\n  url.searchParams.set('client_id', config.clientId);\n  url.searchParams.set('redirect_uri', `${reqUrl.origin}/api/keystatic/github/oauth/callback`);\n  if (from === '/') {\n    return redirect(url.toString());\n  }\n  url.searchParams.set('state', state);\n  return redirect(url.toString(), [['Set-Cookie', cookie__WEBPACK_IMPORTED_MODULE_0__.serialize('ks-' + state, from, {\n    sameSite: 'lax',\n    secure: \"development\" === 'production',\n    // 1 day\n    maxAge: 60 * 60 * 24,\n    expires: new Date(Date.now() + 60 * 60 * 24 * 1000),\n    path: '/',\n    httpOnly: true\n  })]]);\n}\nasync function createdGithubApp(req, slugEnvVarName) {\n  if (false) {}\n  return handleGitHubAppCreation(req, slugEnvVarName);\n}\nfunction immediatelyExpiringCookie(name) {\n  return cookie__WEBPACK_IMPORTED_MODULE_0__.serialize(name, '', {\n    secure: \"development\" === 'production',\n    sameSite: 'lax',\n    path: '/',\n    maxAge: 0,\n    expires: new Date()\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/keystatic-core-api-generic.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/keystatic-core-reader.node.react-server.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/keystatic-core-reader.node.react-server.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReader: () => (/* binding */ createReader)\n/* harmony export */ });\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:path */ \"node:path\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var _generic_0d618209_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generic-0d618209.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/generic-0d618209.node.react-server.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-b2de9be1.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! emery/assertions */ \"(rsc)/./node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index-10ea50e2.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var js_yaml__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! js-yaml */ \"(rsc)/./node_modules/js-yaml/dist/js-yaml.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction createReader(repoPath, config) {\n  const fs$1 = {\n    async fileExists(path$1) {\n      try {\n        await node_fs_promises__WEBPACK_IMPORTED_MODULE_1__.stat(node_path__WEBPACK_IMPORTED_MODULE_0__.join(repoPath, path$1));\n        return true;\n      } catch (err) {\n        if (err.code === 'ENOENT') return false;\n        throw err;\n      }\n    },\n    async readdir(path$1) {\n      try {\n        const entries = await node_fs_promises__WEBPACK_IMPORTED_MODULE_1__.readdir(node_path__WEBPACK_IMPORTED_MODULE_0__.join(repoPath, path$1), {\n          withFileTypes: true\n        });\n        const filtered = [];\n        for (const entry of entries) {\n          if (entry.isDirectory()) {\n            filtered.push({\n              name: entry.name,\n              kind: 'directory'\n            });\n          }\n          if (entry.isFile()) {\n            filtered.push({\n              name: entry.name,\n              kind: 'file'\n            });\n          }\n        }\n        return filtered;\n      } catch (err) {\n        if (err.code === 'ENOENT') return [];\n        throw err;\n      }\n    },\n    async readFile(path$1) {\n      try {\n        return await node_fs_promises__WEBPACK_IMPORTED_MODULE_1__.readFile(node_path__WEBPACK_IMPORTED_MODULE_0__.join(repoPath, path$1));\n      } catch (err) {\n        if (err.code === 'ENOENT') return null;\n        throw err;\n      }\n    }\n  };\n  return {\n    collections: Object.fromEntries(Object.keys(config.collections || {}).map(key => [key, (0,_generic_0d618209_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.c)(key, config, fs$1)])),\n    singletons: Object.fromEntries(Object.keys(config.singletons || {}).map(key => [key, (0,_generic_0d618209_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.s)(key, config, fs$1)])),\n    repoPath,\n    config\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3Qva2V5c3RhdGljLWNvcmUtcmVhZGVyLm5vZGUucmVhY3Qtc2VydmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDSztBQUNvRTtBQUMzRTtBQUNvQjtBQUNOO0FBQ2Y7QUFDWDtBQUNnQztBQUMvQjtBQUNpQjtBQUNoQjtBQUNGOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxrREFBTyxDQUFDLDJDQUFTO0FBQy9CO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsOEJBQThCLHFEQUFVLENBQUMsMkNBQVM7QUFDbEQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCLHNEQUFXLENBQUMsMkNBQVM7QUFDMUMsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxtQkFBbUIseUVBQWdCO0FBQzNHLHNFQUFzRSxtQkFBbUIseUVBQWU7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7O0FBRXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtleXN0YXRpYy90ZW1wbGF0ZXMtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BrZXlzdGF0aWMvY29yZS9kaXN0L2tleXN0YXRpYy1jb3JlLXJlYWRlci5ub2RlLnJlYWN0LXNlcnZlci5qcz80ZWI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ25vZGU6cGF0aCc7XG5pbXBvcnQgZnMgZnJvbSAnbm9kZTpmcy9wcm9taXNlcyc7XG5pbXBvcnQgeyBjIGFzIGNvbGxlY3Rpb25SZWFkZXIsIHMgYXMgc2luZ2xldG9uUmVhZGVyIH0gZnJvbSAnLi9nZW5lcmljLTBkNjE4MjA5Lm5vZGUucmVhY3Qtc2VydmVyLmpzJztcbmltcG9ydCAncmVhY3QvanN4LXJ1bnRpbWUnO1xuaW1wb3J0ICcuL2luZGV4LWIyZGU5YmUxLm5vZGUucmVhY3Qtc2VydmVyLmpzJztcbmltcG9ydCAnQG1hcmtkb2MvbWFya2RvYy9kaXN0L2luZGV4Lm1qcyc7XG5pbXBvcnQgJ2VtZXJ5L2Fzc2VydGlvbnMnO1xuaW1wb3J0ICdlbWVyeSc7XG5pbXBvcnQgJy4vaW5kZXgtMTBlYTUwZTIubm9kZS5yZWFjdC1zZXJ2ZXIuanMnO1xuaW1wb3J0ICdjcnlwdG8nO1xuaW1wb3J0ICdAYnJhaW50cmVlL3Nhbml0aXplLXVybCc7XG5pbXBvcnQgJ2pzLXlhbWwnO1xuaW1wb3J0ICdyZWFjdCc7XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWRlcihyZXBvUGF0aCwgY29uZmlnKSB7XG4gIGNvbnN0IGZzJDEgPSB7XG4gICAgYXN5bmMgZmlsZUV4aXN0cyhwYXRoJDEpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGZzLnN0YXQocGF0aC5qb2luKHJlcG9QYXRoLCBwYXRoJDEpKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyci5jb2RlID09PSAnRU5PRU5UJykgcmV0dXJuIGZhbHNlO1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfSxcbiAgICBhc3luYyByZWFkZGlyKHBhdGgkMSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZW50cmllcyA9IGF3YWl0IGZzLnJlYWRkaXIocGF0aC5qb2luKHJlcG9QYXRoLCBwYXRoJDEpLCB7XG4gICAgICAgICAgd2l0aEZpbGVUeXBlczogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZmlsdGVyZWQgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBlbnRyeSBvZiBlbnRyaWVzKSB7XG4gICAgICAgICAgaWYgKGVudHJ5LmlzRGlyZWN0b3J5KCkpIHtcbiAgICAgICAgICAgIGZpbHRlcmVkLnB1c2goe1xuICAgICAgICAgICAgICBuYW1lOiBlbnRyeS5uYW1lLFxuICAgICAgICAgICAgICBraW5kOiAnZGlyZWN0b3J5J1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChlbnRyeS5pc0ZpbGUoKSkge1xuICAgICAgICAgICAgZmlsdGVyZWQucHVzaCh7XG4gICAgICAgICAgICAgIG5hbWU6IGVudHJ5Lm5hbWUsXG4gICAgICAgICAgICAgIGtpbmQ6ICdmaWxlJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaWx0ZXJlZDtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBpZiAoZXJyLmNvZGUgPT09ICdFTk9FTlQnKSByZXR1cm4gW107XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFzeW5jIHJlYWRGaWxlKHBhdGgkMSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGZzLnJlYWRGaWxlKHBhdGguam9pbihyZXBvUGF0aCwgcGF0aCQxKSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyci5jb2RlID09PSAnRU5PRU5UJykgcmV0dXJuIG51bGw7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHJldHVybiB7XG4gICAgY29sbGVjdGlvbnM6IE9iamVjdC5mcm9tRW50cmllcyhPYmplY3Qua2V5cyhjb25maWcuY29sbGVjdGlvbnMgfHwge30pLm1hcChrZXkgPT4gW2tleSwgY29sbGVjdGlvblJlYWRlcihrZXksIGNvbmZpZywgZnMkMSldKSksXG4gICAgc2luZ2xldG9uczogT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5rZXlzKGNvbmZpZy5zaW5nbGV0b25zIHx8IHt9KS5tYXAoa2V5ID0+IFtrZXksIHNpbmdsZXRvblJlYWRlcihrZXksIGNvbmZpZywgZnMkMSldKSksXG4gICAgcmVwb1BhdGgsXG4gICAgY29uZmlnXG4gIH07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVJlYWRlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/keystatic-core-reader.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/keystatic-core.node.react-server.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/keystatic-core.node.react-server.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockWrapper: () => (/* binding */ BlockWrapper),\n/* harmony export */   NotEditable: () => (/* binding */ NotEditable),\n/* harmony export */   ToolbarSeparator: () => (/* binding */ ToolbarSeparator),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   component: () => (/* reexport safe */ _api_b2cd9ecd_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   fields: () => (/* binding */ index),\n/* harmony export */   singleton: () => (/* binding */ singleton)\n/* harmony export */ });\n/* harmony import */ var _api_b2cd9ecd_node_react_server_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-b2cd9ecd.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/api-b2cd9ecd.node.react-server.js\");\n/* harmony import */ var _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-10ea50e2.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-10ea50e2.node.react-server.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-b2de9be1.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _index_9722793d_node_react_server_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-9722793d.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-9722793d.node.react-server.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! emery/assertions */ \"(rsc)/./node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\n\n\n\n\n\n\n\n\n\n// Common\n\n// Storage\n// ----------------------------------------------------------------------------\n\n// ============================================================================\n// Functions\n// ============================================================================\n\nfunction config(config) {\n  return config;\n}\nfunction collection(collection) {\n  return collection;\n}\nfunction singleton(collection) {\n  return collection;\n}\n\nfunction array(element, opts) {\n  var _opts$label;\n  return {\n    kind: 'array',\n    element,\n    label: (_opts$label = opts === null || opts === void 0 ? void 0 : opts.label) !== null && _opts$label !== void 0 ? _opts$label : 'Items',\n    description: opts === null || opts === void 0 ? void 0 : opts.description,\n    itemLabel: opts === null || opts === void 0 ? void 0 : opts.itemLabel,\n    asChildTag: opts === null || opts === void 0 ? void 0 : opts.asChildTag,\n    slugField: opts === null || opts === void 0 ? void 0 : opts.slugField,\n    validation: opts === null || opts === void 0 ? void 0 : opts.validation\n  };\n}\n\nfunction select({\n  label,\n  options,\n  defaultValue,\n  description\n}) {\n  const optionValuesSet = new Set(options.map(x => x.value));\n  if (!optionValuesSet.has(defaultValue)) {\n    throw new Error(`A defaultValue of ${defaultValue} was provided to a select field but it does not match the value of one of the options provided`);\n  }\n  const field = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.S, {\n        label: label,\n        options: options,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return defaultValue;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      if (!optionValuesSet.has(value)) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a valid option');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nfunction blocks(blocks, opts) {\n  const entries = Object.entries(blocks);\n  if (!entries.length) {\n    throw new Error('fields.blocks must have at least one entry');\n  }\n  const select$1 = select({\n    label: 'Kind',\n    defaultValue: entries[0][0],\n    options: Object.entries(blocks).map(([key, {\n      label\n    }]) => ({\n      label,\n      value: key\n    }))\n  });\n  const element = conditional(select$1, Object.fromEntries(entries.map(([key, {\n    schema\n  }]) => [key, schema])));\n  return {\n    ...array(element, {\n      label: opts.label,\n      description: opts.description,\n      validation: opts.validation,\n      itemLabel(props) {\n        const kind = props.discriminant;\n        const block = blocks[kind];\n        if (!block.itemLabel) return block.label;\n        return block.itemLabel(props.value);\n      }\n    }),\n    Input: _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.B\n  };\n}\n\nfunction checkbox({\n  label,\n  defaultValue = false,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.C, {\n        ...props,\n        label: label,\n        description: description\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) return defaultValue;\n      if (typeof value !== 'boolean') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a boolean');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n}\n\nfunction child(options) {\n  return {\n    kind: 'child',\n    options: options.kind === 'block' ? {\n      ...options,\n      dividers: options.dividers,\n      formatting: options.formatting === 'inherit' ? {\n        blockTypes: 'inherit',\n        headingLevels: 'inherit',\n        inlineMarks: 'inherit',\n        listTypes: 'inherit',\n        alignment: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links,\n      images: options.images,\n      tables: options.tables,\n      componentBlocks: options.componentBlocks\n    } : {\n      kind: 'inline',\n      placeholder: options.placeholder,\n      formatting: options.formatting === 'inherit' ? {\n        inlineMarks: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links\n    }\n  };\n}\n\nfunction cloudImage({\n  label,\n  description,\n  validation\n}) {\n  return {\n    ...(0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.o)({\n      src: (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.t)({\n        label: 'URL',\n        validation: {\n          length: {\n            min: validation !== null && validation !== void 0 && validation.isRequired ? 1 : 0\n          }\n        }\n      }),\n      alt: (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.t)({\n        label: 'Alt text'\n      }),\n      height: (0,_index_9722793d_node_react_server_js__WEBPACK_IMPORTED_MODULE_6__.i)({\n        label: 'Height'\n      }),\n      width: (0,_index_9722793d_node_react_server_js__WEBPACK_IMPORTED_MODULE_6__.i)({\n        label: 'Width'\n      })\n    }, {\n      label,\n      description\n    }),\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.a, {\n        ...props,\n        isRequired: validation === null || validation === void 0 ? void 0 : validation.isRequired\n      });\n    }\n  };\n}\n\nfunction conditional(discriminant, values) {\n  return {\n    kind: 'conditional',\n    discriminant,\n    values: values\n  };\n}\n\nfunction validateDate(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}$/.test(value)) {\n    return `${label} is not a valid date`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const date = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (date < min) {\n        return `${label} must be after ${min.toLocaleDateString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (date > max) {\n        return `${label} must be no later than ${max.toLocaleDateString()}`;\n      }\n    }\n  }\n}\n\nfunction date({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.D, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth() + 1).padStart(2, '0');\n      const day = String(today.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (value instanceof Date) {\n        const year = value.getUTCFullYear();\n        const month = String(value.getUTCMonth() + 1).padStart(2, '0');\n        const day = String(value.getUTCDate()).padStart(2, '0');\n        return `${year}-${month}-${day}`;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value;\n    },\n    serialize(value) {\n      if (value === null) return {\n        value: undefined\n      };\n      const date = new Date(value);\n      date.toISOString = () => value;\n      date.toString = () => value;\n      return {\n        value: date\n      };\n    },\n    validate(value) {\n      const message = validateDate(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction validateDatetime(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/.test(value)) {\n    return `${label} is not a valid datetime`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const datetime = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (datetime < min) {\n        return `${label} must be after ${min.toISOString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (datetime > max) {\n        return `${label} must be no later than ${max.toISOString()}`;\n      }\n    }\n  }\n}\n\nfunction datetime({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.d, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      if (defaultValue.kind === 'now') {\n        const now = new Date();\n        return new Date(now.getTime() - now.getTimezoneOffset() * 60 * 1000).toISOString().slice(0, -8);\n      }\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (value instanceof Date) {\n        return value.toISOString().slice(0, -8);\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string or date');\n      }\n      return value;\n    },\n    serialize(value) {\n      if (value === null) return {\n        value: undefined\n      };\n      const date = new Date(value + 'Z');\n      date.toJSON = () => date.toISOString().slice(0, -8);\n      date.toString = () => date.toISOString().slice(0, -8);\n      return {\n        value: date\n      };\n    },\n    validate(value) {\n      const message = validateDatetime(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction empty() {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    serialize() {\n      return {\n        value: undefined\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    label: 'Empty'\n  });\n}\n\n/**\n * @deprecated `emptyDocument` has been replaced with the `emptyContent` field\n */\nfunction emptyDocument() {\n  return {\n    kind: 'form',\n    formKind: 'content',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    contentExtension: '.mdoc',\n    serialize() {\n      return {\n        value: undefined,\n        content: new Uint8Array(),\n        external: new Map(),\n        other: new Map()\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    reader: {\n      parse() {\n        return null;\n      }\n    }\n  };\n}\n\nfunction emptyContent(opts) {\n  return {\n    kind: 'form',\n    formKind: 'content',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    contentExtension: `.${opts.extension}`,\n    serialize() {\n      return {\n        value: undefined,\n        content: new Uint8Array(),\n        external: new Map(),\n        other: new Map()\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    reader: {\n      parse() {\n        return null;\n      }\n    }\n  };\n}\n\nfunction file({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath,\n  transformFilename\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.e, {\n        label: label,\n        description: description,\n        validation: validation,\n        transformFilename: transformFilename,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.f)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction image({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath,\n  transformFilename\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.I, {\n        label: label,\n        description: description,\n        validation: validation,\n        transformFilename: transformFilename,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.g)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.f)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction pluralize(count, options) {\n  const {\n    singular,\n    plural = singular + 's',\n    inclusive = true\n  } = options;\n  const variant = count === 1 ? singular : plural;\n  return inclusive ? `${count} ${variant}` : variant;\n}\n\nfunction validateMultiRelationshipLength(validation, value) {\n  var _validation$length$mi, _validation$length, _validation$length$ma, _validation$length2;\n  const minLength = (_validation$length$mi = validation === null || validation === void 0 || (_validation$length = validation.length) === null || _validation$length === void 0 ? void 0 : _validation$length.min) !== null && _validation$length$mi !== void 0 ? _validation$length$mi : 0;\n  if (value.length < minLength) {\n    return `Must have at least ${pluralize(minLength, {\n      singular: 'item'\n    })}.`;\n  }\n  const maxLength = (_validation$length$ma = validation === null || validation === void 0 || (_validation$length2 = validation.length) === null || _validation$length2 === void 0 ? void 0 : _validation$length2.max) !== null && _validation$length$ma !== void 0 ? _validation$length$ma : Infinity;\n  if (value.length > maxLength) {\n    return `Must have at most ${pluralize(maxLength, {\n      singular: 'item'\n    })}.`;\n  }\n}\n\nfunction multiRelationship({\n  label,\n  collection,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.M, {\n        label: label,\n        collection: collection,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return [];\n    },\n    parse(value) {\n      if (value === undefined) {\n        return [];\n      }\n      if (!Array.isArray(value) || !value.every(emery__WEBPACK_IMPORTED_MODULE_4__.isString)) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be an array of strings');\n      }\n      return value;\n    },\n    validate(value) {\n      const error = validateMultiRelationshipLength(validation, value);\n      if (error) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(error);\n      }\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n}\n\nfunction multiselect({\n  label,\n  options,\n  defaultValue = [],\n  description\n}) {\n  const valuesToOption = new Map(options.map(x => [x.value, x]));\n  const field = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.f, {\n        label: label,\n        description: description,\n        options: options,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return [];\n      }\n      if (!Array.isArray(value)) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be an array of options');\n      }\n      if (!value.every(x => typeof x === 'string' && valuesToOption.has(x))) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(`Must be an array with one of ${options.map(x => x.value).join(', ')}`);\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nfunction validateNumber(validation, value, step, label) {\n  if (value !== null && typeof value !== 'number') {\n    return `${label} must be a number`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if (value !== null) {\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined && value < validation.min) {\n      return `${label} must be at least ${validation.min}`;\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined && value > validation.max) {\n      return `${label} must be at most ${validation.max}`;\n    }\n    if (step !== undefined && (validation === null || validation === void 0 ? void 0 : validation.validateStep) !== undefined && !isAtStep(value, step)) {\n      return `${label} must be a multiple of ${step}`;\n    }\n  }\n}\nfunction decimalPlaces(value) {\n  const stringified = value.toString();\n  const indexOfDecimal = stringified.indexOf('.');\n  if (indexOfDecimal === -1) {\n    const indexOfE = stringified.indexOf('e-');\n    return indexOfE === -1 ? 0 : parseInt(stringified.slice(indexOfE + 2));\n  }\n  return stringified.length - indexOfDecimal - 1;\n}\nfunction isAtStep(value, step) {\n  const dc = Math.max(decimalPlaces(step), decimalPlaces(value));\n  const base = Math.pow(10, dc);\n  return value * base % (step * base) === 0;\n}\n\nfunction number({\n  label,\n  defaultValue,\n  step,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.N, {\n        label: label,\n        description: description,\n        validation: validation,\n        step: step,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue !== null && defaultValue !== void 0 ? defaultValue : null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value === 'number') {\n        return value;\n      }\n      throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a number');\n    },\n    validate(value) {\n      const message = validateNumber(validation, value, step, label);\n      if (message !== undefined) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction pathReference({\n  label,\n  pattern,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.P, {\n        label: label,\n        pattern: pattern,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction relationship({\n  label,\n  collection,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.R, {\n        label: label,\n        collection: collection,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction parseSlugFieldAsNormalField(value) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug: ''\n    };\n  }\n  if (typeof value !== 'object') {\n    throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be an object');\n  }\n  if (Object.keys(value).length !== 2) {\n    throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Unexpected keys');\n  }\n  if (!('name' in value) || !('slug' in value)) {\n    throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Missing name or slug');\n  }\n  if (typeof value.name !== 'string') {\n    throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('name must be a string');\n  }\n  if (typeof value.slug !== 'string') {\n    throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('slug must be a string');\n  }\n  return {\n    name: value.name,\n    slug: value.slug\n  };\n}\nfunction parseAsSlugField(value, slug) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug\n    };\n  }\n  if (typeof value !== 'string') {\n    throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n  }\n  return {\n    name: value,\n    slug\n  };\n}\nfunction slug(_args) {\n  var _args$name$validation, _args$name$validation2, _args$name$validation3, _args$name$validation4, _args$name$validation5, _args$slug;\n  const args = {\n    ..._args,\n    name: {\n      ..._args.name,\n      validation: {\n        pattern: (_args$name$validation = _args.name.validation) === null || _args$name$validation === void 0 ? void 0 : _args$name$validation.pattern,\n        length: {\n          min: Math.max((_args$name$validation2 = _args.name.validation) !== null && _args$name$validation2 !== void 0 && _args$name$validation2.isRequired ? 1 : 0, (_args$name$validation3 = (_args$name$validation4 = _args.name.validation) === null || _args$name$validation4 === void 0 || (_args$name$validation4 = _args$name$validation4.length) === null || _args$name$validation4 === void 0 ? void 0 : _args$name$validation4.min) !== null && _args$name$validation3 !== void 0 ? _args$name$validation3 : 0),\n          max: (_args$name$validation5 = _args.name.validation) === null || _args$name$validation5 === void 0 || (_args$name$validation5 = _args$name$validation5.length) === null || _args$name$validation5 === void 0 ? void 0 : _args$name$validation5.max\n        }\n      }\n    }\n  };\n  const naiveGenerateSlug = ((_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.generate) || _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.s;\n  let _defaultValue;\n  function defaultValue() {\n    if (!_defaultValue) {\n      var _args$name$defaultVal, _args$name$defaultVal2;\n      _defaultValue = {\n        name: (_args$name$defaultVal = args.name.defaultValue) !== null && _args$name$defaultVal !== void 0 ? _args$name$defaultVal : '',\n        slug: naiveGenerateSlug((_args$name$defaultVal2 = args.name.defaultValue) !== null && _args$name$defaultVal2 !== void 0 ? _args$name$defaultVal2 : '')\n      };\n    }\n    return _defaultValue;\n  }\n  function validate(value, {\n    slugField\n  } = {\n    slugField: undefined\n  }) {\n    var _args$name$validation6, _args$name$validation7, _args$name$validation8, _args$name$validation9, _args$name$validation10, _args$slug$validation, _args$slug2, _args$slug$validation2, _args$slug3, _args$slug$label, _args$slug4, _args$slug5;\n    const nameMessage = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.v)(value.name, (_args$name$validation6 = (_args$name$validation7 = args.name.validation) === null || _args$name$validation7 === void 0 || (_args$name$validation7 = _args$name$validation7.length) === null || _args$name$validation7 === void 0 ? void 0 : _args$name$validation7.min) !== null && _args$name$validation6 !== void 0 ? _args$name$validation6 : 0, (_args$name$validation8 = (_args$name$validation9 = args.name.validation) === null || _args$name$validation9 === void 0 || (_args$name$validation9 = _args$name$validation9.length) === null || _args$name$validation9 === void 0 ? void 0 : _args$name$validation9.max) !== null && _args$name$validation8 !== void 0 ? _args$name$validation8 : Infinity, args.name.label, undefined, (_args$name$validation10 = args.name.validation) === null || _args$name$validation10 === void 0 ? void 0 : _args$name$validation10.pattern);\n    if (nameMessage !== undefined) {\n      throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(nameMessage);\n    }\n    const slugMessage = (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.v)(value.slug, (_args$slug$validation = (_args$slug2 = args.slug) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.validation) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.length) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.min) !== null && _args$slug$validation !== void 0 ? _args$slug$validation : 1, (_args$slug$validation2 = (_args$slug3 = args.slug) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.validation) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.length) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.max) !== null && _args$slug$validation2 !== void 0 ? _args$slug$validation2 : Infinity, (_args$slug$label = (_args$slug4 = args.slug) === null || _args$slug4 === void 0 ? void 0 : _args$slug4.label) !== null && _args$slug$label !== void 0 ? _args$slug$label : 'Slug', slugField ? slugField : {\n      slugs: emptySet,\n      glob: '*'\n    }, (_args$slug5 = args.slug) === null || _args$slug5 === void 0 || (_args$slug5 = _args$slug5.validation) === null || _args$slug5 === void 0 ? void 0 : _args$slug5.pattern);\n    if (slugMessage !== undefined) {\n      throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(slugMessage);\n    }\n    return value;\n  }\n  const emptySet = new Set();\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    label: args.name.label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.g, {\n        args: args,\n        naiveGenerateSlug: naiveGenerateSlug,\n        defaultValue: defaultValue(),\n        ...props\n      });\n    },\n    defaultValue,\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return parseAsSlugField(value, args.slug);\n      }\n      return parseSlugFieldAsNormalField(value);\n    },\n    validate,\n    serialize(value) {\n      return {\n        value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        value: value.name,\n        slug: value.slug\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseSlugFieldAsNormalField(value);\n        return validate(parsed);\n      },\n      parseWithSlug(value, args) {\n        return validate(parseAsSlugField(value, args.slug), {\n          slugField: {\n            glob: args.glob,\n            slugs: emptySet\n          }\n        }).name;\n      }\n    }\n  };\n}\n\nfunction isValidURL(url) {\n  return url === (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_5__.sanitizeUrl)(url);\n}\n\nfunction validateUrl(validation, value, label) {\n  if (value !== null && (typeof value !== 'string' || !isValidURL(value))) {\n    return `${label} is not a valid URL`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n}\n\nfunction url({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.b)({\n    label,\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.U, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue || null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F('Must be a string');\n      }\n      return value === '' ? null : value;\n    },\n    validate(value) {\n      const message = validateUrl(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.F(message);\n      }\n      (0,_index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.c)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction ignored() {\n  return {\n    kind: 'form',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return {\n        value: undefined\n      };\n    },\n    parse(value) {\n      return {\n        value\n      };\n    },\n    serialize(value) {\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    label: 'Ignored',\n    reader: {\n      parse(value) {\n        return value;\n      }\n    }\n  };\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  array: array,\n  blocks: blocks,\n  checkbox: checkbox,\n  child: child,\n  cloudImage: cloudImage,\n  conditional: conditional,\n  date: date,\n  datetime: datetime,\n  document: _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.d,\n  empty: empty,\n  emptyDocument: emptyDocument,\n  emptyContent: emptyContent,\n  file: file,\n  image: image,\n  integer: _index_9722793d_node_react_server_js__WEBPACK_IMPORTED_MODULE_6__.i,\n  multiRelationship: multiRelationship,\n  multiselect: multiselect,\n  number: number,\n  object: _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.o,\n  pathReference: pathReference,\n  relationship: relationship,\n  select: select,\n  slug: slug,\n  text: _index_10ea50e2_node_react_server_js__WEBPACK_IMPORTED_MODULE_1__.t,\n  url: url,\n  ignored: ignored,\n  mdx: _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.m,\n  markdoc: _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_3__.a\n});\n\nfunction BlockWrapper() {}\nfunction NotEditable() {}\nfunction ToolbarSeparator() {}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/keystatic-core.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/core/dist/read-local-c89358f4.node.react-server.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@keystatic/core/dist/read-local-c89358f4.node.react-server.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getAllowedDirectories),\n/* harmony export */   r: () => (/* binding */ readToDirEntries)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var _index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-b2de9be1.node.react-server.js */ \"(rsc)/./node_modules/@keystatic/core/dist/index-b2de9be1.node.react-server.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ignore */ \"(rsc)/./node_modules/ignore/index.js\");\n\n\n\n\n\n\n\n\nasync function readDirEntries(dir) {\n  let entries;\n  try {\n    entries = await fs_promises__WEBPACK_IMPORTED_MODULE_0__.readdir(dir, {\n      withFileTypes: true\n    });\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return [];\n    }\n    throw err;\n  }\n  return entries;\n}\nasync function collectEntriesInDir(baseDir, ancestors) {\n  const currentRelativeDir = ancestors.map(p => p.segment).join('/');\n  const entries = await readDirEntries(path__WEBPACK_IMPORTED_MODULE_1__.join(baseDir, currentRelativeDir));\n  const gitignore = entries.find(entry => entry.isFile() && entry.name === '.gitignore');\n  const gitignoreFilterForDescendents = gitignore ? ignore__WEBPACK_IMPORTED_MODULE_6__().add(await fs_promises__WEBPACK_IMPORTED_MODULE_0__.readFile(path__WEBPACK_IMPORTED_MODULE_1__.join(baseDir, currentRelativeDir, gitignore.name), 'utf8')).createFilter() : () => true;\n  const pathSegments = ancestors.map(x => x.segment);\n  return (await Promise.all(entries.filter(entry => {\n    if (!entry.isDirectory() && !entry.isFile() || entry.name === '.git' || entry.name === 'node_modules' || entry.name === '.next') {\n      return false;\n    }\n    const innerPath = `${pathSegments.concat(entry.name).join('/')}${entry.isDirectory() ? '/' : ''}`;\n    if (!gitignoreFilterForDescendents(innerPath)) {\n      return false;\n    }\n    let currentPath = entry.name;\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n      const ancestor = ancestors[i];\n      currentPath = `${ancestor.segment}/${currentPath}`;\n      if (!ancestor.gitignoreFilterForDescendents(currentPath)) {\n        return false;\n      }\n    }\n    return true;\n  }).map(async entry => {\n    if (entry.isDirectory()) {\n      return collectEntriesInDir(baseDir, [...ancestors, {\n        gitignoreFilterForDescendents,\n        segment: entry.name\n      }]);\n    } else {\n      const innerPath = pathSegments.concat(entry.name).join('/');\n      const contents = await fs_promises__WEBPACK_IMPORTED_MODULE_0__.readFile(path__WEBPACK_IMPORTED_MODULE_1__.join(baseDir, innerPath));\n      return {\n        path: innerPath,\n        contents: {\n          byteLength: contents.byteLength,\n          sha: await (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.i)(contents)\n        }\n      };\n    }\n  }))).flat();\n}\nasync function readToDirEntries(baseDir) {\n  const additions = await collectEntriesInDir(baseDir, []);\n  const {\n    entries\n  } = await (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.u)(new Map(), {\n    additions: additions,\n    deletions: []\n  });\n  return entries;\n}\nfunction getAllowedDirectories(config) {\n  const allowedDirectories = [];\n  for (const [collection, collectionConfig] of Object.entries((_config$collections = config.collections) !== null && _config$collections !== void 0 ? _config$collections : {})) {\n    var _config$collections;\n    allowedDirectories.push(...(0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.b)((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.o)(collectionConfig.schema), (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.c)(config, collection), undefined, {\n      data: 'yaml',\n      contentField: undefined,\n      dataLocation: 'index'\n    }));\n    if (collectionConfig.template) {\n      allowedDirectories.push(collectionConfig.template);\n    }\n  }\n  for (const [singleton, singletonConfig] of Object.entries((_config$singletons = config.singletons) !== null && _config$singletons !== void 0 ? _config$singletons : {})) {\n    var _config$singletons;\n    allowedDirectories.push(...(0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.b)((0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.o)(singletonConfig.schema), (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.h)(config, singleton), undefined, (0,_index_b2de9be1_node_react_server_js__WEBPACK_IMPORTED_MODULE_2__.e)(config, singleton)));\n  }\n  return [...new Set(allowedDirectories)];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvcmVhZC1sb2NhbC1jODkzNThmNC5ub2RlLnJlYWN0LXNlcnZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkI7QUFDTDtBQUM2TDtBQUMxTDtBQUNaO0FBQ2tCO0FBQ0w7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnREFBVTtBQUM5QjtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHNDQUFTO0FBQ2hEO0FBQ0Esb0RBQW9ELG1DQUFNLGFBQWEsaURBQVcsQ0FBQyxzQ0FBUztBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDBDQUEwQyxFQUFFLCtCQUErQjtBQUNwRztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxRQUFRO0FBQy9DO0FBQ0EsdUJBQXVCLGlCQUFpQixHQUFHLFlBQVk7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ047QUFDQSw2QkFBNkIsaURBQVcsQ0FBQyxzQ0FBUztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1RUFBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksUUFBUSx1RUFBcUI7QUFDakM7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhLQUE4SztBQUM5SztBQUNBLCtCQUErQix1RUFBd0IsQ0FBQyx1RUFBTSwyQkFBMkIsdUVBQWlCO0FBQzFHO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdLQUF3SztBQUN4SztBQUNBLCtCQUErQix1RUFBd0IsQ0FBQyx1RUFBTSwwQkFBMEIsdUVBQWdCLGdDQUFnQyx1RUFBa0I7QUFDMUo7QUFDQTtBQUNBOztBQUU2RCIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy9Aa2V5c3RhdGljL2NvcmUvZGlzdC9yZWFkLWxvY2FsLWM4OTM1OGY0Lm5vZGUucmVhY3Qtc2VydmVyLmpzPzhjZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzL3Byb21pc2VzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgYiBhcyBnZXREaXJlY3Rvcmllc0ZvclRyZWVLZXksIGMgYXMgZ2V0Q29sbGVjdGlvblBhdGgsIG8gYXMgb2JqZWN0LCBlIGFzIGdldFNpbmdsZXRvbkZvcm1hdCwgaCBhcyBnZXRTaW5nbGV0b25QYXRoLCB1IGFzIHVwZGF0ZVRyZWVXaXRoQ2hhbmdlcywgaSBhcyBibG9iU2hhIH0gZnJvbSAnLi9pbmRleC1iMmRlOWJlMS5ub2RlLnJlYWN0LXNlcnZlci5qcyc7XG5pbXBvcnQgJ3JlYWN0L2pzeC1ydW50aW1lJztcbmltcG9ydCAnZW1lcnknO1xuaW1wb3J0ICdAYnJhaW50cmVlL3Nhbml0aXplLXVybCc7XG5pbXBvcnQgaWdub3JlIGZyb20gJ2lnbm9yZSc7XG5cbmFzeW5jIGZ1bmN0aW9uIHJlYWREaXJFbnRyaWVzKGRpcikge1xuICBsZXQgZW50cmllcztcbiAgdHJ5IHtcbiAgICBlbnRyaWVzID0gYXdhaXQgZnMucmVhZGRpcihkaXIsIHtcbiAgICAgIHdpdGhGaWxlVHlwZXM6IHRydWVcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKGVyci5jb2RlID09PSAnRU5PRU5UJykge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICB0aHJvdyBlcnI7XG4gIH1cbiAgcmV0dXJuIGVudHJpZXM7XG59XG5hc3luYyBmdW5jdGlvbiBjb2xsZWN0RW50cmllc0luRGlyKGJhc2VEaXIsIGFuY2VzdG9ycykge1xuICBjb25zdCBjdXJyZW50UmVsYXRpdmVEaXIgPSBhbmNlc3RvcnMubWFwKHAgPT4gcC5zZWdtZW50KS5qb2luKCcvJyk7XG4gIGNvbnN0IGVudHJpZXMgPSBhd2FpdCByZWFkRGlyRW50cmllcyhwYXRoLmpvaW4oYmFzZURpciwgY3VycmVudFJlbGF0aXZlRGlyKSk7XG4gIGNvbnN0IGdpdGlnbm9yZSA9IGVudHJpZXMuZmluZChlbnRyeSA9PiBlbnRyeS5pc0ZpbGUoKSAmJiBlbnRyeS5uYW1lID09PSAnLmdpdGlnbm9yZScpO1xuICBjb25zdCBnaXRpZ25vcmVGaWx0ZXJGb3JEZXNjZW5kZW50cyA9IGdpdGlnbm9yZSA/IGlnbm9yZSgpLmFkZChhd2FpdCBmcy5yZWFkRmlsZShwYXRoLmpvaW4oYmFzZURpciwgY3VycmVudFJlbGF0aXZlRGlyLCBnaXRpZ25vcmUubmFtZSksICd1dGY4JykpLmNyZWF0ZUZpbHRlcigpIDogKCkgPT4gdHJ1ZTtcbiAgY29uc3QgcGF0aFNlZ21lbnRzID0gYW5jZXN0b3JzLm1hcCh4ID0+IHguc2VnbWVudCk7XG4gIHJldHVybiAoYXdhaXQgUHJvbWlzZS5hbGwoZW50cmllcy5maWx0ZXIoZW50cnkgPT4ge1xuICAgIGlmICghZW50cnkuaXNEaXJlY3RvcnkoKSAmJiAhZW50cnkuaXNGaWxlKCkgfHwgZW50cnkubmFtZSA9PT0gJy5naXQnIHx8IGVudHJ5Lm5hbWUgPT09ICdub2RlX21vZHVsZXMnIHx8IGVudHJ5Lm5hbWUgPT09ICcubmV4dCcpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgaW5uZXJQYXRoID0gYCR7cGF0aFNlZ21lbnRzLmNvbmNhdChlbnRyeS5uYW1lKS5qb2luKCcvJyl9JHtlbnRyeS5pc0RpcmVjdG9yeSgpID8gJy8nIDogJyd9YDtcbiAgICBpZiAoIWdpdGlnbm9yZUZpbHRlckZvckRlc2NlbmRlbnRzKGlubmVyUGF0aCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IGN1cnJlbnRQYXRoID0gZW50cnkubmFtZTtcbiAgICBmb3IgKGxldCBpID0gYW5jZXN0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBjb25zdCBhbmNlc3RvciA9IGFuY2VzdG9yc1tpXTtcbiAgICAgIGN1cnJlbnRQYXRoID0gYCR7YW5jZXN0b3Iuc2VnbWVudH0vJHtjdXJyZW50UGF0aH1gO1xuICAgICAgaWYgKCFhbmNlc3Rvci5naXRpZ25vcmVGaWx0ZXJGb3JEZXNjZW5kZW50cyhjdXJyZW50UGF0aCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSkubWFwKGFzeW5jIGVudHJ5ID0+IHtcbiAgICBpZiAoZW50cnkuaXNEaXJlY3RvcnkoKSkge1xuICAgICAgcmV0dXJuIGNvbGxlY3RFbnRyaWVzSW5EaXIoYmFzZURpciwgWy4uLmFuY2VzdG9ycywge1xuICAgICAgICBnaXRpZ25vcmVGaWx0ZXJGb3JEZXNjZW5kZW50cyxcbiAgICAgICAgc2VnbWVudDogZW50cnkubmFtZVxuICAgICAgfV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBpbm5lclBhdGggPSBwYXRoU2VnbWVudHMuY29uY2F0KGVudHJ5Lm5hbWUpLmpvaW4oJy8nKTtcbiAgICAgIGNvbnN0IGNvbnRlbnRzID0gYXdhaXQgZnMucmVhZEZpbGUocGF0aC5qb2luKGJhc2VEaXIsIGlubmVyUGF0aCkpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aDogaW5uZXJQYXRoLFxuICAgICAgICBjb250ZW50czoge1xuICAgICAgICAgIGJ5dGVMZW5ndGg6IGNvbnRlbnRzLmJ5dGVMZW5ndGgsXG4gICAgICAgICAgc2hhOiBhd2FpdCBibG9iU2hhKGNvbnRlbnRzKVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfSkpKS5mbGF0KCk7XG59XG5hc3luYyBmdW5jdGlvbiByZWFkVG9EaXJFbnRyaWVzKGJhc2VEaXIpIHtcbiAgY29uc3QgYWRkaXRpb25zID0gYXdhaXQgY29sbGVjdEVudHJpZXNJbkRpcihiYXNlRGlyLCBbXSk7XG4gIGNvbnN0IHtcbiAgICBlbnRyaWVzXG4gIH0gPSBhd2FpdCB1cGRhdGVUcmVlV2l0aENoYW5nZXMobmV3IE1hcCgpLCB7XG4gICAgYWRkaXRpb25zOiBhZGRpdGlvbnMsXG4gICAgZGVsZXRpb25zOiBbXVxuICB9KTtcbiAgcmV0dXJuIGVudHJpZXM7XG59XG5mdW5jdGlvbiBnZXRBbGxvd2VkRGlyZWN0b3JpZXMoY29uZmlnKSB7XG4gIGNvbnN0IGFsbG93ZWREaXJlY3RvcmllcyA9IFtdO1xuICBmb3IgKGNvbnN0IFtjb2xsZWN0aW9uLCBjb2xsZWN0aW9uQ29uZmlnXSBvZiBPYmplY3QuZW50cmllcygoX2NvbmZpZyRjb2xsZWN0aW9ucyA9IGNvbmZpZy5jb2xsZWN0aW9ucykgIT09IG51bGwgJiYgX2NvbmZpZyRjb2xsZWN0aW9ucyAhPT0gdm9pZCAwID8gX2NvbmZpZyRjb2xsZWN0aW9ucyA6IHt9KSkge1xuICAgIHZhciBfY29uZmlnJGNvbGxlY3Rpb25zO1xuICAgIGFsbG93ZWREaXJlY3Rvcmllcy5wdXNoKC4uLmdldERpcmVjdG9yaWVzRm9yVHJlZUtleShvYmplY3QoY29sbGVjdGlvbkNvbmZpZy5zY2hlbWEpLCBnZXRDb2xsZWN0aW9uUGF0aChjb25maWcsIGNvbGxlY3Rpb24pLCB1bmRlZmluZWQsIHtcbiAgICAgIGRhdGE6ICd5YW1sJyxcbiAgICAgIGNvbnRlbnRGaWVsZDogdW5kZWZpbmVkLFxuICAgICAgZGF0YUxvY2F0aW9uOiAnaW5kZXgnXG4gICAgfSkpO1xuICAgIGlmIChjb2xsZWN0aW9uQ29uZmlnLnRlbXBsYXRlKSB7XG4gICAgICBhbGxvd2VkRGlyZWN0b3JpZXMucHVzaChjb2xsZWN0aW9uQ29uZmlnLnRlbXBsYXRlKTtcbiAgICB9XG4gIH1cbiAgZm9yIChjb25zdCBbc2luZ2xldG9uLCBzaW5nbGV0b25Db25maWddIG9mIE9iamVjdC5lbnRyaWVzKChfY29uZmlnJHNpbmdsZXRvbnMgPSBjb25maWcuc2luZ2xldG9ucykgIT09IG51bGwgJiYgX2NvbmZpZyRzaW5nbGV0b25zICE9PSB2b2lkIDAgPyBfY29uZmlnJHNpbmdsZXRvbnMgOiB7fSkpIHtcbiAgICB2YXIgX2NvbmZpZyRzaW5nbGV0b25zO1xuICAgIGFsbG93ZWREaXJlY3Rvcmllcy5wdXNoKC4uLmdldERpcmVjdG9yaWVzRm9yVHJlZUtleShvYmplY3Qoc2luZ2xldG9uQ29uZmlnLnNjaGVtYSksIGdldFNpbmdsZXRvblBhdGgoY29uZmlnLCBzaW5nbGV0b24pLCB1bmRlZmluZWQsIGdldFNpbmdsZXRvbkZvcm1hdChjb25maWcsIHNpbmdsZXRvbikpKTtcbiAgfVxuICByZXR1cm4gWy4uLm5ldyBTZXQoYWxsb3dlZERpcmVjdG9yaWVzKV07XG59XG5cbmV4cG9ydCB7IGdldEFsbG93ZWREaXJlY3RvcmllcyBhcyBnLCByZWFkVG9EaXJFbnRyaWVzIGFzIHIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/core/dist/read-local-c89358f4.node.react-server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@keystatic/next/dist/keystatic-next-route-handler.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@keystatic/next/dist/keystatic-next-route-handler.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeRouteHandler: () => (/* binding */ makeRouteHandler)\n/* harmony export */ });\n/* harmony import */ var _keystatic_core_api_generic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @keystatic/core/api/generic */ \"(rsc)/./node_modules/@keystatic/core/dist/keystatic-core-api-generic.node.react-server.js\");\n\n\nfunction makeRouteHandler(_config) {\n  const handler = (0,_keystatic_core_api_generic__WEBPACK_IMPORTED_MODULE_0__.makeGenericAPIRouteHandler)(_config, {\n    slugEnvName: 'NEXT_PUBLIC_KEYSTATIC_GITHUB_APP_SLUG'\n  });\n  async function wrappedHandler(request) {\n    const url = new URL(request.url);\n    // next replaces 127.0.0.1 with localhost in the url or something like that\n    if (url.hostname === 'localhost') {\n      url.hostname = '127.0.0.1';\n      request = new Request(url.toString(), request);\n    }\n    const {\n      body,\n      headers,\n      status\n    } = await handler(request);\n    return new Response(body, {\n      status,\n      headers\n    });\n  }\n  return {\n    GET: wrappedHandler,\n    POST: wrappedHandler\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9uZXh0L2Rpc3Qva2V5c3RhdGljLW5leHQtcm91dGUtaGFuZGxlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5RTs7QUFFekU7QUFDQSxrQkFBa0IsdUZBQTBCO0FBQzVDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9uZXh0L2Rpc3Qva2V5c3RhdGljLW5leHQtcm91dGUtaGFuZGxlci5qcz8wZTg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VHZW5lcmljQVBJUm91dGVIYW5kbGVyIH0gZnJvbSAnQGtleXN0YXRpYy9jb3JlL2FwaS9nZW5lcmljJztcblxuZnVuY3Rpb24gbWFrZVJvdXRlSGFuZGxlcihfY29uZmlnKSB7XG4gIGNvbnN0IGhhbmRsZXIgPSBtYWtlR2VuZXJpY0FQSVJvdXRlSGFuZGxlcihfY29uZmlnLCB7XG4gICAgc2x1Z0Vudk5hbWU6ICdORVhUX1BVQkxJQ19LRVlTVEFUSUNfR0lUSFVCX0FQUF9TTFVHJ1xuICB9KTtcbiAgYXN5bmMgZnVuY3Rpb24gd3JhcHBlZEhhbmRsZXIocmVxdWVzdCkge1xuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgIC8vIG5leHQgcmVwbGFjZXMgMTI3LjAuMC4xIHdpdGggbG9jYWxob3N0IGluIHRoZSB1cmwgb3Igc29tZXRoaW5nIGxpa2UgdGhhdFxuICAgIGlmICh1cmwuaG9zdG5hbWUgPT09ICdsb2NhbGhvc3QnKSB7XG4gICAgICB1cmwuaG9zdG5hbWUgPSAnMTI3LjAuMC4xJztcbiAgICAgIHJlcXVlc3QgPSBuZXcgUmVxdWVzdCh1cmwudG9TdHJpbmcoKSwgcmVxdWVzdCk7XG4gICAgfVxuICAgIGNvbnN0IHtcbiAgICAgIGJvZHksXG4gICAgICBoZWFkZXJzLFxuICAgICAgc3RhdHVzXG4gICAgfSA9IGF3YWl0IGhhbmRsZXIocmVxdWVzdCk7XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShib2R5LCB7XG4gICAgICBzdGF0dXMsXG4gICAgICBoZWFkZXJzXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBHRVQ6IHdyYXBwZWRIYW5kbGVyLFxuICAgIFBPU1Q6IHdyYXBwZWRIYW5kbGVyXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VSb3V0ZUhhbmRsZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@keystatic/next/dist/keystatic-next-route-handler.js\n");

/***/ })

};
;